{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/LinearProgressWithLabel.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","Components/Tasks/JSchemaCard.js","Components/form/Loader.js","Components/form/CustomFileUpload.js","Components/Page/Page.js","Components/Tasks/JSchemaTask.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","messages","userRanks","setUserRanks","setUserPages","snap","forEach","id","catch","onSnapshot","data","ranks","length","where","snapshot","docChanges","change","type","prevState","className","Divider","to","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","size","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","map","message","i","justify","Typography","flex","title","Button","update","shown","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","name","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","marginBottom","marginTop","paddingRight","formControl","maxWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","a","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","TabPanel","other","role","hidden","p","a11yProps","paddingTop","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","push","error","Paper","Tabs","newValue","centered","Tab","task","Form","uploadsRef","feedback_type","hideActions","showOk","handleOk","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","uploading","setUploading","useParams","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","Object","keys","storage","child","v","put","getDownloadURL","url","url_wo_token","split","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","CircularProgress","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","Case","caseId","disableCase","setDisable","setMessage","sort","b","parseInt","order","task_type","taskType","case_type","case_stage_id","border","item","Cases","allCases","setCases","setRanks","getCasesFromFirebase","cases","c","hide","down","dt","setShown","date","opacity","paddingLeft","toDate","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","unsubscribe","Notification","queryString","require","Home","token","setToken","tgId","setTgId","makeToken","uuid","Date","now","unsubscribeUser","unsubscribeUserPrivate","oldToken","tg_token","oldDate","substring","moment","diff","newToken","tg_id","urlString","parse","location","search","rank","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","assigned_users","users","find","getUserInfo","PaginatedTasks","page","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","floor","start","end","slice","pagination","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","taskId","select","FAQ","handleClickApplyFilters","tasklist","taskList","questionList","apply","JSchemaTaskCard","cardData","history","useHistory","cardType","stage","stageID","pCase","waiting","setWaiting","sendCallbackRequest","callback","callbackType","callbackName","uuidv4","FieldPath","documentId","showCard","Loader","fileBeingUploaded","setFileBeingUploaded","storageRef","progress","on","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","downloadURL","filesLinks","contents","newState","assign","CustomFileUpload","currentUserUid","connectingTelegram","setConnectingTelegram","telegramConnected","setTelegramConnected","pathToFolder","handleTgConnectClick","fileUpload","linksToFiles","formData","schema","path","Page","pageData","setPageData","userCases","setUserCases","setAllCases","userTasks","setUserTasks","filteredStages","setFilteredStages","tabValue","setTabValue","availableStages","setAvailableStages","bgStages","setBgStages","filterFormData","setFilterFormData","availableTasks","setAvailableTasks","userRanksDescriptions","setUserRanksDescriptions","intersection","casesPath","complexStateFirebaseUpdate","simpleStateFirebaseUpdate","caseWithSelectableTasks","limit","fs","region","setFunction","subState","newFilteredStages","cloneDeep","caseID","stageId","ranks_write","creatable","rank_limit_number","setIntersection","maxTasksPerStage","calculatemaxTasksPerStage","tasksPerStage","countTasksPerStage","occurrences","values","rArray","limits","largestLimit","arrA","arrB","setA","Set","setB","_intersection","elem","has","displayTasks","stages","caseType","handleFormChange","filters","formQuestions","properties","formUI","stageFilter","filterQuestion","end_ui_schema","uiSchema","e","showFilters","JSchemaTask","formResponses","setFormResponses","taskForm","setTaskForm","mergedForm","setMergedForm","taskMetadata","setTaskMetadata","caseStages","setCaseStages","backgroundTasks","setBackgroundTasks","backgroundTaskForms","setBackgroundTaskForms","mergedBackgroundForms","setMergedBackgroundForms","backgroundResponses","setBackgroundResponses","setCurrentFocus","gRef","setGRef","formStatus","setFormStatus","includes","changes","deletes","modifyResponses","mergedBgForms","mergeForm","backgroundTasksList","backgroundStages","caseForms","tForm","cForms","start_ui_schema","form_questions","ui_schema","definitions","uiOrder","goBack","changeTaskStatus","fields","customFileUpload","onFocus","onBlur","k","delete","handleBlur","additionalButtons","App","exact","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6cd4840.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n              console.log('User Exist')\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email,\r\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Badge } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: 'white',\r\n\t\tboxShadow: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor: 'black',\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\tconst { window } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst menuOpen = Boolean(anchorEl);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\r\n\tconst [moderator, setModerator] = useState(false)\r\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\r\n\tconst [messages, setMessages] = useState([])\r\n\tconst [userRanks, setUserRanks] = useState([])\r\n\tconst [userPages, setUserPages] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (doc.id === currentUser.uid) {\r\n\t\t\t\t\t\tconsole.log('moderator')\r\n\t\t\t\t\t\tsetModerator(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}).catch(() => setModerator(false))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.collection(\"user_private\")\r\n\t\t\t\t.doc(\"private\")\r\n\t\t\t\t.onSnapshot(doc => {\r\n\t\t\t\t\tif (doc.data()) {\r\n\t\t\t\t\t\tsetUserRanks(doc.data().ranks)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userRanks.length > 0) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", userRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log(\"User pages: \", change.doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [userRanks])\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \t//let unsubscribe = () => {}\r\n\t// \tif (currentUser) {\r\n\t// \t\tfirebase.firestore()\r\n\t// \t\t\t.collection('notifications')\r\n\t// \t\t\t.where('user_id', 'array-contains', currentUser.uid)\r\n\t// \t\t\t.onSnapshot(snap => {\r\n\t// \t\t\tconsole.log(snap.size)\r\n\t// \t\t\tlet m = []\r\n\t// \t\t\tlet count = 0\r\n\t// \t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\tif (!doc.data().shown) {\r\n\t// \t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\tcount++\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n\t// \t\t\tsetNumOfMessages(count)\r\n\t// \t\t\tsetMessages(m)\r\n\t// \t\t})\r\n\t// \t}\r\n\t// \t//return () => unsubscribe\r\n\t// }, [currentUser])\r\n\r\n\tconst updateFirestoreStatus = (id, index) => {\r\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n\t}\r\n\r\n\tconst handleMenu = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null)\r\n\t}\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/tasks\">Задания</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/request\">Получить задание</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t</ul>\r\n\t\t\t\t{/* <ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tObject.keys(userPages).map(page => {\r\n\t\t\t\t\t\t\t\treturn <li key={page}> <Link to={\"/p/\" + page}>\r\n\t\t\t\t\t\t\t\t\t{userPages[page].name}\r\n\t\t\t\t\t\t\t\t</Link> </li>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul> */}\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{currentUser &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\topen={menuOpen}\r\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\r\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container key={message.id} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t{currentUser\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span style={{ color: 'black', fontSize: 12, marginLeft: 7 }}>\r\n\t\t\t\t\t\t\t\t{currentUser.email}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\" size=\"small\"\r\n\t\t\t\t\t\t\t\tonClick={() => firebase.auth().signOut()}>\r\n\t\t\t\t\t\t\t\tВыход\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n\t/**\r\n\t * Injected by the documentation to work in an iframe.\r\n\t * You won't need it on your project.\r\n\t */\r\n\twindow: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props) => {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default LinearProgressWithLabel","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 100,\r\n\t\tmaxWidth: 300\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ?\r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, {useState, useEffect, useContext} from 'react'\r\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport TaskCard from './Card'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\n\r\nconst Tasks = (props) => {\r\n    const classes = useStyles()\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [submittedTasks, setSubmitted] = useState(null)\r\n    const [quickTasks, setQuickTasks] = useState(null)\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [value, setValue] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            let submitted = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        if (doc.data().is_complete) {\r\n                            submitted.push({id: doc.id, ...doc.data()})\r\n                        } else {\r\n                            tasks.push({id: doc.id, ...doc.data()})\r\n                        }\r\n\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    setTasks(tasks)\r\n                    setSubmitted(submitted)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n            {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\r\n            {/*<Typography variant=\"h4\">Задания</Typography>*/}\r\n            <div className={classes.root}>\r\n                <Paper position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                          aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\r\n                        <Tab label=\"Выполненные\" {...a11yProps(1)}/>\r\n                        {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                    </Tabs>\r\n                </Paper>\r\n            </div>\r\n            <TabPanel value={value} index={0}>\r\n                {allTasks && allTasks.map((task, i) => (\r\n                    <Grid key={'active_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                {submittedTasks && submittedTasks.map((task, i) => (\r\n                    <Grid key={'submitted_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n           {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n            attachMaterials={question.attachMaterials}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n          {props.hideActions ? \"\" :\r\n              props.showOk ?\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleOk} color=\"primary\">\r\n                          Ok\r\n                      </Button>\r\n                  </DialogActions>\r\n                  :\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleClose} color=\"primary\">\r\n                          Отмена\r\n                      </Button>\r\n                      <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n                          Подтвердить\r\n                      </Button>\r\n                  </DialogActions>}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = async () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tsetUploading(true)\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tawait Promise.all(value.map(async v => {\r\n\t\t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t\t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t\t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t\t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tsetUploaded(true)\r\n\t\t\tsetUploading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait upload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tconsole.log(\"Task Locked\")\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thideActions={uploading || uploaded}\r\n\t\t\t\t\ttitle={uploading ? \"Загрузка файлов\" : uploaded ? \"Файлы загружены\" : \"Отправить задание?\"}\r\n\t\t\t\t\tcontent={uploading ? <CircularProgress /> : uploaded ? \"Спасибо\" : \"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId, userRanks } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // before change\r\n                        //tasks.push({ id: doc.id, ...doc.data() }) \r\n\r\n                        //after change\r\n                        const ranks = doc.data().ranks\r\n                        console.log('RANKS')\r\n                        console.log(ranks)\r\n                        console.log(userRanks)\r\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        // }\r\n                        // else {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\r\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\r\n                        // }\r\n                        tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        \r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n                if (snap.size < 3) {\r\n                    console.log(\"SIZE\", snap.size)\r\n                    setDisable(false)\r\n                }\r\n                else {\r\n                    setDisable(true)\r\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser, disableCase, open])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 0px' }}>\r\n                        {message}\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n    const [userRanks, setRanks] = useState([])\r\n\r\n    // New\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\r\n\r\n                if (doc && doc.exists) {\r\n\r\n                    let ranks = doc.data().ranks\r\n                    console.log(ranks)\r\n                    setRanks(ranks)\r\n                    getCasesFromFirebase(ranks)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    // /////// Old ////////\r\n    // useEffect(() => {\r\n    //     if (currentUser) {\r\n    //         let cases = []\r\n    //         console.log(\"Fired\")\r\n    //         firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n    //             .then((querySnapshot) => {\r\n    //                 querySnapshot.forEach((doc) => {\r\n    //                     cases.push({ id: doc.id, ...doc.data() })\r\n    //                 });\r\n    //             })\r\n    //             .then(() => {\r\n    //                 setCases(cases)\r\n    //                 setReady(true)\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 console.log(\"Error getting documents: \", error);\r\n    //             });\r\n    //     }\r\n    // }, [currentUser])\r\n    // //////////////\r\n\r\n    const getCasesFromFirebase = (ranks) => {\r\n        let cases = []\r\n        console.log(\"Fired\")\r\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.data())\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c, i) => {\r\n                if (c.hide) {\r\n                    return null\r\n                }\r\n                else {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxWidth: 300\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, setShown, shown, date } = props\r\n\r\n\tconst getFormatDate = (dt) => {\r\n\t\t// let month = '' + (d.getMonth() + 1)\r\n\t\t// let day = '' + d.getDate()\r\n\t\t// let year = d.getFullYear()\r\n\r\n\t\t// if (month.length < 2)\r\n\t\t// \tmonth = '0' + month;\r\n\t\t// if (day.length < 2)\r\n\t\t// \tday = '0' + day;\r\n\t\tlet formatDate = `${\r\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\r\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\r\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\r\n\r\n\t\treturn formatDate\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                console.log(messages[0].created_date.toDate())\r\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [tgId, setTgId] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        let unsubscribeUser = () => {}\r\n        let unsubscribeUserPrivate = () => {}\r\n        if (currentUser) {\r\n            unsubscribeUser = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .onSnapshot(doc => {\r\n\r\n                    let oldToken;\r\n                    if (doc.exists && doc.data().tg_token) {\r\n                        oldToken = doc.data().tg_token\r\n                    } else {\r\n                        oldToken = false\r\n                    }\r\n\r\n                    console.log(oldToken)\r\n                    if (oldToken) {\r\n                        console.log(oldToken)\r\n                        let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                        let date = moment().diff(oldDate, 'hours')\r\n                        console.log(date)\r\n                        if (date > 0) {\r\n                            let newToken = makeToken()\r\n                            firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\r\n                            setToken(newToken)\r\n                        } else {\r\n                            setToken(oldToken)\r\n                        }\r\n                    } else {\r\n                        console.log('no token')\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\r\n                        setToken(newToken)\r\n                    }\r\n                })\r\n            unsubscribeUserPrivate = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    console.log(\"TGID: \", doc.data().tg_id)\r\n                    if (doc.exists && \"tg_id\" in doc.data()) {\r\n                        console.log(\"TGID: \", doc.data().tg_id)\r\n                        setTgId(doc.data().tg_id)\r\n                    }\r\n                })\r\n        }\r\n        return () => {\r\n            unsubscribeUser()\r\n            unsubscribeUserPrivate()\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let urlString = queryString.parse(window.location.search)\r\n            if (urlString.rank) {\r\n                console.log(urlString.rank)\r\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log('creating request')\r\n                        firebase.firestore().collection('rank_requests').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            user_id: currentUser.uid,\r\n                            processed: false,\r\n                            rank: doc.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('no rank')\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid>\r\n                <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                    <Link variant=\"h5\" align=\"center\"\r\n                          href={\"https://kloopmedia.github.io/Journal/#/p/elections_monitoring\"}>ФОРМЫ ДЛЯ НАБЛЮДЕНИЯ НА\r\n                        ВЫБОРАХ</Link>\r\n                </Grid>\r\n                {tgId === \"\" ?\r\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                        <Typography style={{paddingBottom: 10}} variant=\"h5\" align=\"center\">Вы можете связать свой\r\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\r\n                        {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на\r\n                                бот</Link>\r\n                            : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд,\r\n                                перезагрузите страницу</Typography>}\r\n                    </Grid>\r\n                    :\r\n                    null}\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{padding: 20}} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\r\n                <br/>\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью\r\n                    аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1', 'Задание № 2.2', 'Задание № 2.3', 'Задание 3.1', 'Задание 3.2', 'Задание 3.3']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useContext } from 'react'\r\nimport { signInWithGoogle } from '../../util/Firebase'\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Signin = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n            <br />\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px grey solid',\r\n        padding: '0px 10px',\r\n        margin: 10,\r\n        background: 'yellow',\r\n\t\twidth: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    button: {\r\n        background: 'orange',\r\n        margin: '10px 0'\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { title, sendAnswer, taskId, questionId } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\r\n            </Box>\r\n            <TextField\r\n                label=\"Мой ответ\"\r\n                value={value}\r\n                style={{ background: 'white' }}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from './Card'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: '20px 0',\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst FAQ = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const classes = useStyles();\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\r\n\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value);\r\n    };\r\n\r\n    const handleClickApplyFilters = async (event) => {\r\n        let tasklist = await getTasks()\r\n        getQuestions(tasklist)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\r\n\r\n        if (taskType !== 'ВСЕ') {\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n        console.log('fired')\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\r\n            setTasks(tasksList)\r\n        })\r\n        return tasksList\r\n    }\r\n\r\n    const getQuestions = async (taskList) => {\r\n        let questionList = await taskList.map(async task => {\r\n            let arr = []\r\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\r\n                })\r\n            })\r\n            return arr\r\n        })\r\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\r\n    }\r\n\r\n    const sendAnswer = (taskId, questionId, answer) => {\r\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\r\n        console.log(taskId, answer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <FormControl className={classes.select}>\r\n                    <NativeSelect\r\n                        value={taskType}\r\n                        onChange={setTaskTypeHandler}\r\n                        name=\"filterTaskType\"\r\n                    >\r\n                        {\r\n                            taskTypes.map((taskType, i) => (\r\n                                <option key={taskType} value={taskType}>{taskType}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" className={classes.select}>\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                {questions\r\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\r\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FAQ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport firebase from \"../../util/Firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst JSchemaTaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { complete, id, cardColor, cardType, stage, stageID, task, user, pCase } = props\r\n\r\n\tconst [waiting, setWaiting] = useState(false)\r\n\tconst [newTaskId, setNewTaskId] = useState(null)\r\n\r\n\tconst handleOpen = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequest()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/t/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst sendCallbackRequest = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\thistory.push(\"/t/\" + change.doc.id)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tconst displayJSON = (cardData) => {\r\n\t\treturn Object.keys(cardData).map(stage => {\r\n\t\t\tconsole.log(\"STAGE: \", stage)\r\n\t\t\treturn Object.keys(cardData[stage]).map(response => {\r\n\t\t\t\tconsole.log(\"RESPONSE: \", response)\r\n\t\t\t\tif (response === \"attachedFiles\"){\r\n\t\t\t\t\tconsole.log(\"FILES: \")\r\n\t\t\t\t\treturn <div key={stage+response}>Files</div>\r\n\t\t\t\t} else return (\r\n\t\t\t\t\t<typography variant=\"body2\" component=\"p\" key={stage+response}>\r\n\t\t\t\t\t\t{console.log(\"TEXT: \", cardData[stage][response])}\r\n\t\t\t\t\t\t{JSON.stringify(cardData[stage][response], null, 2)}\r\n\t\t\t\t\t</typography>)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card key={id} className={classes.root} style={{background: cardColor}}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{stage.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\tСдано\r\n\t\t\t\t\t</Typography>}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t#{id}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t{(task && task.cardData && (cardType===\"selectable\" || (stage && stage.showCard)) ) ?\r\n\t\t\t\t\t\tdisplayJSON(task.cardData)\r\n\t\t\t\t\t\t//JSON.stringify(task.cardData, null, 2)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\"Задание: \" + stage.description}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t{waiting ?\r\n\t\t\t\t\t<CircularProgress/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>{(cardType === \"creatableUnlim\") ? \"СОЗДАТЬ НОВУЮ ФОРМУ\" : \"Открыть\"}</Button>\r\n\t\t\t\t}\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default JSchemaTaskCard","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport {cloneDeep} from \"lodash\";\r\n\r\n\r\nconst Loader = props => {\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState({})\r\n    //const [storedFiles, setStoredFiles] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     props.filesLinks.onSnapshot(doc => {\r\n    //         setStoredFiles(doc.data().contents)\r\n    //     });\r\n    // }, [props.filesLinks])\r\n\r\n\r\n    const upload = async files => {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = props.storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                    console.log('Upload is ' + progress + '% done');\r\n\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                }, error => {\r\n\r\n                    // A full list of error codes is available at\r\n                    // https://firebase.google.com/docs/storage/web/handle-errors\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n                            // User doesn't have permission to access the object\r\n                            break;\r\n\r\n                        case 'storage/canceled':\r\n                            // User canceled the upload\r\n                            break;\r\n\r\n                        default:\r\n                            // Unknown error occurred, inspect error.serverResponse\r\n                            break;\r\n                    }\r\n                }, () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(async downloadURL => {\r\n                        await props.filesLinks.set({contents: {[downloadURL]: {name: file.name, url: downloadURL}}},\r\n\t\t\t\t\t{merge: true})\r\n                        setFileBeingUploaded(prevState => {\r\n                            const newState = Object.assign({}, prevState)\r\n                            delete newState[file.name]\r\n                            return newState\r\n                        })\r\n                        console.log('File available at', downloadURL);\r\n                    });\r\n                });\r\n\r\n            // let url = await snap.ref.getDownloadURL()\r\n            // let url_wo_token = url.split(\"?\")[0]\r\n            // console.log(\"File uploaded: \", url)\r\n            // //await uploadFilesData(file.name, url_wo_token, key)\r\n        }));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files])\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                multiple\r\n            />\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <p>{filename}</p>\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>\r\n                </div>\r\n\r\n            )}\r\n            {/*{storedFiles ? <p>Сохраненные файлы</p> : <p></p>}*/}\r\n            {/*{Object.keys(storedFiles).map(fileUrl =>*/}\r\n            {/*    <div key={fileUrl}>*/}\r\n            {/*        <a href={fileUrl}>{storedFiles[fileUrl].name}</a>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader","import firebase from \"../../util/Firebase\";\r\nimport Loader from \"./Loader\";\r\nimport React, { useState } from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst CustomFileUpload = props => {\r\n\tconsole.log(\"All props: \", props)\r\n\tconsole.log(\"ID: \", props.taskID)\r\n\tconsole.log(\"Question ID: \", props.name)\r\n\tconsole.log(\"User UID: \", props.currentUserUid)\r\n\r\n\tconst [connectingTelegram, setConnectingTelegram] = useState(false)\r\n\tconst [telegramConnected, setTelegramConnected] = useState(false)\r\n\r\n\tlet pathToFolder = null\r\n\tlet handleTgConnectClick = null\r\n\tif (!props.disabled) {\r\n\t\tpathToFolder = firebase\r\n\t\t\t.storage()\r\n\t\t\t.ref(props.taskID)\r\n\t\t\t.child(props.name)\r\n\t\t\t.child(props.currentUserUid)\r\n\r\n\t\thandleTgConnectClick = async () => {\r\n\t\t\tsetConnectingTelegram(true)\r\n\t\t\tawait firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"users\")\r\n\t\t\t\t.doc(props.currentUserUid)\r\n\t\t\t\t.set({fileUpload: props.taskID + \"/\" + props.name }, {merge: true})\r\n\t\t\tsetConnectingTelegram(false)\r\n\t\t\tsetTelegramConnected(true)\r\n\r\n\t\t}\r\n\t}\r\n\tconst linksToFiles = firebase\r\n\t\t.firestore()\r\n\t\t.collection(\"tasks\")\r\n\t\t.doc(props.taskID)\r\n\t\t.collection(\"responses\")\r\n\t\t.doc(props.name)\r\n\r\n\tconsole.log(\"Props formData: \", props.formData)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.schema.title ? <div>{props.schema.title}</div> : <div></div>}\r\n\t\t\t{props.schema.description ? <div>{props.schema.description}</div> : <div></div>}\r\n\t\t\t{props.disabled ? null :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Loader storageRef={pathToFolder}\r\n\t\t\t\t\t\t\tfilesLinks={linksToFiles}/>\r\n\t\t\t\t\t{connectingTelegram ?\r\n\t\t\t\t\t\t<CircularProgress/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\ttelegramConnected ?\r\n\t\t\t\t\t\t\t<div>Вы можете начать загрузку файлов через бота. Все файлы, отправляемые боту, будут сохраняться здесь. После загрузки файлов через бот, не забудьте вернуться сюда и нажать \"ОТПРАВИТЬ\". <a href=\"https://t.me/journal_tg_bot\">Перейти в бот.</a></div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Вы так же можете загрузить сюда файлы через Телеграм-бота. Для этого нажмите кнопку ниже: </p>\r\n\t\t\t\t\t\t\t\t<button onClick={handleTgConnectClick}>Загрузка через бот</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{props.formData ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{Object.keys(props.formData).map(path =>\r\n\t\t\t\t\t\t<div key={path}>\r\n\t\t\t\t\t\t\t<a href={props.formData[path].url}>{props.formData[path].name}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div></div>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CustomFileUpload\r\n\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect, useParams } from 'react-router';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {Grid, Typography} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TaskCard from \"../Tasks/JSchemaCard\";\r\nimport { cloneDeep } from \"lodash\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\nconst Page = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tconst classes = useStyles()\r\n\r\n\tconst [pageData, setPageData] = useState({})\r\n    const [userRanks, setUserRanks] = useState([])\r\n    const [userCases, setUserCases] = useState({})\r\n    const [allCases, setAllCases] = useState({})\r\n    const [userTasks, setUserTasks] = useState({})\r\n    const [filteredStages, setFilteredStages] = useState({})\r\n    //const [unlimStages, setUnlimStages] = useState({})\r\n    const [tabValue, setTabValue] = useState(0)\r\n    const [availableStages, setAvailableStages] = useState({})\r\n    const [bgStages, setBgStages] = useState({})\r\n    const [filterFormData, setFilterFormData] = useState({})\r\n    const [availableTasks, setAvailableTasks] = useState({})\r\n    const [userRanksDescriptions, setUserRanksDescriptions] = useState({})\r\n    const [filterSettings, setFilterSettings] = useState(()=>{})\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"Page id: \", id)\r\n        console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => {}\r\n        if (currentUser) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('pages')\r\n                .doc(id)\r\n                .onSnapshot(doc => {\r\n                    setPageData(doc.data())\r\n                    console.log(\"Page data: \", doc.data())\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id])\r\n\r\n    useEffect(() => {\r\n\t\tconsole.log(\"Page id: \", id)\r\n        console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => {}\r\n        if (currentUser && pageData && pageData.ranks) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    setUserRanks(intersection(doc.data().ranks, pageData.ranks))\r\n                    console.log(\"User ranks: \", doc.data().ranks)\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id, pageData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0) {\r\n            const casesPath = firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"cases\")\r\n\r\n            pageData.cases.map(pCase => {\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_write\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setUserCases, pCase)\r\n                    })\r\n\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setAllCases, pCase)\r\n                    })\r\n\r\n\r\n            })\r\n\r\n            firebase.firestore()\r\n                .collection(\"tasks\")\r\n                .where(\"assigned_users\", \"array-contains\", currentUser.uid)\r\n                .where(\"case_type\", \"in\", pageData.cases)\r\n                .onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setUserTasks)\r\n                })\r\n\r\n            if (pageData.caseWithSelectableTasks) {\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableStages)\r\n                    })\r\n\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setBgStages)\r\n                    })\r\n\r\n                firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n    }, [currentUser, pageData, userRanks, id])\r\n\r\n\r\n    useEffect(() => {\r\n        let fs = () => {}\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0 && pageData.caseWithSelectableTasks) {\r\n\r\n            if (filterFormData && filterFormData.region && filterFormData.region.region){\r\n                setAvailableTasks({})\r\n                fs = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .where(\"cardData.emergency_form_filling.region.region\", \"==\", filterFormData.region.region)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n\r\n            } else {\r\n                setAvailableTasks({})\r\n                 fs = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n        return (fs)\r\n    }, [currentUser, pageData, userRanks, id, filterFormData])\r\n\r\n    const complexStateFirebaseUpdate = (snapshot, setFunction, subState) => {\r\n        snapshot.docChanges().forEach(change => {\r\n            if (change.type === \"added\" || change.type === \"modified\") {\r\n                setFunction(prevState => {\r\n                    const newState = Object.assign({}, prevState)\r\n                    if (!newState[subState]) {\r\n                        newState[subState] = {}\r\n                    }\r\n                    newState[subState][change.doc.id] = change.doc.data()\r\n                    console.log(\"User stages: \", newState)\r\n                    return newState\r\n                })\r\n            }\r\n            if (change.type === \"removed\") {\r\n                setFunction(prevState => {\r\n                    const newState = Object.assign({}, prevState)\r\n                    delete newState[subState][change.doc.id]\r\n                    return newState\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const simpleStateFirebaseUpdate = (snapshot, setFunction) => {\r\n        snapshot.docChanges().forEach(change => {\r\n            if (change.type === \"added\" || change.type === \"modified\") {\r\n                setFunction(prevState => (\r\n                    {...prevState, [change.doc.id]: change.doc.data()}\r\n                ))\r\n            }\r\n            if (change.type === \"removed\") {\r\n                setFunction(prevState => {\r\n                    const newState = Object.assign({}, prevState)\r\n                    delete newState[change.doc.id]\r\n                    return newState\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            const newFilteredStages = cloneDeep(userCases)\r\n            //let newUnlimStages = {}\r\n            Object.keys(userCases).map(caseID => {\r\n                Object.keys(userCases[caseID]).map(stageId => {\r\n                    const stage = userCases[caseID][stageId]\r\n                    if (stage.ranks_write &&\r\n                        Object.keys(stage.ranks_write).length > 0 &&\r\n                        intersection(stage.ranks_write, userRanks).length > 0 &&\r\n                        \"creatable\" in stage &&\r\n                        stage.creatable) {\r\n                        if (stage.rank_limit_number && Object.keys(stage.rank_limit_number).length > 0) {\r\n                            const setIntersection = intersection(Object.keys(stage.rank_limit_number), userRanks)\r\n                            if (setIntersection.length > 0) {\r\n                                const maxTasksPerStage = calculatemaxTasksPerStage(setIntersection, stage.rank_limit_number)\r\n                                const tasksPerStage = countTasksPerStage(stageId, userTasks)\r\n                                console.log(\"caseID: \", caseID)\r\n                                console.log(\"stageId: \", stageId)\r\n                                console.log(\"maxTasksPerStage: \", maxTasksPerStage)\r\n                                console.log(\"tasksPerStage: \", tasksPerStage)\r\n                                // if (tasksPerStage >= maxTasksPerStage) {\r\n                                //     console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                //     delete newFilteredStages[caseID][stageId]\r\n                                //     console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                // }\r\n                                if (tasksPerStage >= maxTasksPerStage) {\r\n                                    console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                    delete newFilteredStages[caseID][stageId]\r\n                                    console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                }\r\n                                console.log(\"userCases: \", userCases)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        delete newFilteredStages[caseID][stageId]\r\n                    }\r\n                })\r\n            })\r\n            setFilteredStages(newFilteredStages)\r\n            //setUnlimStages(newUnlimStages)\r\n        }\r\n    }, [currentUser, userCases, userTasks, id])\r\n\r\n\r\n    const countTasksPerStage = (stage, tasks) => {\r\n\t    let occurrences = 0\r\n        Object.values(tasks).map(task => {\r\n            if (task.case_stage_id === stage) {\r\n                occurrences++\r\n            }\r\n        })\r\n        return occurrences\r\n    }\r\n\r\n    const calculatemaxTasksPerStage = (rArray, limits) => {\r\n        let largestLimit = 0\r\n        rArray.map(v => {\r\n            if (limits[v] > largestLimit) {\r\n                largestLimit = limits[v]\r\n            }\r\n        })\r\n        return largestLimit\r\n    }\r\n\r\n    const intersection = (arrA, arrB) => {\r\n\t    const setA = new Set(arrA)\r\n        const setB = new Set(arrB)\r\n        let _intersection = new Set()\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem)\r\n            }\r\n        }\r\n        return [..._intersection]\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userRanks.length > 0) {\r\n            firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"ranks\")\r\n                .where(firebase.firestore.FieldPath.documentId(), \"in\", userRanks)\r\n                .onSnapshot(snapshot => {\r\n                    snapshot.docChanges().forEach(change => {\r\n                        if (change.type === \"added\" || change.type === \"modified\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                return {...prevState, [change.doc.id]: change.doc.data()}\r\n                            })\r\n                        }\r\n                        if (change.type === \"removed\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                const newState = Object.assign({}, prevState)\r\n                                delete newState[change.doc.id]\r\n                                return newState\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }, [userRanks])\r\n\r\n    const displayTasks = (tasks, stages, cases, cardType, complete) => {\r\n        const displayedTasks = Object.keys(tasks).map(taskId => {\r\n            const caseType = tasks[taskId].case_type\r\n            const stageId = tasks[taskId].case_stage_id\r\n\r\n            let stage = false\r\n\r\n            if (stages) {\r\n                if (stages[stageId]) {\r\n                    stage = stages[stageId]\r\n                }\r\n            } else if (cases && cases[caseType] && cases[caseType][stageId]) {\r\n                stage = cases[caseType][stageId]\r\n            }\r\n\r\n            if (stage && tasks[taskId].is_complete === complete) {\r\n                console.log(\"TASKS: \", tasks[taskId])\r\n                console.log(\"userStages: \", userCases)\r\n                return <Grid key={taskId} style={{padding: 10}}>\r\n                    <TaskCard\r\n                        stage={stage}\r\n                        stageID={stageId}\r\n                        cardType={cardType}\r\n                        task={tasks[taskId]}\r\n                        user={currentUser}\r\n                        pCase={caseType}\r\n                        id={taskId}/>\r\n                </Grid>\r\n            }\r\n        })\r\n        return displayedTasks\r\n    }\r\n\r\n    const showFilters = (stages, bgStages, formData, handleFormChange) => {\r\n        if (Object.keys(stages).length === 1 &&\r\n            stages[Object.keys(stages)[0]] &&\r\n            stages[Object.keys(stages)[0]].filters &&\r\n            Object.keys(stages[Object.keys(stages)[0]].filters).length > 0 &&\r\n            Object.keys(bgStages).length > 0\r\n        ) {\r\n            const stageID = Object.keys(stages)[0]\r\n            const stage = stages[stageID]\r\n            const filters = stage.filters\r\n            const formQuestions = {properties: {}}\r\n            let formUI = {}\r\n            Object.keys(filters).forEach(stageFilter => {\r\n                Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                    formQuestions.properties[filterQuestion] = bgStages[stageFilter].end.properties[filterQuestion]\r\n                    console.log(\"bgStages: \", bgStages)\r\n                    formUI[filterQuestion] = bgStages[stageFilter].end_ui_schema[filterQuestion]\r\n                })\r\n            })\r\n            return (\r\n                <JSchemaForm\r\n                    schema={formQuestions}\r\n                    uiSchema={formUI}\r\n                    formData={formData}\r\n                    onChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}\r\n                > </JSchemaForm>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const handleFilterFormChange = (e) => {\r\n\t    setFilterFormData(e.formData)\r\n        console.log(\"FilterFormChange: \", e.formData)\r\n    }\r\n\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n\r\n    return (<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        {/*{console.log(\"pageData: \", pageData)}*/}\r\n        {/*{console.log(\"userRanks: \", userRanks)}*/}\r\n        {/*{console.log(\"userCases: \", userCases)}*/}\r\n        {/*{console.log(\"userTasks: \", userTasks)}*/}\r\n        {/*{console.log(\"filteredStages: \", filteredStages)}*/}\r\n        {/*{console.log(\"availableStages: \", availableStages)}*/}\r\n        {/*{console.log(\"availableTasks: \", availableTasks)}*/}\r\n\r\n        {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n        {Object.keys(userRanksDescriptions).length > 0 ? userRanks.map(rank => (\r\n            <Typography variant=\"h5\" key={rank}>{userRanksDescriptions[rank].description}</Typography>\r\n        ))\r\n        : null}\r\n        <div className={classes.root}>\r\n            {/*{Object.keys(unlimStages).map(pCase => (*/}\r\n            {/*    Object.keys(unlimStages[pCase]).map(stage => (*/}\r\n            {/*        <Grid key={pCase + stage} style={{padding: 10}}>*/}\r\n            {/*            <TaskCard complete={false}*/}\r\n            {/*                      stage={unlimStages[pCase][stage]}*/}\r\n            {/*                      stageID={stage}*/}\r\n            {/*                      user={currentUser}*/}\r\n            {/*                      pCase={pCase}*/}\r\n            {/*                      cardType = \"creatableUnlim\"/>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    ))*/}\r\n            {/*))}*/}\r\n            <Paper position=\"static\" color=\"default\">\r\n\r\n                <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\" centered\r\n                      aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)}/>\r\n                    {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n                        <Tab label=\"Доступные\" {...a11yProps(2)}/>\r\n                        :\r\n                        null}\r\n\r\n                    {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n            {Object.keys(filteredStages).map(pCase => (\r\n                Object.keys(filteredStages[pCase]).map(stage => (\r\n                    <Grid key={pCase + stage} style={{padding: 10}}>\r\n                        <TaskCard complete={false}\r\n                                  stage={filteredStages[pCase][stage]}\r\n                                  stageID={stage}\r\n                                  user={currentUser}\r\n                                  pCase={pCase}\r\n                                  cardType = \"creatable\"/>\r\n                    </Grid>\r\n                ))\r\n            ))}\r\n            {displayTasks(userTasks, false, allCases, \"selected\", false)}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n            {displayTasks(userTasks, false, allCases, \"selected\", true)}\r\n        </TabPanel>\r\n\r\n        {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n        <TabPanel value={tabValue} index={2}>\r\n            {console.log(\"availableTasks: \", availableTasks)}\r\n            {showFilters(availableStages, bgStages, filterFormData, handleFilterFormChange)}\r\n            {displayTasks(availableTasks, availableStages, false, \"selectable\", false)}\r\n        </TabPanel>\r\n        :\r\n        null}\r\n        {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n    </Grid>)\r\n}\r\n\r\nexport default Page","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\n//import Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport Loader from \"../form/Loader\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport { cloneDeep, isEqual } from 'lodash'\r\n\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst JSchemaTask = () => {\r\n\tconst [formResponses, setFormResponses] = useState({})\r\n\tconst [taskForm, setTaskForm] = useState({})\r\n\tconst [mergedForm, setMergedForm] = useState({})\r\n\tconst [taskMetadata, setTaskMetadata] = useState({})\r\n\tconst [caseStages, setCaseStages] = useState({})\r\n\tconst [backgroundTasks, setBackgroundTasks] = useState({})\r\n\tconst [backgroundTaskForms, setBackgroundTaskForms] = useState({})\r\n\tconst [mergedBackgroundForms, setMergedBackgroundForms] = useState({})\r\n\tconst [backgroundResponses, setBackgroundResponses] = useState({})\r\n\tconst [currentFocus, setCurrentFocus] = useState(\"\")\r\n\tconst [gRef, setGRef] = useState(null)\r\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\r\n\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser && id) {\r\n\r\n\t\t\tconst ref = firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.doc(id)\r\n\r\n\t\t\tsetGRef(ref)\r\n\r\n\t\t\tref.onSnapshot(doc => {\r\n\t\t\t\tsetTaskMetadata(doc.data())\r\n\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\tsetFormStatus(\"sent\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (! doc.data().assigned_users.includes(currentUser.uid)) {\r\n\t\t\t\t\tsetFormStatus(\"released\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\r\n\t\t\t});\r\n\r\n\t\t\tref.collection(\"responses\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tconst changes = {}\r\n\t\t\t\t\tconst deletes = []\r\n\t\t\t\t\tlet modifyResponses = false\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\r\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\r\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\r\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (modifyResponses) {\r\n\t\t\t\t\t\tsetFormResponses(prevState => {\r\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\r\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\r\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\r\n\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tref.collection(\"questions\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\r\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}, [id, currentUser])\r\n\r\n\tuseEffect( () => {\r\n\t\tif (Object.entries(taskMetadata).length > 0) {\r\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection(\"schema\")\r\n\t\t\t\t.doc(\"structure\")\r\n\t\t\t\t.collection(\"cases\")\r\n\t\t\t\t.doc(taskMetadata.case_type)\r\n\t\t\t\t.collection(\"stages\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t}, [taskMetadata.case_type])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst mergedBgForms = {}\r\n\t\tconsole.log(\"Bg tasks: \", backgroundTasks)\r\n\t\tObject.keys(backgroundTasks).map(taskId => {\r\n\t\t\tconst stage = backgroundTasks[taskId].case_stage_id\r\n\t\t\tif (! mergedBgForms[stage]) {\r\n\t\t\t\tmergedBgForms[stage] = {}\r\n\t\t\t}\r\n\t\t\tmergedBgForms[stage][taskId] = mergeForm(backgroundTaskForms[taskId],\r\n\t\t\t\tcaseStages[stage])\r\n\t\t})\r\n\t\tconsole.log(\"Merged bg forms: \", mergedBgForms)\r\n\t\tsetMergedBackgroundForms(mergedBgForms)\r\n\t}, [backgroundTasks, backgroundTaskForms, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.keys(mergedForm).length > 0 && formStatus === \"loading\") {\r\n\t\t\tsetFormStatus(\"ready\")\r\n\t\t}\r\n\t}, [formResponses, mergedForm])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\r\n\t}, [taskForm, taskMetadata, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (Object.keys(caseStages).length > 0 && Object.keys(taskMetadata).length > 0 && caseStages[taskMetadata.case_stage_id]) {\r\n\t\t\tconsole.log(\"caseStages: \", caseStages)\r\n\t\t\tconsole.log(\"taskMetadata: \", taskMetadata)\r\n\t\t\tconst backgroundTasksList = caseStages[taskMetadata.case_stage_id].backgroundStages\r\n\t\t\tif (backgroundTasksList && backgroundTasksList.length > 0) {\r\n\t\t\t\tconsole.log(\"backgroundTasksList: \", backgroundTasksList.length)\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"case_id\", \"==\", taskMetadata.case_id)\r\n\t\t\t\t\t.where(\"case_stage_id\", \"in\", backgroundTasksList)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Background task: \", change.doc.data())\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [caseStages, taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(backgroundTasks).length > 0) {\r\n\t\t\tObject.keys(backgroundTasks).map(key => {\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"questions\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundTaskForms(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data()\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"responses\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tif (! newState[key]) {\r\n\t\t\t\t\t\t\t\t\t\tnewState[key] = {}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data().contents\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[key][change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, [backgroundTasks])\r\n\r\n\t// useEffect( () => {\r\n\t// \tsetMergedQuestions(mergeQuestions([caseStages[taskMetadata.case_stage_id]]))\r\n\t// }, [caseStages, taskQuestions])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst timer = setTimeout(() => {\r\n\t// \t\tif (formResponsesChanged) {\r\n\t// \t\t\tfirebase\r\n\t// \t\t\t\t.firestore()\r\n\t// \t\t\t\t.collection(\"tasks\")\r\n\t// \t\t\t\t.doc(id)\r\n\t// \t\t\t\t.collection(\"responses\")\r\n\t// \t\t\t\t.doc(\"form_responses\")\r\n\t// \t\t\t\t.set(formResponses)\r\n\t// \t\t\t\t.then(docRef => {\r\n\t// \t\t\t\t\tsetFormResponsesChanged(false);\r\n\t// \t\t\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n\t// \t\t\t\t})\r\n\t// \t\t\t\t.catch(error => console.error(\"Error setting document: \", error));\r\n\t// \t\t}\r\n\t// \t}, AUTOSAVE_INTERVAL);\r\n\t// \treturn () => clearTimeout(timer);\r\n\t// }, [formResponsesChanged, formResponses]);\r\n\r\n\r\n\tconst handleFormChange = e => {\r\n\t\tsetFormResponses(e.formData)\r\n\t};\r\n\r\n\t// const handleBlur = e => {\r\n\t// \tif (gRef) {\r\n\t// \t\tconsole.log(\"Responses: \", formResponses)\r\n\t// \t\tconsole.log(\"That is what was blured\", e)\r\n\t// \t\tif (e === \"root\") {\r\n\t// \t\t\tconsole.log(\"e from first option when trigger is root\", e)\r\n\t// \t\t\tObject.keys(formResponses).map(k => {\r\n\t// \t\t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t\t.doc(k)\r\n\t// \t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t\t{merge: true})\r\n\t// \t\t\t})\r\n\t// \t\t} else {\r\n\t// \t\t\tconsole.log(\"e from second option when trigger is not root\", e)\r\n\t// \t\t\tconst docID = e.split(\"_\")[1]\r\n\t// \t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t.doc(docID)\r\n\t// \t\t\t\t.set({contents: formResponses[docID] ? formResponses[docID] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t{merge: true})\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst handleBlur = e => {\r\n\t\tif (gRef) {\r\n\t\t\tconsole.log(\"Responses: \", formResponses)\r\n\t\t\tconsole.log(\"That is what was blured\", e)\r\n\r\n\t\t\tObject.keys(formResponses).map(k => {\r\n\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t\t\t\t\t\t{merge: true})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst mergeForm = (taskForm, caseForms) => {\r\n\t\tconst tForm = Object.assign({}, taskForm)\r\n\t\tconst cForms = Object.assign({}, caseForms)\r\n\r\n\t\tcForms.start = cForms.start ? cForms.start : {}\r\n\t\tcForms.end = cForms.end ? cForms.end : {}\r\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\r\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\r\n\r\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\r\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\r\n\r\n\r\n\t\tconst properties = {\r\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\r\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\r\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\r\n\t\t}\r\n\r\n\t\tconst definitions = {\r\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\r\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\r\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\r\n\t\t}\r\n\r\n\t\tlet title = \"\"\r\n\t\tif (tForm.form_questions.title) {\r\n\t\t\ttitle = tForm.form_questions.title\r\n\t\t} else if (cForms.end.title) {\r\n\t\t\ttitle = cForms.end.title\r\n\t\t} else if (cForms.start.title) {\r\n\t\t\ttitle = cForms.start.title}\r\n\r\n\t\tlet description = \"\"\r\n\t\tif (tForm.form_questions.description) {\r\n\t\t\tdescription = tForm.form_questions.description\r\n\t\t} else if (cForms.end.description) {\r\n\t\t\tdescription = cForms.end.description\r\n\t\t} else if (cForms.start.description) {\r\n\t\t\tdescription = cForms.start.description}\r\n\r\n\t\tconst required = [...new Set([\r\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\r\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\r\n\t\t\t...(cForms.start.required ? cForms.start.required : [])\r\n\t\t])]\r\n\r\n\t\tconst uiOrder = [...new Set([\r\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(tForm.ui_schema[\"ui:order\"]\t ? tForm.ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\r\n\t\t])]\r\n\r\n\t\tlet uiSchema = {\r\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\r\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\r\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\r\n\t\t}\r\n\r\n\t\tuiSchema = {...uiSchema, ...{\"ui:order\": uiOrder}}\r\n\r\n\t\tconst form = {\r\n\t\t\tproperties: properties,\r\n\t\t\tdefinitions: definitions,\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\trequired: required\r\n\t\t}\r\n\t\treturn {form_questions: form, ui_schema: uiSchema}\r\n\r\n\t}\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst getQuestions = async (taskID) => {\r\n\t// \t\tlet q = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn q\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getResponses = async (taskID) => {\r\n\t// \t\tlet r = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn r\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getSameCaseTasks = async () => {\r\n\t// \t\tlet sameCaseTasks = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t// \t\t\treturn doc.data()\r\n\t// \t\t}).then(async data => {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t// \t\t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\t\tif (doc.id !== id) {\r\n\t// \t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t\treturn sameCaseTasks\r\n\t// \t}\r\n\t//\r\n\t// \tconst getForms = async () => {\r\n\t// \t\tlet f = []\r\n\t// \t\tlet locked = true\r\n\t//\r\n\t// \t\tsetForms(null)\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t// \t\t\tif (doc.data().status === 'complete') {\r\n\t// \t\t\t\tlocked = true\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}\r\n\t// \t\t\telse {\r\n\t// \t\t\t\tlocked = false\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet sq = []\r\n\t// \t\tlet sr = []\r\n\t//\r\n\t// \t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t// \t\tsetCaseTasks(sameCaseTasks)\r\n\t// \t\tif (sameCaseTasks.length > 0) {\r\n\t// \t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getQuestions(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getResponses(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tconsole.log(ques)\r\n\t// \t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t// \t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\t//\r\n\t// \t\t\tconsole.log(sq)\r\n\t// \t\t\tconsole.log(sr)\r\n\t// \t\t}\r\n\t//\r\n\t// \t\tlet sf = sq.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tsr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\t//\r\n\t//\r\n\t// \t\tlet q = await getQuestions(id)\r\n\t// \t\tlet r = await getResponses(id)\r\n\t//\r\n\t//\r\n\t// \t\tsetQuestions(q)\r\n\t// \t\tsetResponses(r)\r\n\t//\r\n\t//\r\n\t// \t\t// let newQ = sq.concat(q)\r\n\t// \t\t// let newR = sr.concat(r)\r\n\t//\r\n\t// \t\tf = q.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn (\r\n\t// \t\t\t\t<Form\r\n\t// \t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t// \t\t\t\t\tquestion={el.data}\r\n\t// \t\t\t\t\tindex={i}\r\n\t// \t\t\t\t\tresponse={response}\r\n\t// \t\t\t\t\treturnFile={returnFile}\r\n\t// \t\t\t\t\treturnAnswer={returnAnswer}\r\n\t// \t\t\t\t\tid={el.questionId}\r\n\t// \t\t\t\t\tlocked={locked}\r\n\t// \t\t\t\t\t// ref={uploadsRef}\r\n\t// \t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t// \t\t\t)\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet newF = sf.concat(f)\r\n\t// \t\tsetForms(newF)\r\n\t// \t}\r\n\t// \tif (currentUser) {\r\n\t// \t\tgetForms()\r\n\t// \t}\r\n\t// }, [currentUser, id, lockButton])\r\n\t//\r\n\t//\r\n\t// const returnAnswer = (answer, index) => {\r\n\t// \tconst tmp = answers\r\n\t// \ttmp[index] = answer\r\n\t// \tsetAnswers(tmp)\r\n\t// }\r\n\t//\r\n\t// const returnFile = (file, questionId) => {\r\n\t// \tlet arr = [...file]\r\n\t// \tlet tmp = files\r\n\t// \ttmp[questionId] = arr\r\n\t// \tsetFiles(tmp)\r\n\t// \tconsole.log([...file], questionId)\r\n\t// }\r\n\t//\r\n\t// const upload = async () => {\r\n\t// \t// uploadsRef.current.startUpload()\r\n\t// \tif (Object.keys(files).length > 0) {\r\n\t// \t\tconsole.log('files')\r\n\t// \t\tsetUploading(true)\r\n\t// \t\tfor (const [key, value] of Object.entries(files)) {\r\n\t// \t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t// \t\t\tawait Promise.all(value.map(async v => {\r\n\t// \t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t// \t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t// \t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t// \t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t// \t\t\t}));\r\n\t// \t\t}\r\n\t// \t\tsetUploaded(true)\r\n\t// \t\tsetUploading(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t// \tif (previousTaskId) {\r\n\t// \t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t// \t\t\t.add({\r\n\t// \t\t\t\tanswer: data.reason,\r\n\t// \t\t\t\ttext: data.text,\r\n\t// \t\t\t\tuser_id: currentUser.uid,\r\n\t// \t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t// \t\t\t})\r\n\t// \t\t\t.then(() => setOpenSnackbar(true))\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveToFirebase = async (lock) => {\r\n\t// \tawait upload()\r\n\t// \tquestions.forEach(async (q, i) => {\r\n\t// \t\tif (answers[i] || answers[i] === \"\") {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t// \t\t}\r\n\t// \t})\r\n\t//\r\n\t// \tif (lock) {\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t// \t\tsetLock(true)\r\n\t// \t\tconsole.log(\"Task Locked\")\r\n\t// \t\tsetDialog(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const uploadFilesData = async (filename, url, questionId) => {\r\n\t// \tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t// \tconsole.log(\"Файл отправлен\")\r\n\t// \tif (filename && url) {\r\n\t// \t\trootRef.set(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t// \t\t\t}, { merge: true }\r\n\t// \t\t).then(() => console.log('super'))\r\n\t// \t}\r\n\t// };\r\n\t//\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\t//setFeedback({})\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetDialog(false)\r\n\t\thistory.goBack()\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tconsole.log(\"Dialog open\")\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t// \t\tsetReleaseFeedbackData(doc.data())\r\n\t// \t})\r\n\t// }, [])\r\n\t//\r\n\t// const releaseTask = () => {\r\n\t// \tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t// \t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t// \t\t\t.then(() => {\r\n\t// \t\t\t\tsetDialog(false)\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}))\r\n\t// \t// alert(feedbackValue)\r\n\t// }\r\n\t//\r\n\t// const handleFeedbackSave = (value) => {\r\n\t// \tsetFeedback(value)\r\n\t// }\r\n\r\n\tconst changeTaskStatus = (status) => {\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"tasks\")\r\n\t\t\t.doc(id)\r\n\t\t\t.collection(\"user_editable\")\r\n\t\t\t.doc(\"user_editable\")\r\n\t\t\t.update({ status: status })\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"sent\"}\r\n\t\t\t\t\ttitle={formStatus === \"sent\" ? \"Форма успешно отправлена.\" : \"Отправить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"sent\" ? \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={()=>{changeTaskStatus('complete')}} />}\r\n\r\n\t\t\t\t\t{dialogType === 'release' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"released\"}\r\n\t\t\t\t\ttitle={formStatus === \"released\" ? \"Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.\" : \"Освободить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"released\" ? \"Спасибо\" : \"Вы собираетесь ОСВОБОДИТЬ форму. Ваши изменения не сохранятся и форма будет передана другому пользователю.\"}\r\n\t\t\t\t\tdialogFunction={()=>{changeTaskStatus('released')}} />}\r\n\r\n\t\t\t\t{/*{dialogType === 'release' && <DialogFeedback*/}\r\n\t\t\t\t{/*\tstate={dialogState}*/}\r\n\t\t\t\t{/*\tfeedbackValue={feedbackValue}*/}\r\n\t\t\t\t{/*\thandleClose={handleDialogClose}*/}\r\n\t\t\t\t{/*\ttitle={releaseFeedbackData.title}*/}\r\n\t\t\t\t{/*\tdialogFunction={releaseTask}*/}\r\n\t\t\t\t{/*\tanswers={releaseFeedbackData.answers}*/}\r\n\t\t\t\t{/*\tdescription={releaseFeedbackData.description}*/}\r\n\t\t\t\t{/*\treturnFeedback={handleFeedbackSave} />}*/}\r\n\t\t\t\t{/*{redirect && <Redirect to=\"/tasks\" />}*/}\r\n\t\t\t\t{/*<Snackbar*/}\r\n\t\t\t\t{/*\tanchorOrigin={{*/}\r\n\t\t\t\t{/*\t\tvertical: 'bottom',*/}\r\n\t\t\t\t{/*\t\thorizontal: 'left',*/}\r\n\t\t\t\t{/*\t}}*/}\r\n\t\t\t\t{/*\topen={openSnackbar}*/}\r\n\t\t\t\t{/*\tautoHideDuration={6000}*/}\r\n\t\t\t\t{/*\tonClose={handleCloseSnackbar}*/}\r\n\t\t\t\t{/*\tmessage=\"Фидбек отправлен\"*/}\r\n\t\t\t\t{/*\taction={*/}\r\n\t\t\t\t{/*\t\t<React.Fragment>*/}\r\n\t\t\t\t{/*\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>*/}\r\n\t\t\t\t{/*\t\t\t\t<CloseIcon fontSize=\"small\" />*/}\r\n\t\t\t\t{/*\t\t\t</IconButton>*/}\r\n\t\t\t\t{/*\t\t</React.Fragment>*/}\r\n\t\t\t\t{/*\t}*/}\r\n\t\t\t\t{/*/>*/}\r\n\t\t\t\t{/*/!* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} *!/*/}\r\n\t\t\t\t{/*{forms}*/}\r\n\t\t\t\t{/*<Grid container style={{ padding: 20 }} justify=\"center\">*/}\r\n\t\t\t\t{/*\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>*/}\r\n\t\t\t\t{/*\t{!lockButton &&*/}\r\n\t\t\t\t{/*\t\t<div>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>*/}\r\n\t\t\t\t{/*\r\n\t\t\t\t{/*\t\t</div>}*/}\r\n\t\t\t\t{/*</Grid>*/}\r\n\r\n\t\t\t\t{/*{console.log(\"Case stages::: \", caseStages)}*/}\r\n\t\t\t\t{/*{console.log(\"Task metadata::: \", taskMetadata)}*/}\r\n\t\t\t\t{/*{console.log(\"Merged background forms::: \", mergedBackgroundForms)}*/}\r\n\r\n\t\t\t\t{(Object.keys(caseStages).length > 0 &&\r\n\t\t\t\t\tObject.keys(taskMetadata).length > 0 &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id] &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages.length > 0 &&\r\n\t\t\t\t\tObject.keys(mergedBackgroundForms).length > 0) ?\r\n\t\t\t\t\t<Grid style={{padding: 30}}>\r\n\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].backgroundStages.map(stage => {\r\n\t\t\t\t\t\t\treturn <div key={stage}>\r\n\t\t\t\t\t\t\t\t{console.log(\"STAGE: \", stage)}\r\n\t\t\t\t\t\t\t\t{console.log(\"mergedBackgroundForms: \", mergedBackgroundForms)}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmergedBackgroundForms[stage] ?\r\n\t\t\t\t\t\t\t\t\t\t(Object.keys(mergedBackgroundForms[stage]).map(taskId => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid style={{padding: 30}} key={taskId}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tschema={mergedBackgroundForms[stage][taskId].form_questions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuiSchema={mergedBackgroundForms[stage][taskId].ui_schema}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tformData={backgroundResponses[taskId]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields={{customFileUpload: a => CustomFileUpload({...a, ...{taskID: taskId}, ...{\"currentUserUid\": currentUser.uid}})}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t> </JSchemaForm>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\r\n\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\tschema={mergedForm.form_questions}\r\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\r\n\t\t\t\t\t\tformData={formResponses}\r\n\t\t\t\t\t\tfields={{customFileUpload: a => CustomFileUpload({...a, ...{taskID: id}, ...{\"currentUserUid\": currentUser.uid}})}}\r\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\" }\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={e => {\r\n\t\t\t\t\t\t\tconsole.log(\"That is what was focused\", e)\r\n\t\t\t\t\t\t\tsetCurrentFocus(e.split(\"_\")[1])\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={e => {\r\n\t\t\t\t\t\t\thandleBlur(e)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{formStatus === \"sent\" ?\r\n\t\t\t\t\t\t\t<div>Форма отправлена успешно</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\r\n\t\t\t\t\t\t{formStatus === \"ready\" ? <div>\r\n\t\t\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].additionalButtons && caseStages[taskMetadata.case_stage_id].additionalButtons.includes(\"release\") ?\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"} style={{\r\n\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\t\tborderColor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t\t}} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: 5}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<div>Вы освободили эту форму и больше не можете ее заполнять.</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\tnull}\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default JSchemaTask","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\n// import Appbar from './Components/Appbar/oldAppBar'\r\nimport Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\nimport Signin from './Components/Auth/Signin';\r\nimport PrivateRoute from './util/PrivateRoute';\r\nimport FAQ from './Components/FAQ/FAQ';\r\nimport Page from \"./Components/Page/Page\";\r\nimport JSchemaTask from \"./Components/Tasks/JSchemaTask\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n          <Switch>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/request\">\r\n              <Cases />\r\n            </Route>\r\n            <Route exact path=\"/tasks\">\r\n              <Tasks />\r\n            </Route>\r\n            <Route path=\"/tasks/:id\">\r\n              <Task />\r\n            </Route>\r\n            <Route path=\"/t/:id\">\r\n              <JSchemaTask />\r\n            </Route>\r\n            <Route exact path=\"/tasksObserver\">\r\n              <TasksObserver />\r\n            </Route>\r\n            <Route exact path=\"/notifications\">\r\n              <Notifications />\r\n            </Route>\r\n            <Route exact path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n            <Route exact path=\"/faq\">\r\n              <FAQ />\r\n            </Route>\r\n            <Route path=\"/p/:id\">\r\n              <Page />\r\n            </Route>\r\n            <PrivateRoute path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from './util/Auth'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}