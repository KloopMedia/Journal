{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/LinearProgressWithLabel.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","Components/Tasks/JSchemaCard.js","Components/form/Loader.js","Components/form/CustomFileUpload.js","util/Utilities.js","Components/Page/Page.js","Components/Tasks/JSchemaTask.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","setNumOfMessages","messages","setMessages","userRanks","setUserRanks","userPages","setUserPages","availableRanks","setAvailableRanks","snap","forEach","id","catch","onSnapshot","data","ranks","assignableRanks","assign_without_moderator","push","length","where","snapshot","docChanges","change","type","prevState","unsubscribe","size","m","count","sort","a","b","toDate","className","Divider","to","Object","keys","map","page","name","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","message","i","justify","Typography","flex","title","Button","update","shown","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","marginBottom","marginTop","paddingRight","formControl","maxWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","TabPanel","other","role","hidden","p","a11yProps","paddingTop","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","error","Paper","Tabs","newValue","centered","Tab","task","Form","uploadsRef","feedback_type","hideActions","showOk","handleOk","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","uploading","setUploading","useParams","history","useHistory","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","storage","child","v","put","getDownloadURL","url","url_wo_token","split","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","CircularProgress","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","goBack","Case","caseId","disableCase","setDisable","setMessage","parseInt","order","task_type","taskType","case_type","case_stage_id","border","item","Cases","allCases","setCases","setRanks","getCasesFromFirebase","cases","c","hide","down","dt","setShown","date","opacity","paddingLeft","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","Notification","queryString","require","Home","token","setToken","tgId","setTgId","makeToken","uuid","Date","now","unsubscribeUser","unsubscribeUserPrivate","oldToken","tg_token","oldDate","substring","moment","diff","newToken","tg_id","urlString","parse","location","search","rank","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","assigned_users","users","find","getUserInfo","PaginatedTasks","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","floor","start","end","slice","pagination","TablePagination","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","taskId","select","FAQ","handleClickApplyFilters","tasklist","taskList","questionList","apply","JSchemaTaskCard","cardData","cardType","stage","stageID","pCase","waiting","setWaiting","sendCallbackRequest","callback","callbackType","callbackName","uuidv4","FieldPath","documentId","sendCallbackRequestOld","showCard","stgId","includes","showOldButton","Loader","fileBeingUploaded","setFileBeingUploaded","storageRef","progress","on","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","downloadURL","fileLink","secure","replace","filesLinks","contents","allowMultipleFiles","newState","assign","CustomFileUpload","currentUserUid","connectingTelegram","setConnectingTelegram","telegramConnected","setTelegramConnected","pathToFolder","handleTgConnectClick","fileUpload","linksToFiles","formData","schema","cleanFileLink","path","complexStateFirebaseUpdate","setFunction","subState","simpleStateFirebaseUpdate","Page","pageData","setPageData","userCases","setUserCases","setAllCases","userTasks","setUserTasks","filteredStages","setFilteredStages","caseData","setCaseData","caseSelector","setCaseSelector","caseSelectorResponse","setCaseSelectorResponse","tabValue","setTabValue","availableStages","setAvailableStages","bgStages","setBgStages","filterFormData","setFilterFormData","availableTasks","setAvailableTasks","userRanksDescriptions","setUserRanksDescriptions","intersection","casesPath","caseWithSelectableTasks","limit","fs","stages","filters","emergency_form_filling","violationType","query","stageFilter","filterQuestion","newFilteredStages","cloneDeep","caseID","stageId","ranks_write","creatable","rank_limit_number","setIntersection","maxTasksPerStage","calculatemaxTasksPerStage","countTasksPerStage","occurrences","values","rArray","limits","largestLimit","arrA","arrB","setA","Set","setB","_intersection","elem","has","createCaseSelectorForm","displayTasks","caseType","properties","request","$ref","definitions","case","enum","default","dependencies","oneOf","k","checkRank","filter","notInUserRanks","requestRank","showTaskSelector","e","handleFormChange","onSubmit","formQuestions","formUI","endProps","uiSchema","showFilters","JSchemaTask","formResponses","setFormResponses","taskForm","setTaskForm","mergedForm","setMergedForm","taskMetadata","setTaskMetadata","caseStages","setCaseStages","backgroundTasks","setBackgroundTasks","backgroundTaskForms","setBackgroundTaskForms","mergedBackgroundForms","setMergedBackgroundForms","backgroundResponses","setBackgroundResponses","setCurrentFocus","gRef","setGRef","formStatus","setFormStatus","changes","deletes","modifyResponses","mergedBgForms","mergeForm","backgroundTasksList","backgroundStages","caseForms","tForm","cForms","start_ui_schema","end_ui_schema","form_questions","ui_schema","uiOrder","changeTaskStatus","reasons","extra","widgets","customImageWidget","customVideoWidget","controls","customIframeWidget","frameBorder","allow","allowFullScreen","releaseTitle","releaseMessage","releaseFeedback_schema","releaseFeedback_ui","fields","customFileUpload","noHtml5Validate","onFocus","onBlur","delete","handleBlur","additionalButtons","App","exact","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f73bb004.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n              console.log('User Exist')\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email,\r\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Badge } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: 'white',\r\n\t\tboxShadow: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor: 'black',\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\tconst { window } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst menuOpen = Boolean(anchorEl);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\r\n\tconst [moderator, setModerator] = useState(false)\r\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\r\n\tconst [messages, setMessages] = useState([])\r\n\tconst [userRanks, setUserRanks] = useState([])\r\n\tconst [userPages, setUserPages] = useState({})\r\n\tconst [availableRanks, setAvailableRanks] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (doc.id === currentUser.uid) {\r\n\t\t\t\t\t\tconsole.log('moderator')\r\n\t\t\t\t\t\tsetModerator(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}).catch(() => setModerator(false))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.collection(\"user_private\")\r\n\t\t\t\t.doc(\"private\")\r\n\t\t\t\t.onSnapshot(doc => {\r\n\t\t\t\t\tif (doc.data()) {\r\n\t\t\t\t\t\tsetUserRanks(doc.data().ranks)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('schema')\r\n\t\t\t\t.doc('structure')\r\n\t\t\t\t.collection(\"ranks\")\r\n\t\t\t\t.onSnapshot(snap => {\r\n\t\t\t\t\tlet assignableRanks = []\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.data().assign_without_moderator) {\r\n\t\t\t\t\t\t\tassignableRanks.push(doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetAvailableRanks(assignableRanks)\r\n\t\t\t\t\tconsole.log(\"Assignable\", assignableRanks)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userRanks && userRanks.length > 0 && availableRanks.length > 0) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", userRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log(\"User pages: \", change.doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", availableRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log(\"User pages: \", change.doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [userRanks, availableRanks])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unsubscribe = () => { }\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection('notifications')\r\n\t\t\t\t.where('user_id', 'array-contains', currentUser.uid)\r\n\t\t\t\t.where('shown', '!=', true)\r\n\t\t\t\t.onSnapshot(snap => {\r\n\t\t\t\t\tconsole.log(snap.size)\r\n\t\t\t\t\tlet m = []\r\n\t\t\t\t\tlet count = 0\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\tcount++\r\n\t\t\t\t\t})\r\n\t\t\t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n\t\t\t\t\tsetNumOfMessages(count)\r\n\t\t\t\t\tsetMessages(m)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\treturn () => unsubscribe\r\n\t}, [currentUser])\r\n\r\n\tconst updateFirestoreStatus = (id, index) => {\r\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n\t}\r\n\r\n\tconst handleMenu = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null)\r\n\t}\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t<Link to=\"/tasks\">Задания</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/request\">Получить задание</Link>\r\n\t\t\t\t\t</li> */}\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t\t{/* {moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\r\n\t\t\t\t\t</li> : null} */}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tObject.keys(userPages).map(page => {\r\n\t\t\t\t\t\t\treturn <li key={page}> <Link to={\"/p/\" + page}>\r\n\t\t\t\t\t\t\t\t{userPages[page].name}\r\n\t\t\t\t\t\t\t</Link> </li>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{currentUser &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\topen={menuOpen}\r\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\r\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container key={message.id} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t{currentUser\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span style={{ color: 'black', fontSize: 12, marginLeft: 7 }}>\r\n\t\t\t\t\t\t\t\t{currentUser.email}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\" size=\"small\"\r\n\t\t\t\t\t\t\t\tonClick={() => firebase.auth().signOut()}>\r\n\t\t\t\t\t\t\t\tВыход\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n\t/**\r\n\t * Injected by the documentation to work in an iframe.\r\n\t * You won't need it on your project.\r\n\t */\r\n\twindow: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props) => {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default LinearProgressWithLabel","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 100,\r\n\t\tmaxWidth: 300\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ?\r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, {useState, useEffect, useContext} from 'react'\r\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport TaskCard from './Card'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\n\r\nconst Tasks = (props) => {\r\n    const classes = useStyles()\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [submittedTasks, setSubmitted] = useState(null)\r\n    const [quickTasks, setQuickTasks] = useState(null)\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [value, setValue] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            let submitted = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        if (doc.data().is_complete) {\r\n                            submitted.push({id: doc.id, ...doc.data()})\r\n                        } else {\r\n                            tasks.push({id: doc.id, ...doc.data()})\r\n                        }\r\n\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    setTasks(tasks)\r\n                    setSubmitted(submitted)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n            {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\r\n            {/*<Typography variant=\"h4\">Задания</Typography>*/}\r\n            <div className={classes.root}>\r\n                <Paper position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                          aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\r\n                        <Tab label=\"Выполненные\" {...a11yProps(1)}/>\r\n                        {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                    </Tabs>\r\n                </Paper>\r\n            </div>\r\n            <TabPanel value={value} index={0}>\r\n                {allTasks && allTasks.map((task, i) => (\r\n                    <Grid key={'active_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                {submittedTasks && submittedTasks.map((task, i) => (\r\n                    <Grid key={'submitted_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n           {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n            attachMaterials={question.attachMaterials}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n          {props.hideActions ? \"\" :\r\n              props.showOk ?\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleOk} color=\"primary\">\r\n                          Ok\r\n                      </Button>\r\n                  </DialogActions>\r\n                  :\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleClose} color=\"primary\">\r\n                          Отмена\r\n                      </Button>\r\n                      <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n                          Подтвердить\r\n                      </Button>\r\n                  </DialogActions>}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = async () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tsetUploading(true)\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tawait Promise.all(value.map(async v => {\r\n\t\t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t\t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t\t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t\t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tsetUploaded(true)\r\n\t\t\tsetUploading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait upload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tconsole.log(\"Task Locked\")\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thideActions={uploading || uploaded}\r\n\t\t\t\t\ttitle={uploading ? \"Загрузка файлов\" : uploaded ? \"Файлы загружены\" : \"Отправить задание?\"}\r\n\t\t\t\t\tcontent={uploading ? <CircularProgress /> : uploaded ? \"Спасибо\" : \"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => history.goBack()}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId, userRanks } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // before change\r\n                        //tasks.push({ id: doc.id, ...doc.data() }) \r\n\r\n                        //after change\r\n                        const ranks = doc.data().ranks\r\n                        console.log('RANKS')\r\n                        console.log(ranks)\r\n                        console.log(userRanks)\r\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        // }\r\n                        // else {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\r\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\r\n                        // }\r\n                        tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        \r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n                if (snap.size < 3) {\r\n                    console.log(\"SIZE\", snap.size)\r\n                    setDisable(false)\r\n                }\r\n                else {\r\n                    setDisable(true)\r\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser, disableCase, open])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 0px' }}>\r\n                        {message}\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n    const [userRanks, setRanks] = useState([])\r\n\r\n    // New\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\r\n\r\n                if (doc && doc.exists) {\r\n\r\n                    let ranks = doc.data().ranks\r\n                    console.log(ranks)\r\n                    setRanks(ranks)\r\n                    getCasesFromFirebase(ranks)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    // /////// Old ////////\r\n    // useEffect(() => {\r\n    //     if (currentUser) {\r\n    //         let cases = []\r\n    //         console.log(\"Fired\")\r\n    //         firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n    //             .then((querySnapshot) => {\r\n    //                 querySnapshot.forEach((doc) => {\r\n    //                     cases.push({ id: doc.id, ...doc.data() })\r\n    //                 });\r\n    //             })\r\n    //             .then(() => {\r\n    //                 setCases(cases)\r\n    //                 setReady(true)\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 console.log(\"Error getting documents: \", error);\r\n    //             });\r\n    //     }\r\n    // }, [currentUser])\r\n    // //////////////\r\n\r\n    const getCasesFromFirebase = (ranks) => {\r\n        let cases = []\r\n        console.log(\"Fired\")\r\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.data())\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c, i) => {\r\n                if (c.hide) {\r\n                    return null\r\n                }\r\n                else {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxWidth: 300\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, setShown, shown, date } = props\r\n\r\n\tconst getFormatDate = (dt) => {\r\n\t\t// let month = '' + (d.getMonth() + 1)\r\n\t\t// let day = '' + d.getDate()\r\n\t\t// let year = d.getFullYear()\r\n\r\n\t\t// if (month.length < 2)\r\n\t\t// \tmonth = '0' + month;\r\n\t\t// if (day.length < 2)\r\n\t\t// \tday = '0' + day;\r\n\t\tlet formatDate = `${\r\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\r\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\r\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\r\n\r\n\t\treturn formatDate\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                console.log(messages[0].created_date.toDate())\r\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        // height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    message: {\r\n        background: 'lightgreen',\r\n        // height: 200,\r\n        width: 500,\r\n        margin: 10,\r\n        padding: 10,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [tgId, setTgId] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        let unsubscribeUser = () => { }\r\n        let unsubscribeUserPrivate = () => { }\r\n        if (currentUser) {\r\n            unsubscribeUser = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .onSnapshot(doc => {\r\n\r\n                    let oldToken;\r\n                    if (doc.exists && doc.data().tg_token) {\r\n                        oldToken = doc.data().tg_token\r\n                    } else {\r\n                        oldToken = false\r\n                    }\r\n\r\n                    console.log(oldToken)\r\n                    if (oldToken) {\r\n                        console.log(oldToken)\r\n                        let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                        let date = moment().diff(oldDate, 'hours')\r\n                        console.log(date)\r\n                        if (date > 0) {\r\n                            let newToken = makeToken()\r\n                            firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                            setToken(newToken)\r\n                        } else {\r\n                            setToken(oldToken)\r\n                        }\r\n                    } else {\r\n                        console.log('no token')\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                        setToken(newToken)\r\n                    }\r\n                })\r\n            unsubscribeUserPrivate = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    console.log(\"TGID: \", doc.data().tg_id)\r\n                    if (doc.exists && \"tg_id\" in doc.data()) {\r\n                        console.log(\"TGID: \", doc.data().tg_id)\r\n                        setTgId(doc.data().tg_id)\r\n                    }\r\n                })\r\n        }\r\n        return () => {\r\n            unsubscribeUser()\r\n            unsubscribeUserPrivate()\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let urlString = queryString.parse(window.location.search)\r\n            if (urlString.rank) {\r\n                console.log(urlString.rank)\r\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log('creating request')\r\n                        firebase.firestore().collection('rank_requests').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            user_id: currentUser.uid,\r\n                            processed: false,\r\n                            rank: doc.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('no rank')\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid>\r\n                <Grid container className={classes.message}>\r\n                    <Typography>Здравствуйте, дорогие наблюдатели! Мы рады приветствовать вас в наших рядах!</Typography>\r\n                    <Typography>Если вы не знаете, как заполнить анкету, то посмотрите <Link href=\"https://www.youtube.com/watch?v=bkukGAemNTY&feature=youtu.be\">наше видео</Link></Typography>\r\n                    <Typography>Чтобы понять, как работает бот посмотрите нашу <Link href=\"https://www.youtube.com/watch?v=jJX5uMqqC7Q&feature=youtu.be\">видео-инструкцию</Link></Typography>\r\n                    <Typography>Чтобы все начало работать, вам необходимо в самом начале нажать на кнопку Получить ранг El-Monitor</Typography>\r\n                    <Typography>Чтобы получать каждый день задания от нас, перейдите в раздел <Link href=\"https://kloopmedia.github.io/Journal/#/p/test_page\">Тест</Link></Typography>\r\n                </Grid>\r\n                {tgId === \"\" ?\r\n                    <Grid container justify=\"center\" className={classes.message}>\r\n                        <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Вы можете связать свой\r\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\r\n                        {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на бот</Link>\r\n                            : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд,\r\n                                перезагрузите страницу</Typography>}\r\n                    </Grid>\r\n                    :\r\n                    null}\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\r\n                <br />\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью\r\n                    аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1', 'Задание № 2.2', 'Задание № 2.3', 'Задание 3.1', 'Задание 3.2', 'Задание 3.3']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useContext } from 'react'\r\nimport { signInWithGoogle } from '../../util/Firebase'\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Signin = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n            <br />\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px grey solid',\r\n        padding: '0px 10px',\r\n        margin: 10,\r\n        background: 'yellow',\r\n\t\twidth: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    button: {\r\n        background: 'orange',\r\n        margin: '10px 0'\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { title, sendAnswer, taskId, questionId } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\r\n            </Box>\r\n            <TextField\r\n                label=\"Мой ответ\"\r\n                value={value}\r\n                style={{ background: 'white' }}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from './Card'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: '20px 0',\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst FAQ = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const classes = useStyles();\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\r\n\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value);\r\n    };\r\n\r\n    const handleClickApplyFilters = async (event) => {\r\n        let tasklist = await getTasks()\r\n        getQuestions(tasklist)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\r\n\r\n        if (taskType !== 'ВСЕ') {\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n        console.log('fired')\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\r\n            setTasks(tasksList)\r\n        })\r\n        return tasksList\r\n    }\r\n\r\n    const getQuestions = async (taskList) => {\r\n        let questionList = await taskList.map(async task => {\r\n            let arr = []\r\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\r\n                })\r\n            })\r\n            return arr\r\n        })\r\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\r\n    }\r\n\r\n    const sendAnswer = (taskId, questionId, answer) => {\r\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\r\n        console.log(taskId, answer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <FormControl className={classes.select}>\r\n                    <NativeSelect\r\n                        value={taskType}\r\n                        onChange={setTaskTypeHandler}\r\n                        name=\"filterTaskType\"\r\n                    >\r\n                        {\r\n                            taskTypes.map((taskType, i) => (\r\n                                <option key={taskType} value={taskType}>{taskType}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" className={classes.select}>\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                {questions\r\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\r\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FAQ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport firebase from \"../../util/Firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst JSchemaTaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { complete, id, cardColor, cardType, stage, stageID, task, user, pCase } = props\r\n\r\n\tconst [waiting, setWaiting] = useState(false)\r\n\tconst [newTaskId, setNewTaskId] = useState(null)\r\n\r\n\tconst handleOpen = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequest()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/t/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOpenOld = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequestOld()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/tasks/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst sendCallbackRequest = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/t/\" + change.doc.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst sendCallbackRequestOld = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/tasks/\" + change.doc.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst displayJSON = (cardData) => {\r\n\t\treturn Object.keys(cardData).map((stgId, i) => {\r\n\t\t\t// console.log(\"STAGE: \", stage)\r\n\t\t\tif (stgId === 'message') {\r\n\t\t\t\treturn <Typography key={stgId + i}>{cardData[stgId]}</Typography>\r\n\t\t\t}\r\n\t\t\treturn Object.keys(cardData[stgId]).map(response => {\r\n\t\t\t\t// console.log(\"RESPONSE: \", response)\r\n\t\t\t\tif (stage && stage.cardData && stage.cardData[stgId] && stage.cardData[stgId].includes(response)) {\r\n\t\t\t\t\tif (response === \"attachedFiles\") {\r\n\t\t\t\t\t\t// console.log(\"FILES: \")\r\n\t\t\t\t\t\treturn <div key={stgId + response}>Files</div>\r\n\t\t\t\t\t} else return (\r\n\t\t\t\t\t\t<typography variant=\"body2\" component=\"p\" key={stgId + response}>\r\n\t\t\t\t\t\t\t{/* {console.log(\"TEXT: \", cardData[stgId][response])} */}\r\n\t\t\t\t\t\t\t{JSON.stringify(cardData[stgId][response], null, 2)}\r\n\t\t\t\t\t\t</typography>)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card key={id} className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{stage.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\tСдано\r\n\t\t\t\t\t</Typography>}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t#{id}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t{(task && task.cardData && (cardType === \"selectable\" || (stage && stage.showCard))) ?\r\n\t\t\t\t\t\tdisplayJSON(task.cardData)\r\n\t\t\t\t\t\t//JSON.stringify(task.cardData, null, 2)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\"Задание: \" + stage.description}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t{waiting ?\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>{(cardType === \"creatableUnlim\") ? \"СОЗДАТЬ НОВУЮ ФОРМУ\" : \"Открыть\"}</Button>\r\n\t\t\t\t\t\t{stage.showOldButton && <Button size=\"small\" onClick={handleOpenOld}>Открыть (Old)</Button>}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t}\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default JSchemaTaskCard","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport {cloneDeep} from \"lodash\";\r\n\r\n\r\nconst Loader = props => {\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState({})\r\n    //const [storedFiles, setStoredFiles] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     props.filesLinks.onSnapshot(doc => {\r\n    //         setStoredFiles(doc.data().contents)\r\n    //     });\r\n    // }, [props.filesLinks])\r\n\r\n    const clear_url = (url) => {\r\n        return url.replace('https://firebasestorage.googleapis.com/v0/b/journal-bb5e3.appspot.com/o', 'https://storage.cloud.google.com/journal-bb5e3.appspot.com') + '?authuser=1'\r\n    }\r\n\r\n\r\n    const upload = async files => {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = props.storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                    console.log('Upload is ' + progress + '% done');\r\n\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                }, error => {\r\n\r\n                    // A full list of error codes is available at\r\n                    // https://firebase.google.com/docs/storage/web/handle-errors\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n                            // User doesn't have permission to access the object\r\n                            break;\r\n\r\n                        case 'storage/canceled':\r\n                            // User canceled the upload\r\n                            break;\r\n\r\n                        default:\r\n                            // Unknown error occurred, inspect error.serverResponse\r\n                            break;\r\n                    }\r\n                }, () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(async downloadURL => {\r\n                        let fileLink = downloadURL\r\n                        if (props.secure) {\r\n                            fileLink = clear_url(downloadURL.split('?')[0])\r\n                        }\r\n                        await props.filesLinks.set({contents: {[fileLink]: {name: file.name, url: fileLink}}},\r\n\t\t\t\t\t{merge: props.allowMultipleFiles})\r\n                        setFileBeingUploaded(prevState => {\r\n                            const newState = Object.assign({}, prevState)\r\n                            delete newState[file.name]\r\n                            return newState\r\n                        })\r\n                        console.log('File available at', fileLink);\r\n                    });\r\n                });\r\n\r\n            // let url = await snap.ref.getDownloadURL()\r\n            // let url_wo_token = url.split(\"?\")[0]\r\n            // console.log(\"File uploaded: \", url)\r\n            // //await uploadFilesData(file.name, url_wo_token, key)\r\n        }));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files])\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                multiple={props.allowMultipleFiles}\r\n            />\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <p>{filename}</p>\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>\r\n                </div>\r\n\r\n            )}\r\n            {/*{storedFiles ? <p>Сохраненные файлы</p> : <p></p>}*/}\r\n            {/*{Object.keys(storedFiles).map(fileUrl =>*/}\r\n            {/*    <div key={fileUrl}>*/}\r\n            {/*        <a href={fileUrl}>{storedFiles[fileUrl].name}</a>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader","import firebase from \"../../util/Firebase\";\r\nimport Loader from \"./Loader\";\r\nimport React, { useState } from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst CustomFileUpload = props => {\r\n\tconsole.log(\"All props: \", props)\r\n\tconsole.log(\"ID: \", props.taskID)\r\n\tconsole.log(\"Question ID: \", props.name)\r\n\tconsole.log(\"User UID: \", props.currentUserUid)\r\n\r\n\tconst [connectingTelegram, setConnectingTelegram] = useState(false)\r\n\tconst [telegramConnected, setTelegramConnected] = useState(false)\r\n\r\n\tlet pathToFolder = null\r\n\tlet handleTgConnectClick = null\r\n\tif (!props.disabled) {\r\n\t\tpathToFolder = firebase\r\n\t\t\t.storage()\r\n\t\t\t.ref(props.taskID)\r\n\t\t\t.child(props.name)\r\n\t\t\t.child(props.currentUserUid)\r\n\r\n\t\thandleTgConnectClick = async () => {\r\n\t\t\tsetConnectingTelegram(true)\r\n\t\t\tawait firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"users\")\r\n\t\t\t\t.doc(props.currentUserUid)\r\n\t\t\t\t.set({fileUpload: props.taskID + \"/\" + props.name }, {merge: true})\r\n\t\t\tsetConnectingTelegram(false)\r\n\t\t\tsetTelegramConnected(true)\r\n\r\n\t\t}\r\n\t}\r\n\tconst linksToFiles = firebase\r\n\t\t.firestore()\r\n\t\t.collection(\"tasks\")\r\n\t\t.doc(props.taskID)\r\n\t\t.collection(\"responses\")\r\n\t\t.doc(props.name)\r\n\r\n\tconsole.log(\"Props formData: \", props.formData)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.schema.title ? <div>{props.schema.title}</div> : <div></div>}\r\n\t\t\t{props.schema.description ? <div>{props.schema.description}</div> : <div></div>}\r\n\t\t\t{props.disabled ? null :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Loader storageRef={pathToFolder}\r\n\t\t\t\t\t\t\tallowMultipleFiles={props.stage && props.stage.allowMultipleFiles ? props.stage.allowMultipleFiles : false}\r\n\t\t\t\t\t\t\tsecure={props.stage && props.stage.cleanFileLink ? props.stage.cleanFileLink : false}\r\n\t\t\t\t\t\t\tfilesLinks={linksToFiles}/>\r\n\t\t\t\t\t{connectingTelegram ?\r\n\t\t\t\t\t\t<CircularProgress/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\ttelegramConnected ?\r\n\t\t\t\t\t\t\t<div>Вы можете начать загрузку файлов через бота. Все файлы, отправляемые боту, будут сохраняться здесь. После загрузки файлов через бот, не забудьте вернуться сюда и нажать \"ОТПРАВИТЬ\". <a href=\"https://t.me/journal_tg_bot\">Перейти в бот.</a></div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Вы так же можете загрузить сюда файлы через Телеграм-бота. Для этого нажмите кнопку ниже: </p>\r\n\t\t\t\t\t\t\t\t<button onClick={handleTgConnectClick}>Загрузка через бот</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{props.formData ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{Object.keys(props.formData).map(path =>\r\n\t\t\t\t\t\t<div key={path}>\r\n\t\t\t\t\t\t\t<a href={props.formData[path].url}>{props.formData[path].name}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div></div>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CustomFileUpload\r\n\r\n","const complexStateFirebaseUpdate = (snapshot, setFunction, subState) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                if (!newState[subState]) {\r\n                    newState[subState] = {}\r\n                }\r\n                newState[subState][change.doc.id] = change.doc.data()\r\n                // console.log(\"User stages: \", newState)\r\n                return newState\r\n            })\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[subState][change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst simpleStateFirebaseUpdate = (snapshot, setFunction) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => (\r\n                {...prevState, [change.doc.id]: change.doc.data()}\r\n            ))\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate}","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect, useParams } from 'react-router';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TaskCard from \"../Tasks/JSchemaCard\";\r\nimport { cloneDeep } from \"lodash\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport Case from '../Cases/Case'\r\n\r\nimport { complexStateFirebaseUpdate, simpleStateFirebaseUpdate } from \"../../util/Utilities\";\r\nimport Home from '../Home/Home';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\nconst Page = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const { id } = useParams();\r\n\r\n    const classes = useStyles()\r\n\r\n    const [pageData, setPageData] = useState({})\r\n    const [userRanks, setUserRanks] = useState([])\r\n    const [userCases, setUserCases] = useState({})\r\n    const [allCases, setAllCases] = useState({})\r\n    const [userTasks, setUserTasks] = useState({})\r\n    const [filteredStages, setFilteredStages] = useState({})\r\n    const [caseData, setCaseData] = useState({})\r\n    const [caseSelector, setCaseSelector] = useState({})\r\n    const [caseSelectorResponse, setCaseSelectorResponse] = useState({})\r\n    //const [unlimStages, setUnlimStages] = useState({})\r\n    const [tabValue, setTabValue] = useState(0)\r\n    const [availableStages, setAvailableStages] = useState({})\r\n    const [bgStages, setBgStages] = useState({})\r\n    const [filterFormData, setFilterFormData] = useState({})\r\n    const [availableTasks, setAvailableTasks] = useState({})\r\n    const [userRanksDescriptions, setUserRanksDescriptions] = useState({})\r\n    const [filterSettings, setFilterSettings] = useState(() => { })\r\n    const [availableRanks, setAvailableRanks] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Page id: \", id)\r\n        console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('pages')\r\n                .doc(id)\r\n                .onSnapshot(doc => {\r\n                    setPageData(doc.data())\r\n                    console.log(\"Page data: \", doc.data())\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id])\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Page id: \", id)\r\n        // console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser && pageData && pageData.ranks) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    setUserRanks(intersection(doc.data().ranks, pageData.ranks))\r\n                    // console.log(\"User ranks: \", doc.data().ranks)\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id, pageData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0) {\r\n            setUserCases({})\r\n            setUserTasks({})\r\n            setAllCases({})\r\n            setAvailableStages({})\r\n            setAvailableTasks({})\r\n            setBgStages({})\r\n            const casesPath = firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"cases\")\r\n\r\n            pageData.cases.map(pCase => {\r\n                console.log(\"PCASE\", pCase)\r\n                casesPath.doc(pCase).get().then(doc => {\r\n                    setCaseData(prevState => {\r\n                        const newState = Object.assign({}, prevState)\r\n                        newState[doc.id] = doc.data()\r\n                        return newState\r\n                    })\r\n                })\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_write\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setUserCases, pCase)\r\n                    })\r\n\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setAllCases, pCase)\r\n                    })\r\n            })\r\n            console.log(\"ALLCASES\", allCases)\r\n            firebase.firestore()\r\n                .collection(\"tasks\")\r\n                .where(\"assigned_users\", \"array-contains\", currentUser.uid)\r\n                .where(\"case_type\", \"in\", pageData.cases)\r\n                .onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setUserTasks)\r\n                })\r\n\r\n            if (pageData.caseWithSelectableTasks) {\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableStages)\r\n                    })\r\n\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setBgStages)\r\n                    })\r\n\r\n                firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n    }, [currentUser, pageData, userRanks, id])\r\n\r\n\r\n    useEffect(() => {\r\n        let fs = () => { }\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0 && pageData.caseWithSelectableTasks) {\r\n            console.log(\"filtersData\", filterFormData)\r\n            if (Object.keys(filterFormData).length !== 0) {\r\n                const stages = availableStages\r\n                const stageID = Object.keys(stages)[0]\r\n                const stage = stages[stageID]\r\n                const filters = stage.filters\r\n                filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n                filters.emergency_form_filling['violationTime'] = '=='\r\n                console.log(\"filters\", filters)\r\n                console.log(\"filtersData\", filterFormData)\r\n                setAvailableTasks({})\r\n                let collection = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                let query = collection.where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n\r\n                Object.keys(filters).forEach(stageFilter => {\r\n                    Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                        console.log(stageFilter, filterQuestion)\r\n                        if (filterFormData[filterQuestion] && filterFormData[filterQuestion][filterQuestion]) {\r\n                            console.log('filters3', filterFormData[filterQuestion][filterQuestion], filters[stageFilter][filterQuestion][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}.${filterQuestion}`, filters[stageFilter][filterQuestion][filterQuestion], filterFormData[filterQuestion][filterQuestion])\r\n                        }\r\n                        else if (filterFormData[filterQuestion] && Object.keys(filterFormData[filterQuestion]).length > 0 && !filterFormData[filterQuestion][filterQuestion]) {\r\n                            console.log('filters4', filterFormData[filterQuestion], filters[stageFilter][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}`, filters[stageFilter][filterQuestion], filterFormData[filterQuestion])\r\n                        }\r\n                    })\r\n                })\r\n                // query = query.where('cardData.emergency_form_filling.violationType.violationType', '==', 'Нарушения в ходе голосования / Добуш берүү убагындагы мыйзам бузуулар')\r\n                // query = query.where('cardData.emergency_form_filling.region.region', '==', 'г. Бишкек')\r\n                // query = query.where('cardData.emergency_form_filling.violationTime', '==', '12:00-13:00')\r\n\r\n                query = query.orderBy('created_date', 'desc').limit(25).onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                })\r\n                fs = query\r\n            } else {\r\n                setAvailableTasks({})\r\n                fs = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n        return (fs)\r\n    }, [currentUser, pageData, userRanks, id, filterFormData])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            const newFilteredStages = cloneDeep(userCases)\r\n            //let newUnlimStages = {}\r\n            Object.keys(userCases).map(caseID => {\r\n                Object.keys(userCases[caseID]).map(stageId => {\r\n                    const stage = userCases[caseID][stageId]\r\n                    if (stage.ranks_write &&\r\n                        Object.keys(stage.ranks_write).length > 0 &&\r\n                        intersection(stage.ranks_write, userRanks).length > 0 &&\r\n                        \"creatable\" in stage &&\r\n                        stage.creatable) {\r\n                        if (stage.rank_limit_number && Object.keys(stage.rank_limit_number).length > 0) {\r\n                            const setIntersection = intersection(Object.keys(stage.rank_limit_number), userRanks)\r\n                            if (setIntersection.length > 0) {\r\n                                const maxTasksPerStage = calculatemaxTasksPerStage(setIntersection, stage.rank_limit_number)\r\n                                const tasksPerStage = countTasksPerStage(stageId, userTasks, caseID)\r\n                                // console.log(\"caseID: \", caseID)\r\n                                // console.log(\"stageId: \", stageId)\r\n                                // console.log(\"maxTasksPerStage: \", maxTasksPerStage)\r\n                                // console.log(\"tasksPerStage: \", tasksPerStage)\r\n                                // if (tasksPerStage >= maxTasksPerStage) {\r\n                                //     console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                //     delete newFilteredStages[caseID][stageId]\r\n                                //     console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                // }\r\n                                if (tasksPerStage >= maxTasksPerStage) {\r\n                                    // console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                    delete newFilteredStages[caseID][stageId]\r\n                                    // console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                }\r\n                                // console.log(\"userCases: \", userCases)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        delete newFilteredStages[caseID][stageId]\r\n                    }\r\n                })\r\n            })\r\n            setFilteredStages(newFilteredStages)\r\n            //setUnlimStages(newUnlimStages)\r\n        }\r\n    }, [currentUser, userCases, userTasks, id])\r\n\r\n\r\n    const countTasksPerStage = (stage, tasks, caseId) => {\r\n        let occurrences = 0\r\n        Object.values(tasks).map(task => {\r\n            if (task.case_stage_id === stage && caseId === task.case_type) {\r\n                occurrences++\r\n            }\r\n        })\r\n        return occurrences\r\n    }\r\n\r\n    const calculatemaxTasksPerStage = (rArray, limits) => {\r\n        let largestLimit = 0\r\n        rArray.map(v => {\r\n            if (limits[v] > largestLimit) {\r\n                largestLimit = limits[v]\r\n            }\r\n        })\r\n        return largestLimit\r\n    }\r\n\r\n    const intersection = (arrA, arrB) => {\r\n        const setA = new Set(arrA)\r\n        const setB = new Set(arrB)\r\n        let _intersection = new Set()\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem)\r\n            }\r\n        }\r\n        return [..._intersection]\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userRanks.length > 0) {\r\n            firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"ranks\")\r\n                .where(firebase.firestore.FieldPath.documentId(), \"in\", userRanks)\r\n                .onSnapshot(snapshot => {\r\n                    snapshot.docChanges().forEach(change => {\r\n                        if (change.type === \"added\" || change.type === \"modified\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                return { ...prevState, [change.doc.id]: change.doc.data() }\r\n                            })\r\n                        }\r\n                        if (change.type === \"removed\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                const newState = Object.assign({}, prevState)\r\n                                delete newState[change.doc.id]\r\n                                return newState\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }, [userRanks])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            createCaseSelectorForm()\r\n        }\r\n        else {\r\n            setCaseSelector({})\r\n        }\r\n    }, [userCases])\r\n\r\n    const displayTasks = (tasks, stages, cases, cardType, complete) => {\r\n        const displayedTasks = Object.keys(tasks).map(taskId => {\r\n            const caseType = tasks[taskId].case_type\r\n            const stageId = tasks[taskId].case_stage_id\r\n\r\n            let stage = false\r\n\r\n            if (stages) {\r\n                if (stages[stageId]) {\r\n                    stage = stages[stageId]\r\n                }\r\n            } else if (cases && cases[caseType] && cases[caseType][stageId]) {\r\n                stage = cases[caseType][stageId]\r\n            }\r\n\r\n            if (stage && tasks[taskId].is_complete === complete) {\r\n                // console.log(\"TASKS: \", tasks[taskId])\r\n                // console.log(\"userStages: \", userCases)\r\n                return <Grid key={taskId} style={{ padding: 10 }}>\r\n                    <TaskCard\r\n                        stage={stage}\r\n                        stageID={stageId}\r\n                        cardType={cardType}\r\n                        task={tasks[taskId]}\r\n                        user={currentUser}\r\n                        pCase={caseType}\r\n                        id={taskId} />\r\n                </Grid>\r\n            }\r\n        })\r\n        return displayedTasks\r\n    }\r\n\r\n    const showFilters = (stages, bgStages, formData, handleFormChange) => {\r\n        if (Object.keys(stages).length === 1 &&\r\n            stages[Object.keys(stages)[0]] &&\r\n            stages[Object.keys(stages)[0]].filters &&\r\n            Object.keys(stages[Object.keys(stages)[0]].filters).length > 0 &&\r\n            Object.keys(bgStages).length > 0\r\n        ) {\r\n            const stageID = Object.keys(stages)[0]\r\n            const stage = stages[stageID]\r\n            const filters = stage.filters\r\n            filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n            filters.emergency_form_filling['violationTime'] = '=='\r\n            const formQuestions = { properties: {} }\r\n            let formUI = {}\r\n            Object.keys(filters).forEach(stageFilter => {\r\n                Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                    let endProps = bgStages[stageFilter].end.properties[filterQuestion]\r\n                    if (endProps) {\r\n                        delete endProps.dependencies\r\n                        formQuestions.properties[filterQuestion] = endProps\r\n                        // console.log(\"bgStages: \", bgStages)\r\n                        formUI[filterQuestion] = { \"ui:widget\": \"select\" }\r\n                    }\r\n                })\r\n            })\r\n            return (\r\n                <JSchemaForm\r\n                    schema={formQuestions}\r\n                    uiSchema={formUI}\r\n                    formData={formData}\r\n                    onChange={e => {\r\n                        handleFormChange(e)\r\n                    }}\r\n                > </JSchemaForm>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const handleFilterFormChange = (e) => {\r\n        setFilterFormData(e.formData)\r\n        // console.log(\"FilterFormChange: \", e.formData)\r\n    }\r\n\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n\r\n    const createCaseSelectorForm = () => {\r\n        let schema = {\r\n            type: \"object\",\r\n            properties: {\r\n                request: {\r\n                    title: \"Получить задание\",\r\n                    $ref: \"#/definitions/cases\"\r\n                }\r\n            },\r\n            definitions: {\r\n                cases: {\r\n                    type: \"object\",\r\n                    properties: {\r\n                        case: {\r\n                            type: \"string\",\r\n                            enum: [\"none\", ...Object.keys(userCases)],\r\n                            default: \"none\"\r\n                        }\r\n                    },\r\n                    required: ['case'],\r\n                    dependencies: {\r\n                        case: {\r\n                            oneOf: [\r\n                                {\r\n                                    properties: {\r\n                                        case: {\r\n                                            enum: [\r\n                                                \"none\"\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Object.keys(userCases).forEach((k, i) => {\r\n            let c = userCases[k]\r\n            console.log('cc', c)\r\n            if (pageData.cases.includes(k)) {\r\n                schema.definitions.cases.dependencies.case.oneOf.push(\r\n                    {\r\n                        properties: {\r\n                            case: {\r\n                                enum: [\r\n                                    k\r\n                                ]\r\n                            },\r\n                            task: {\r\n                                type: \"string\",\r\n                                enum: ['none', ...Object.keys(c)],\r\n                                default: 'none'\r\n                            }\r\n                        },\r\n                        required: [\r\n                            'task'\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        })\r\n\r\n        // console.log('schema', schema)\r\n        // console.log('schema', JSON.stringify(schema))\r\n        setCaseSelector(schema)\r\n    }\r\n\r\n    const handleFormChange = e => {\r\n        setCaseSelectorResponse(e.formData)\r\n    };\r\n\r\n    const requestTask = () => {\r\n\r\n        if (caseSelectorResponse.request.case !== 'none' && caseSelectorResponse.request.task !== 'none') {\r\n            console.log('rrrr', caseSelectorResponse)\r\n            firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n                status: \"pending\",\r\n                user: currentUser.uid,\r\n                case_type: caseSelectorResponse.request.case,\r\n                case_stage_id: caseSelectorResponse.request.task\r\n            })\r\n        }\r\n        else {\r\n            alert('Выберите case и task!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const checkRank = async () => {\r\n            let assignableRanks = []\r\n            await firebase.firestore().collection('schema').doc('structure').collection('ranks').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    if (pageData.ranks.includes(doc.id) && doc.data().assign_without_moderator) {\r\n                        console.log(\"RANK_ID\", doc.id)\r\n                        assignableRanks.push(doc.id)\r\n                    }\r\n                })\r\n            })\r\n            return assignableRanks\r\n        }\r\n\r\n        const notInUserRanks = (ranks) => {\r\n            return ranks.filter(rank => userRanks && !userRanks.includes(rank))\r\n        }\r\n\r\n        if (pageData && pageData.ranks) {\r\n            let assignableRanks = checkRank()\r\n            assignableRanks.then(ranks => setAvailableRanks(notInUserRanks(ranks)))\r\n        }\r\n\r\n    }, [pageData, userRanks])\r\n\r\n    const requestRank = (rank) => {\r\n        console.log(\"Отправляем запрос\")\r\n        firebase.firestore().collection('rank_requests').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user_id: currentUser.uid,\r\n            processed: false,\r\n            rank: rank\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        {console.log(\"pageData: \", pageData)}\r\n        {console.log(\"userRanks: \", userRanks)}\r\n        {console.log(\"userCases: \", userCases)}\r\n        {console.log(\"userTasks: \", userTasks)}\r\n        {console.log(\"filteredStages: \", filteredStages)}\r\n        {console.log(\"availableStages: \", availableStages)}\r\n        {console.log(\"availableTasks: \", availableTasks)}\r\n        {console.log(\"caseData\", caseData)}\r\n        {console.log(\"availableRanks: \", availableRanks)}\r\n\r\n        <Home />\r\n\r\n        {availableRanks.length > 0 && <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{ paddingBottom: 20 }}>\r\n            <Typography variant=\"h5\">{pageData.message}</Typography>\r\n            {availableRanks.map((rank, i) => <Button key={i} variant=\"contained\" color=\"primary\" onClick={() => requestRank(rank)} style={{ margin: 15 }}>Получить ранг {rank}</Button>)}\r\n        </Grid>}\r\n\r\n        {pageData.showTaskSelector && <Grid style={{ paddingBottom: 30 }}>\r\n            <JSchemaForm\r\n                schema={caseSelector}\r\n                // uiSchema={formUI}\r\n                formData={caseSelectorResponse}\r\n                onChange={e => {\r\n                    handleFormChange(e)\r\n                }}\r\n                onSubmit={requestTask}\r\n            >\r\n                <button type=\"submit\" className='btn btn-info'>Получить</button>\r\n            </JSchemaForm>\r\n        </Grid>}\r\n\r\n        {/* <Grid>\r\n            {Object.keys(userCases).map((k, i) => {\r\n                let c = caseData[k]\r\n                console.log(c)\r\n                if (pageData.cases.includes(k) && c) {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={k} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </Grid> */}\r\n\r\n        {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n        {Object.keys(userRanksDescriptions).length > 0 ? userRanks.map(rank => {\r\n            if (userRanksDescriptions[rank] && userRanksDescriptions[rank].description) {\r\n                return (\r\n                    <Typography variant=\"h5\" key={rank}>{userRanksDescriptions[rank].description}</Typography>\r\n                )\r\n            }\r\n        })\r\n            : null}\r\n        <div className={classes.root}>\r\n            {/*{Object.keys(unlimStages).map(pCase => (*/}\r\n            {/*    Object.keys(unlimStages[pCase]).map(stage => (*/}\r\n            {/*        <Grid key={pCase + stage} style={{padding: 10}}>*/}\r\n            {/*            <TaskCard complete={false}*/}\r\n            {/*                      stage={unlimStages[pCase][stage]}*/}\r\n            {/*                      stageID={stage}*/}\r\n            {/*                      user={currentUser}*/}\r\n            {/*                      pCase={pCase}*/}\r\n            {/*                      cardType = \"creatableUnlim\"/>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    ))*/}\r\n            {/*))}*/}\r\n            <Paper position=\"static\" color=\"default\">\r\n\r\n                <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\" centered\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                    {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n                        <Tab label=\"Доступные\" {...a11yProps(2)} />\r\n                        :\r\n                        null}\r\n\r\n                    {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n            {Object.keys(filteredStages).map(pCase => (\r\n                Object.keys(filteredStages[pCase]).map(stage => (\r\n                    <Grid key={pCase + stage} style={{ padding: 10 }}>\r\n                        <TaskCard complete={false}\r\n                            stage={filteredStages[pCase][stage]}\r\n                            stageID={stage}\r\n                            user={currentUser}\r\n                            pCase={pCase}\r\n                            cardType=\"creatable\" />\r\n                    </Grid>\r\n                ))\r\n            ))}\r\n            {displayTasks(userTasks, false, allCases, \"selected\", false)}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n            {displayTasks(userTasks, false, allCases, \"selected\", true)}\r\n        </TabPanel>\r\n\r\n        {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n            <TabPanel value={tabValue} index={2}>\r\n                {/* {console.log(\"availableTasks: \", availableTasks)} */}\r\n                {showFilters(availableStages, bgStages, filterFormData, handleFilterFormChange)}\r\n                {displayTasks(availableTasks, availableStages, false, \"selectable\", false)}\r\n            </TabPanel>\r\n            :\r\n            null}\r\n        {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n    </Grid>)\r\n}\r\n\r\nexport default Page","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\n//import Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DefaultDialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\nimport { complexStateFirebaseUpdate, simpleStateFirebaseUpdate } from \"../../util/Utilities\"\r\n\r\nimport Loader from \"../form/Loader\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport { Button, DialogContentText, DialogTitle, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport { cloneDeep, isEqual } from 'lodash'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst JSchemaTask = () => {\r\n\tconst [formResponses, setFormResponses] = useState({})\r\n\tconst [taskForm, setTaskForm] = useState({})\r\n\tconst [mergedForm, setMergedForm] = useState({})\r\n\tconst [taskMetadata, setTaskMetadata] = useState({})\r\n\tconst [caseStages, setCaseStages] = useState({})\r\n\tconst [backgroundTasks, setBackgroundTasks] = useState({})\r\n\tconst [backgroundTaskForms, setBackgroundTaskForms] = useState({})\r\n\tconst [mergedBackgroundForms, setMergedBackgroundForms] = useState({})\r\n\tconst [backgroundResponses, setBackgroundResponses] = useState({})\r\n\tconst [currentFocus, setCurrentFocus] = useState(\"\")\r\n\tconst [gRef, setGRef] = useState(null)\r\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\r\n\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser && id) {\r\n\r\n\t\t\tconst ref = firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.doc(id)\r\n\r\n\t\t\tsetGRef(ref)\r\n\r\n\t\t\tref.onSnapshot(doc => {\r\n\t\t\t\tsetTaskMetadata(doc.data())\r\n\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\tsetFormStatus(\"sent\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!doc.data().assigned_users.includes(currentUser.uid)) {\r\n\t\t\t\t\tsetFormStatus(\"released\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\r\n\t\t\t});\r\n\r\n\t\t\tref.collection(\"responses\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tconst changes = {}\r\n\t\t\t\t\tconst deletes = []\r\n\t\t\t\t\tlet modifyResponses = false\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\r\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\r\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\r\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (modifyResponses) {\r\n\t\t\t\t\t\tsetFormResponses(prevState => {\r\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\r\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\r\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\r\n\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tref.collection(\"questions\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}, [id, currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(taskMetadata).length > 0) {\r\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection(\"schema\")\r\n\t\t\t\t.doc(\"structure\")\r\n\t\t\t\t.collection(\"cases\")\r\n\t\t\t\t.doc(taskMetadata.case_type)\r\n\t\t\t\t.collection(\"stages\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t}, [taskMetadata.case_type])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst mergedBgForms = {}\r\n\t\tconsole.log(\"Bg tasks: \", backgroundTasks)\r\n\t\tObject.keys(backgroundTasks).map(taskId => {\r\n\t\t\tif (taskId !== id) {\r\n\t\t\t\tconst stage = backgroundTasks[taskId].case_stage_id\r\n\t\t\t\tif (!mergedBgForms[stage]) {\r\n\t\t\t\t\tmergedBgForms[stage] = {}\r\n\t\t\t\t}\r\n\t\t\t\tmergedBgForms[stage][taskId] = mergeForm(backgroundTaskForms[taskId],\r\n\t\t\t\t\tcaseStages[stage])\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\tconsole.log(\"Merged bg forms: \", mergedBgForms)\r\n\t\tsetMergedBackgroundForms(mergedBgForms)\r\n\t}, [backgroundTasks, backgroundTaskForms, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.keys(mergedForm).length > 0 && formStatus === \"loading\") {\r\n\t\t\tsetFormStatus(\"ready\")\r\n\t\t}\r\n\t}, [formResponses, mergedForm])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\r\n\t}, [taskForm, taskMetadata, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (Object.keys(caseStages).length > 0 && Object.keys(taskMetadata).length > 0 && caseStages[taskMetadata.case_stage_id]) {\r\n\t\t\tconsole.log(\"caseStages: \", caseStages)\r\n\t\t\tconsole.log(\"taskMetadata: \", taskMetadata)\r\n\t\t\tconst backgroundTasksList = caseStages[taskMetadata.case_stage_id].backgroundStages\r\n\t\t\tif (backgroundTasksList && backgroundTasksList.length > 0) {\r\n\t\t\t\tconsole.log(\"backgroundTasksList: \", backgroundTasksList.length)\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"case_id\", \"==\", taskMetadata.case_id)\r\n\t\t\t\t\t.where(\"case_stage_id\", \"in\", backgroundTasksList)\r\n\t\t\t\t\t.orderBy(\"created_date\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Background task: \", change.doc.data())\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [caseStages, taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(backgroundTasks).length > 0) {\r\n\t\t\tObject.keys(backgroundTasks).map(key => {\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"questions\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tcomplexStateFirebaseUpdate(snapshot, setBackgroundTaskForms, key)\r\n\t\t\t\t\t})\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"responses\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tif (!newState[key]) {\r\n\t\t\t\t\t\t\t\t\t\tnewState[key] = {}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data().contents\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[key][change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, [backgroundTasks])\r\n\r\n\t// useEffect( () => {\r\n\t// \tsetMergedQuestions(mergeQuestions([caseStages[taskMetadata.case_stage_id]]))\r\n\t// }, [caseStages, taskQuestions])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst timer = setTimeout(() => {\r\n\t// \t\tif (formResponsesChanged) {\r\n\t// \t\t\tfirebase\r\n\t// \t\t\t\t.firestore()\r\n\t// \t\t\t\t.collection(\"tasks\")\r\n\t// \t\t\t\t.doc(id)\r\n\t// \t\t\t\t.collection(\"responses\")\r\n\t// \t\t\t\t.doc(\"form_responses\")\r\n\t// \t\t\t\t.set(formResponses)\r\n\t// \t\t\t\t.then(docRef => {\r\n\t// \t\t\t\t\tsetFormResponsesChanged(false);\r\n\t// \t\t\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n\t// \t\t\t\t})\r\n\t// \t\t\t\t.catch(error => console.error(\"Error setting document: \", error));\r\n\t// \t\t}\r\n\t// \t}, AUTOSAVE_INTERVAL);\r\n\t// \treturn () => clearTimeout(timer);\r\n\t// }, [formResponsesChanged, formResponses]);\r\n\r\n\r\n\tconst handleFormChange = e => {\r\n\t\tsetFormResponses(e.formData)\r\n\t};\r\n\r\n\t// const handleBlur = e => {\r\n\t// \tif (gRef) {\r\n\t// \t\tconsole.log(\"Responses: \", formResponses)\r\n\t// \t\tconsole.log(\"That is what was blured\", e)\r\n\t// \t\tif (e === \"root\") {\r\n\t// \t\t\tconsole.log(\"e from first option when trigger is root\", e)\r\n\t// \t\t\tObject.keys(formResponses).map(k => {\r\n\t// \t\t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t\t.doc(k)\r\n\t// \t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t\t{merge: true})\r\n\t// \t\t\t})\r\n\t// \t\t} else {\r\n\t// \t\t\tconsole.log(\"e from second option when trigger is not root\", e)\r\n\t// \t\t\tconst docID = e.split(\"_\")[1]\r\n\t// \t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t.doc(docID)\r\n\t// \t\t\t\t.set({contents: formResponses[docID] ? formResponses[docID] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t{merge: true})\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst handleBlur = e => {\r\n\t\tif (gRef) {\r\n\t\t\tconsole.log(\"Responses: \", formResponses)\r\n\t\t\tconsole.log(\"That is what was blured\", e)\r\n\r\n\t\t\tObject.keys(formResponses).map(k => {\r\n\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t.set({ contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete() },\r\n\t\t\t\t\t\t{ merge: true })\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst mergeForm = (taskForm, caseForms) => {\r\n\t\tconst tForm = Object.assign({}, taskForm)\r\n\t\tconst cForms = Object.assign({}, caseForms)\r\n\r\n\t\tcForms.start = cForms.start ? cForms.start : {}\r\n\t\tcForms.end = cForms.end ? cForms.end : {}\r\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\r\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\r\n\r\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\r\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\r\n\r\n\r\n\t\tconst properties = {\r\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\r\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\r\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\r\n\t\t}\r\n\r\n\t\tconst definitions = {\r\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\r\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\r\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\r\n\t\t}\r\n\r\n\t\tlet title = \"\"\r\n\t\tif (tForm.form_questions.title) {\r\n\t\t\ttitle = tForm.form_questions.title\r\n\t\t} else if (cForms.end.title) {\r\n\t\t\ttitle = cForms.end.title\r\n\t\t} else if (cForms.start.title) {\r\n\t\t\ttitle = cForms.start.title\r\n\t\t}\r\n\r\n\t\tlet description = \"\"\r\n\t\tif (tForm.form_questions.description) {\r\n\t\t\tdescription = tForm.form_questions.description\r\n\t\t} else if (cForms.end.description) {\r\n\t\t\tdescription = cForms.end.description\r\n\t\t} else if (cForms.start.description) {\r\n\t\t\tdescription = cForms.start.description\r\n\t\t}\r\n\r\n\t\tconst required = [...new Set([\r\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\r\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\r\n\t\t\t...(cForms.end.required ? cForms.end.required : [])\r\n\t\t])]\r\n\r\n\t\tconst uiOrder = [...new Set([\r\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(tForm.ui_schema[\"ui:order\"] ? tForm.ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\r\n\t\t])]\r\n\r\n\t\tlet uiSchema = {\r\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\r\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\r\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\r\n\t\t}\r\n\r\n\t\tuiSchema = { ...uiSchema, ...{ \"ui:order\": uiOrder } }\r\n\r\n\t\tconst form = {\r\n\t\t\tproperties: properties,\r\n\t\t\tdefinitions: definitions,\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\trequired: required\r\n\t\t}\r\n\t\treturn { form_questions: form, ui_schema: uiSchema }\r\n\r\n\t}\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst getQuestions = async (taskID) => {\r\n\t// \t\tlet q = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn q\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getResponses = async (taskID) => {\r\n\t// \t\tlet r = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn r\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getSameCaseTasks = async () => {\r\n\t// \t\tlet sameCaseTasks = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t// \t\t\treturn doc.data()\r\n\t// \t\t}).then(async data => {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t// \t\t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\t\tif (doc.id !== id) {\r\n\t// \t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t\treturn sameCaseTasks\r\n\t// \t}\r\n\t//\r\n\t// \tconst getForms = async () => {\r\n\t// \t\tlet f = []\r\n\t// \t\tlet locked = true\r\n\t//\r\n\t// \t\tsetForms(null)\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t// \t\t\tif (doc.data().status === 'complete') {\r\n\t// \t\t\t\tlocked = true\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}\r\n\t// \t\t\telse {\r\n\t// \t\t\t\tlocked = false\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet sq = []\r\n\t// \t\tlet sr = []\r\n\t//\r\n\t// \t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t// \t\tsetCaseTasks(sameCaseTasks)\r\n\t// \t\tif (sameCaseTasks.length > 0) {\r\n\t// \t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getQuestions(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getResponses(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tconsole.log(ques)\r\n\t// \t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t// \t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\t//\r\n\t// \t\t\tconsole.log(sq)\r\n\t// \t\t\tconsole.log(sr)\r\n\t// \t\t}\r\n\t//\r\n\t// \t\tlet sf = sq.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tsr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\t//\r\n\t//\r\n\t// \t\tlet q = await getQuestions(id)\r\n\t// \t\tlet r = await getResponses(id)\r\n\t//\r\n\t//\r\n\t// \t\tsetQuestions(q)\r\n\t// \t\tsetResponses(r)\r\n\t//\r\n\t//\r\n\t// \t\t// let newQ = sq.concat(q)\r\n\t// \t\t// let newR = sr.concat(r)\r\n\t//\r\n\t// \t\tf = q.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn (\r\n\t// \t\t\t\t<Form\r\n\t// \t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t// \t\t\t\t\tquestion={el.data}\r\n\t// \t\t\t\t\tindex={i}\r\n\t// \t\t\t\t\tresponse={response}\r\n\t// \t\t\t\t\treturnFile={returnFile}\r\n\t// \t\t\t\t\treturnAnswer={returnAnswer}\r\n\t// \t\t\t\t\tid={el.questionId}\r\n\t// \t\t\t\t\tlocked={locked}\r\n\t// \t\t\t\t\t// ref={uploadsRef}\r\n\t// \t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t// \t\t\t)\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet newF = sf.concat(f)\r\n\t// \t\tsetForms(newF)\r\n\t// \t}\r\n\t// \tif (currentUser) {\r\n\t// \t\tgetForms()\r\n\t// \t}\r\n\t// }, [currentUser, id, lockButton])\r\n\t//\r\n\t//\r\n\t// const returnAnswer = (answer, index) => {\r\n\t// \tconst tmp = answers\r\n\t// \ttmp[index] = answer\r\n\t// \tsetAnswers(tmp)\r\n\t// }\r\n\t//\r\n\t// const returnFile = (file, questionId) => {\r\n\t// \tlet arr = [...file]\r\n\t// \tlet tmp = files\r\n\t// \ttmp[questionId] = arr\r\n\t// \tsetFiles(tmp)\r\n\t// \tconsole.log([...file], questionId)\r\n\t// }\r\n\t//\r\n\t// const upload = async () => {\r\n\t// \t// uploadsRef.current.startUpload()\r\n\t// \tif (Object.keys(files).length > 0) {\r\n\t// \t\tconsole.log('files')\r\n\t// \t\tsetUploading(true)\r\n\t// \t\tfor (const [key, value] of Object.entries(files)) {\r\n\t// \t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t// \t\t\tawait Promise.all(value.map(async v => {\r\n\t// \t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t// \t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t// \t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t// \t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t// \t\t\t}));\r\n\t// \t\t}\r\n\t// \t\tsetUploaded(true)\r\n\t// \t\tsetUploading(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t// \tif (previousTaskId) {\r\n\t// \t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t// \t\t\t.add({\r\n\t// \t\t\t\tanswer: data.reason,\r\n\t// \t\t\t\ttext: data.text,\r\n\t// \t\t\t\tuser_id: currentUser.uid,\r\n\t// \t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t// \t\t\t})\r\n\t// \t\t\t.then(() => setOpenSnackbar(true))\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveToFirebase = async (lock) => {\r\n\t// \tawait upload()\r\n\t// \tquestions.forEach(async (q, i) => {\r\n\t// \t\tif (answers[i] || answers[i] === \"\") {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t// \t\t}\r\n\t// \t})\r\n\t//\r\n\t// \tif (lock) {\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t// \t\tsetLock(true)\r\n\t// \t\tconsole.log(\"Task Locked\")\r\n\t// \t\tsetDialog(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const uploadFilesData = async (filename, url, questionId) => {\r\n\t// \tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t// \tconsole.log(\"Файл отправлен\")\r\n\t// \tif (filename && url) {\r\n\t// \t\trootRef.set(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t// \t\t\t}, { merge: true }\r\n\t// \t\t).then(() => console.log('super'))\r\n\t// \t}\r\n\t// };\r\n\t//\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\t//setFeedback({})\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetDialog(false)\r\n\t\thistory.goBack()\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tconsole.log(\"Dialog open\")\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t// \t\tlet feedback = <Grid>\r\n\t// \t\t\t{/* <Typography>{doc.data().description}</Typography>\r\n\t// \t\t\t<Feedback answers={doc.data().answers} returnAnswer={handleFeedbackSave}/> */}\r\n\t// \t\t\t<JSchemaForm\r\n\t// \t\t\t\tschema={schm}\r\n\t// \t\t\t\tuiSchema={ui}\r\n\t// \t\t\t\tformData={testData}\r\n\t// \t\t\t> </JSchemaForm>\r\n\r\n\t// \t\t</Grid>\r\n\t// \t\tsetReleaseFeedbackData(feedback)\r\n\t// \t})\r\n\t// }, [])\r\n\t//\r\n\t// const releaseTask = () => {\r\n\t// \tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t// \t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t// \t\t\t.then(() => {\r\n\t// \t\t\t\tsetDialog(false)\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}))\r\n\t// \t// alert(feedbackValue)\r\n\t// }\r\n\t//\r\n\tconst handleFeedbackSave = (event) => {\r\n\t\tsetFeedback(event.formData)\r\n\t\tconsole.log('event', event.formData)\r\n\t}\r\n\r\n\tconst changeTaskStatus = (status) => {\r\n\t\tlet root = firebase.firestore()\r\n\t\t\t.collection(\"tasks\")\r\n\t\t\t.doc(id)\r\n\t\t\t.collection(\"user_editable\")\r\n\t\t\t.doc(\"user_editable\")\r\n\r\n\t\tif (status === 'released') {\r\n\t\t\tif (feedbackValue.reasons) {\r\n\t\t\t\tif (feedbackValue.extra) {\r\n\t\t\t\t\troot.update({ status: status, release_status: feedbackValue.reasons, release_description: feedbackValue.extra })\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troot.update({ status: status, release_status: feedbackValue.reasons, release_description: \"\" })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\troot.update({ status: status })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst customImageWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<img src={props.value} alt={props.schema.title}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t}}></img>\r\n\t\t);\r\n\t};\r\n\r\n\tconst customVideoWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<video title={props.schema.title}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t}}\r\n\t\t\t\tcontrols\r\n\t\t\t>\r\n\t\t\t\t<source src={props.value} type=\"video/mp4\"></source>\r\n\t\t\t</video>\r\n\t\t)\r\n\t}\r\n\r\n\tconst customIframeWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<iframe\r\n\t\t\t\ttitle={props.schema.title}\r\n\t\t\t\tsrc={props.value}\r\n\t\t\t\tframeBorder=\"0\"\r\n\t\t\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\tallowFullScreen></iframe>\r\n\t\t)\r\n\t}\r\n\r\n\tconst widgets = {\r\n\t\tcustomImageWidget: customImageWidget,\r\n\t\tcustomVideoWidget: customVideoWidget,\r\n\t\tcustomIframeWidget: customIframeWidget\r\n\t};\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"sent\"}\r\n\t\t\t\t\ttitle={formStatus === \"sent\" ? caseStages[taskMetadata.case_stage_id].releaseTitle ? <ReactMarkdown>{caseStages[taskMetadata.case_stage_id].releaseTitle}</ReactMarkdown> : \"Форма успешно отправлена.\" : \"Отправить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"sent\" ? caseStages[taskMetadata.case_stage_id].releaseMessage ? <ReactMarkdown>{caseStages[taskMetadata.case_stage_id].releaseMessage}</ReactMarkdown> : \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => { changeTaskStatus('complete') }} />}\r\n\r\n\t\t\t\t{/* {dialogType === 'release' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"released\"}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tcontent={formStatus === \"released\" ? \"Спасибо\" : releaseFeedbackData}\r\n\t\t\t\t\ttitle={formStatus === \"released\" ? \"Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.\" : \"Освободить форму?\"}\r\n\t\t\t\t\tdialogFunction={() => { changeTaskStatus('released') }} />} */}\r\n\r\n\t\t\t\t{dialogType === 'release' && <DefaultDialog\r\n\t\t\t\t\topen={dialogState}\r\n\t\t\t\t\tonClose={handleDialogClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t{formStatus === \"released\" &&\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.</DialogTitle>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<DialogContentText>Спасибо</DialogContentText>\r\n\t\t\t\t\t\t\t: <JSchemaForm\r\n\t\t\t\t\t\t\t\tschema={caseStages[taskMetadata.case_stage_id].releaseFeedback_schema}\r\n\t\t\t\t\t\t\t\tuiSchema={caseStages[taskMetadata.case_stage_id].releaseFeedback_ui}\r\n\t\t\t\t\t\t\t\tformData={feedbackValue}\r\n\t\t\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\thandleFeedbackSave(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonSubmit={() => changeTaskStatus('released')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={handleDialogClose} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\tОтмена\r\n                      \t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"primary\" autoFocus>\r\n\t\t\t\t\t\t\t\t\t\tПодтвердить\r\n                      \t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t{formStatus === \"released\" && <DialogActions>\r\n\t\t\t\t\t\t<Button onClick={handleOk} color=\"primary\">\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</DialogActions>}\r\n\t\t\t\t</DefaultDialog>}\r\n\r\n\t\t\t\t{/*{dialogType === 'release' && <DialogFeedback*/}\r\n\t\t\t\t{/*\tstate={dialogState}*/}\r\n\t\t\t\t{/*\tfeedbackValue={feedbackValue}*/}\r\n\t\t\t\t{/*\thandleClose={handleDialogClose}*/}\r\n\t\t\t\t{/*\ttitle={releaseFeedbackData.title}*/}\r\n\t\t\t\t{/*\tdialogFunction={releaseTask}*/}\r\n\t\t\t\t{/*\tanswers={releaseFeedbackData.answers}*/}\r\n\t\t\t\t{/*\tdescription={releaseFeedbackData.description}*/}\r\n\t\t\t\t{/*\treturnFeedback={handleFeedbackSave} />}*/}\r\n\t\t\t\t{/*{redirect && <Redirect to=\"/tasks\" />}*/}\r\n\t\t\t\t{/*<Snackbar*/}\r\n\t\t\t\t{/*\tanchorOrigin={{*/}\r\n\t\t\t\t{/*\t\tvertical: 'bottom',*/}\r\n\t\t\t\t{/*\t\thorizontal: 'left',*/}\r\n\t\t\t\t{/*\t}}*/}\r\n\t\t\t\t{/*\topen={openSnackbar}*/}\r\n\t\t\t\t{/*\tautoHideDuration={6000}*/}\r\n\t\t\t\t{/*\tonClose={handleCloseSnackbar}*/}\r\n\t\t\t\t{/*\tmessage=\"Фидбек отправлен\"*/}\r\n\t\t\t\t{/*\taction={*/}\r\n\t\t\t\t{/*\t\t<React.Fragment>*/}\r\n\t\t\t\t{/*\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>*/}\r\n\t\t\t\t{/*\t\t\t\t<CloseIcon fontSize=\"small\" />*/}\r\n\t\t\t\t{/*\t\t\t</IconButton>*/}\r\n\t\t\t\t{/*\t\t</React.Fragment>*/}\r\n\t\t\t\t{/*\t}*/}\r\n\t\t\t\t{/*/>*/}\r\n\t\t\t\t{/*/!* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} *!/*/}\r\n\t\t\t\t{/*{forms}*/}\r\n\t\t\t\t{/*<Grid container style={{ padding: 20 }} justify=\"center\">*/}\r\n\t\t\t\t{/*\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>*/}\r\n\t\t\t\t{/*\t{!lockButton &&*/}\r\n\t\t\t\t{/*\t\t<div>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>*/}\r\n\t\t\t\t{/*\r\n\t\t\t\t{/*\t\t</div>}*/}\r\n\t\t\t\t{/*</Grid>*/}\r\n\r\n\t\t\t\t{/*{console.log(\"Case stages::: \", caseStages)}*/}\r\n\t\t\t\t{/*{console.log(\"Task metadata::: \", taskMetadata)}*/}\r\n\t\t\t\t{/*{console.log(\"Merged background forms::: \", mergedBackgroundForms)}*/}\r\n\r\n\t\t\t\t{(Object.keys(caseStages).length > 0 &&\r\n\t\t\t\t\tObject.keys(taskMetadata).length > 0 &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id] &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages.length > 0 &&\r\n\t\t\t\t\tObject.keys(mergedBackgroundForms).length > 0) ?\r\n\t\t\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].backgroundStages.map(stage => {\r\n\t\t\t\t\t\t\treturn <div key={stage}>\r\n\t\t\t\t\t\t\t\t{console.log(\"STAGE: \", stage)}\r\n\t\t\t\t\t\t\t\t{console.log(\"mergedBackgroundForms: \", mergedBackgroundForms)}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmergedBackgroundForms[stage] ?\r\n\t\t\t\t\t\t\t\t\t\t(Object.keys(mergedBackgroundForms[stage]).map(taskId => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid style={{ padding: 30 }} key={taskId}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tschema={mergedBackgroundForms[stage][taskId].form_questions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuiSchema={mergedBackgroundForms[stage][taskId].ui_schema}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tformData={backgroundResponses[taskId]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields={{ customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: taskId }, ...{ \"currentUserUid\": currentUser.uid } }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t> </JSchemaForm>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\r\n\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\tschema={mergedForm.form_questions}\r\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\r\n\t\t\t\t\t\tformData={formResponses}\r\n\t\t\t\t\t\tfields={{ customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: id }, ...{ \"currentUserUid\": currentUser.uid }, ...{stage: caseStages[taskMetadata.case_stage_id]} }) }}\r\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\tnoHtml5Validate  \r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={e => {\r\n\t\t\t\t\t\t\tconsole.log(\"That is what was focused\", e)\r\n\t\t\t\t\t\t\tsetCurrentFocus(e.split(\"_\")[1])\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSubmit={() => handleDialogOpen('send')}\r\n\t\t\t\t\t\tonBlur={e => {\r\n\t\t\t\t\t\t\thandleBlur(e)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{formStatus === \"sent\" ?\r\n\t\t\t\t\t\t\t<div>Форма отправлена успешно</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\r\n\t\t\t\t\t\t{formStatus === \"ready\" ? <div>\r\n\t\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].additionalButtons && caseStages[taskMetadata.case_stage_id].additionalButtons.includes(\"release\") ?\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"} style={{\r\n\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t}} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>Отправить</Button>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<div>Вы освободили эту форму и больше не можете ее заполнять.</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull}\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default JSchemaTask","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\n// import Appbar from './Components/Appbar/oldAppBar'\r\nimport Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\nimport Signin from './Components/Auth/Signin';\r\nimport PrivateRoute from './util/PrivateRoute';\r\nimport FAQ from './Components/FAQ/FAQ';\r\nimport Page from \"./Components/Page/Page\";\r\nimport JSchemaTask from \"./Components/Tasks/JSchemaTask\";\r\n\r\n\r\nconst App = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n          <Switch>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/request\">\r\n              <Cases />\r\n            </Route>\r\n            <Route exact path=\"/tasks\">\r\n              <Tasks />\r\n            </Route>\r\n            <Route path=\"/tasks/:id\">\r\n              <Task />\r\n            </Route>\r\n            <Route path=\"/t/:id\">\r\n              <JSchemaTask />\r\n            </Route>\r\n            <Route exact path=\"/tasksObserver\">\r\n              <TasksObserver />\r\n            </Route>\r\n            <Route exact path=\"/notifications\">\r\n              <Notifications />\r\n            </Route>\r\n            <Route exact path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n            <Route exact path=\"/faq\">\r\n              <FAQ />\r\n            </Route>\r\n            <Route path=\"/p/:id\">\r\n              {currentUser ?\r\n                <Page />\r\n                :\r\n                <Signin />}\r\n            </Route>\r\n            <PrivateRoute path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from './util/Auth'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}