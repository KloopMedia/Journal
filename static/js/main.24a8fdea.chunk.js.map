{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/LinearProgressWithLabel.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/form/Loader.js","Components/form/CustomFileUpload.js","Components/Moderator/NewForm.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","Components/Tasks/JSchemaCard.js","util/Utilities.js","Components/Page/Page.js","Components/form/CustomUIKField.js","Components/Tasks/JSchemaTask.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","firestore","settings","ignoreUndefinedProperties","signInWithGoogle","setCustomParameters","prompt","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","setNumOfMessages","messages","setMessages","userRanks","setUserRanks","userPages","setUserPages","availableRanks","setAvailableRanks","snap","forEach","id","catch","onSnapshot","data","ranks","where","assignableRanks","push","length","snapshot","allUserPages","some","rank","includes","docChanges","change","type","prevState","newState","Object","assign","unsubscribe","size","m","count","sort","a","b","toDate","className","Divider","to","keys","map","page","key","name","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","message","i","justify","Typography","flex","title","Button","update","shown","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","marginBottom","marginTop","paddingRight","formControl","maxWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","TabPanel","other","role","hidden","p","a11yProps","paddingTop","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","error","Paper","Tabs","newValue","centered","Tab","task","Form","uploadsRef","feedback_type","hideActions","showOk","handleOk","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","uploading","setUploading","useParams","history","useHistory","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","storage","child","v","put","getDownloadURL","url","url_wo_token","split","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","CircularProgress","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","goBack","Case","caseId","disableCase","setDisable","setMessage","parseInt","order","task_type","taskType","case_type","case_stage_id","border","item","Cases","allCases","setCases","setRanks","getCasesFromFirebase","cases","c","hide","down","dt","setShown","date","opacity","paddingLeft","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","Notification","queryString","require","Home","token","setToken","tgId","setTgId","makeToken","uuid","Date","now","unsubscribeUser","unsubscribeUserPrivate","oldToken","tg_token","oldDate","substring","moment","diff","newToken","tg_id","urlString","parse","location","search","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","Loader","fileBeingUploaded","setFileBeingUploaded","storageRef","progress","on","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","downloadURL","fileLink","secure","replace","filesLinks","contents","allowMultipleFiles","CustomFileUpload","connectingTelegram","setConnectingTelegram","telegramConnected","setTelegramConnected","currentFile","setCurrentFile","pathToFolder","handleTgConnectClick","currentUserUid","fileUpload","linksToFiles","formData","initResp","getComponent","extension","lastIndexOf","controls","schema","stage","cleanFileLink","path","rel","metadata","delete","removeFile","comp","openDialog","JSchemaTask","formResponses","setFormResponses","taskForm","setTaskForm","mergedForm","setMergedForm","taskMetadata","setTaskMetadata","caseStages","setCaseStages","gRef","setGRef","formStatus","setFormStatus","assigned_users","changes","deletes","modifyResponses","cloneDeep","mergeForm","caseForms","tForm","cForms","start","end","start_ui_schema","end_ui_schema","form_questions","ui_schema","properties","definitions","Set","uiOrder","uiSchema","widgets","customImageWidget","customVideoWidget","customIframeWidget","frameBorder","allow","allowFullScreen","fields","customFileUpload","noHtml5Validate","e","handleFormChange","ModeratedTask","taskInfo","setTaskInfo","setPassed","setNotPassed","setVerified","setNotVerified","getReviewStatus","review_status","getData","users","find","getUserInfo","NewForm","PaginatedTasks","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","floor","slice","pagination","TablePagination","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","allStages","setStages","setUsers","setUser","selectedCase","setSelectedCase","selectedStage","setSelectedStage","taskId","setTaskId","casesPath","docs","stages","setUserHandler","getUsers","usersList","usersRef","getTasks","tasksList","tasksRef","Autocomplete","options","renderInput","params","getOptionLabel","option","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","select","FAQ","taskTypes","setTaskType","handleClickApplyFilters","tasklist","taskList","questionList","apply","NativeSelect","FormHelperText","JSchemaTaskCard","cardData","cardType","stageID","pCase","waiting","setWaiting","sendCallbackRequest","callback","callbackType","callbackName","uuidv4","FieldPath","documentId","sendCallbackRequestOld","showCard","stgId","showOldButton","complexStateFirebaseUpdate","setFunction","subState","simpleStateFirebaseUpdate","Page","pageData","setPageData","userCases","setUserCases","setAllCases","userTasks","setUserTasks","filteredStages","setFilteredStages","setCaseData","caseSelector","setCaseSelector","caseSelectorResponse","setCaseSelectorResponse","tabValue","setTabValue","availableStages","setAvailableStages","bgStages","setBgStages","filterFormData","setFilterFormData","availableTasks","setAvailableTasks","userRanksDescriptions","setUserRanksDescriptions","intersection","caseWithSelectableTasks","allAvaiableStages","ranks_read","orderBy","limit","fs","filters","emergency_form_filling","violationType","query","stageFilter","filterQuestion","newFilteredStages","caseID","stageId","ranks_write","creatable","rank_limit_number","setIntersection","maxTasksPerStage","calculatemaxTasksPerStage","countTasksPerStage","occurrences","values","rArray","limits","largestLimit","arrA","arrB","setA","setB","_intersection","elem","has","createCaseSelectorForm","displayTasks","caseType","request","$ref","case","enum","default","dependencies","oneOf","k","checkRank","assign_without_moderator","filter","notInUserRanks","requestRank","showTaskSelector","onSubmit","formQuestions","formUI","endProps","showFilters","CustomUIKField","formContext","JSchema","setJSchema","UIKS","setUIKS","uiksRef","taskRef","uikDataRef","conditional","uikRef","locality","prevResp","region","subregion","observers","arrayRemove","uik","allUiks","createUIKSelectorForm","uikChangeHandler","uikNumber","enumNames","uikTypes","available","customLabels","address","getAvailableUIKS","backgroundTasks","setBackgroundTasks","backgroundTaskForms","setBackgroundTaskForms","mergedBackgroundForms","setMergedBackgroundForms","backgroundResponses","setBackgroundResponses","setCurrentFocus","lastUpdated","setLastUpdated","prevFormResponses","setPrevResponses","initialResponses","setInitialResponses","enableButton","setEnableButton","initState","mergedBgForms","requirementsSatisfied","every","checker","backgroundTasksList","backgroundStages","hasOwnProperty","changeTaskStatus","reasons","extra","wordBreak","releaseFeedback_schema","releaseFeedback_ui","omitExtraData","liveOmit","timeDiff","getTime","onFocus","onBlur","additionalButtons","App","exact","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24a8fdea.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // const db = firebase.firestore();\r\n  // if (window.location.hostname === \"localhost\") {\r\n  //   db.useEmulator(\"localhost\", 8080);\r\n  // }\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  firebase.firestore().settings({\r\n    ignoreUndefinedProperties: true,\r\n  })\r\n  export const signInWithGoogle = () => {\r\n    provider.setCustomParameters({\r\n      prompt: 'select_account'\r\n    });\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\n  // export {db}\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n              console.log('User Exist')\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email,\r\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Badge } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: 'white',\r\n\t\tboxShadow: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor: 'black',\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\tconst { window } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst menuOpen = Boolean(anchorEl);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\r\n\tconst [moderator, setModerator] = useState(false)\r\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\r\n\tconst [messages, setMessages] = useState([])\r\n\tconst [userRanks, setUserRanks] = useState([])\r\n\tconst [userPages, setUserPages] = useState({})\r\n\tconst [availableRanks, setAvailableRanks] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (doc.id === currentUser.uid) {\r\n\t\t\t\t\t\tconsole.log('moderator')\r\n\t\t\t\t\t\tsetModerator(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}).catch(() => setModerator(false))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.collection(\"user_private\")\r\n\t\t\t\t.doc(\"private\")\r\n\t\t\t\t.onSnapshot(doc => {\r\n\t\t\t\t\tif (doc.data()) {\r\n\t\t\t\t\t\tsetUserRanks(doc.data().ranks)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('schema')\r\n\t\t\t\t.doc('structure')\r\n\t\t\t\t.collection(\"ranks\")\r\n\t\t\t\t.where('assign_without_moderator', '==', true)\r\n\t\t\t\t.get().then(snap => {\r\n\t\t\t\t\tlet assignableRanks = []\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tassignableRanks.push(doc.id)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconsole.log(\"Assignable\", assignableRanks)\r\n\t\t\t\t\treturn assignableRanks\r\n\t\t\t\t\t// setAvailableRanks(assignableRanks)\r\n\r\n\t\t\t\t}).then(ranks => setAvailableRanks(ranks))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userRanks && userRanks.length > 0) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t// .where(\"ranks\", \"array-contains-any\", userRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t// snapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t// \tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t// \t\tsetUserPages(prevState => {\r\n\t\t\t\t\t// \t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t// \t\t})\r\n\t\t\t\t\t// \t\tconsole.log(\"User pages: \", change.doc.id)\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// \tif (change.type === \"removed\") {\r\n\t\t\t\t\t// \t\tsetUserPages(prevState => {\r\n\t\t\t\t\t// \t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t// \t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t// \t\t\treturn newState\r\n\t\t\t\t\t// \t\t})\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// })\r\n\t\t\t\t\tlet allUserPages = {}\r\n\t\t\t\t\tsnapshot.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.data().ranks) {\r\n\t\t\t\t\t\t\tlet available = doc.data().ranks.some(rank => userRanks.includes(rank))\r\n\t\t\t\t\t\t\tif (available) {\r\n\t\t\t\t\t\t\t\tallUserPages[doc.id] = doc.data()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tsetUserPages(allUserPages)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [userRanks])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (availableRanks && availableRanks.length > 0) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", availableRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log(\"User pages assign: \", change.doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [availableRanks])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unsubscribe = () => { }\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection('notifications')\r\n\t\t\t\t.where('user_id', 'array-contains', currentUser.uid)\r\n\t\t\t\t.where('shown', '!=', true)\r\n\t\t\t\t.onSnapshot(snap => {\r\n\t\t\t\t\tconsole.log(snap.size)\r\n\t\t\t\t\tlet m = []\r\n\t\t\t\t\tlet count = 0\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\tcount++\r\n\t\t\t\t\t})\r\n\t\t\t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n\t\t\t\t\tsetNumOfMessages(count)\r\n\t\t\t\t\tsetMessages(m)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\treturn () => unsubscribe\r\n\t}, [currentUser])\r\n\r\n\tconst updateFirestoreStatus = (id, index) => {\r\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n\t}\r\n\r\n\tconst handleMenu = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null)\r\n\t}\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{/* <li>\r\n\t\t\t\t\t\t<Link to=\"/tasks\">Задания</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/request\">Получить задание</Link>\r\n\t\t\t\t\t</li> */}\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t\t{/* {moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\r\n\t\t\t\t\t</li> : null} */}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tObject.keys(userPages).map(page => {\r\n\t\t\t\t\t\t\treturn <li key={page}> <Link to={\"/p/\" + page}>\r\n\t\t\t\t\t\t\t\t{userPages[page].name}\r\n\t\t\t\t\t\t\t</Link> </li>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{currentUser &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\topen={menuOpen}\r\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\r\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container key={message.id} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t{currentUser\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span style={{ color: 'black', fontSize: 12, marginLeft: 7 }}>\r\n\t\t\t\t\t\t\t\t{currentUser.email}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\" size=\"small\"\r\n\t\t\t\t\t\t\t\tonClick={() => firebase.auth().signOut()}>\r\n\t\t\t\t\t\t\t\tВыход\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n\t/**\r\n\t * Injected by the documentation to work in an iframe.\r\n\t * You won't need it on your project.\r\n\t */\r\n\twindow: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props) => {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default LinearProgressWithLabel","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 100,\r\n\t\tmaxWidth: 300\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ?\r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, {useState, useEffect, useContext} from 'react'\r\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport TaskCard from './Card'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\n\r\nconst Tasks = (props) => {\r\n    const classes = useStyles()\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [submittedTasks, setSubmitted] = useState(null)\r\n    const [quickTasks, setQuickTasks] = useState(null)\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [value, setValue] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            let submitted = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        if (doc.data().is_complete) {\r\n                            submitted.push({id: doc.id, ...doc.data()})\r\n                        } else {\r\n                            tasks.push({id: doc.id, ...doc.data()})\r\n                        }\r\n\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    setTasks(tasks)\r\n                    setSubmitted(submitted)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n            {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\r\n            {/*<Typography variant=\"h4\">Задания</Typography>*/}\r\n            <div className={classes.root}>\r\n                <Paper position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                          aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\r\n                        <Tab label=\"Выполненные\" {...a11yProps(1)}/>\r\n                        {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                    </Tabs>\r\n                </Paper>\r\n            </div>\r\n            <TabPanel value={value} index={0}>\r\n                {allTasks && allTasks.map((task, i) => (\r\n                    <Grid key={'active_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                {submittedTasks && submittedTasks.map((task, i) => (\r\n                    <Grid key={'submitted_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n           {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n            attachMaterials={question.attachMaterials}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n          {props.hideActions ? \"\" :\r\n              props.showOk ?\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleOk} color=\"primary\">\r\n                          Ok\r\n                      </Button>\r\n                  </DialogActions>\r\n                  :\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleClose} color=\"primary\">\r\n                          Отмена\r\n                      </Button>\r\n                      <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n                          Подтвердить\r\n                      </Button>\r\n                  </DialogActions>}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = async () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tsetUploading(true)\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tawait Promise.all(value.map(async v => {\r\n\t\t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t\t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t\t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t\t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tsetUploaded(true)\r\n\t\t\tsetUploading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait upload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tconsole.log(\"Task Locked\")\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thideActions={uploading || uploaded}\r\n\t\t\t\t\ttitle={uploading ? \"Загрузка файлов\" : uploaded ? \"Файлы загружены\" : \"Отправить задание?\"}\r\n\t\t\t\t\tcontent={uploading ? <CircularProgress /> : uploaded ? \"Спасибо\" : \"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => history.goBack()}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId, userRanks } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // before change\r\n                        //tasks.push({ id: doc.id, ...doc.data() }) \r\n\r\n                        //after change\r\n                        const ranks = doc.data().ranks\r\n                        console.log('RANKS')\r\n                        console.log(ranks)\r\n                        console.log(userRanks)\r\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        // }\r\n                        // else {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\r\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\r\n                        // }\r\n                        tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        \r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n                if (snap.size < 3) {\r\n                    console.log(\"SIZE\", snap.size)\r\n                    setDisable(false)\r\n                }\r\n                else {\r\n                    setDisable(true)\r\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser, disableCase, open])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 0px' }}>\r\n                        {message}\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n    const [userRanks, setRanks] = useState([])\r\n\r\n    // New\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\r\n\r\n                if (doc && doc.exists) {\r\n\r\n                    let ranks = doc.data().ranks\r\n                    console.log(ranks)\r\n                    setRanks(ranks)\r\n                    getCasesFromFirebase(ranks)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    // /////// Old ////////\r\n    // useEffect(() => {\r\n    //     if (currentUser) {\r\n    //         let cases = []\r\n    //         console.log(\"Fired\")\r\n    //         firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n    //             .then((querySnapshot) => {\r\n    //                 querySnapshot.forEach((doc) => {\r\n    //                     cases.push({ id: doc.id, ...doc.data() })\r\n    //                 });\r\n    //             })\r\n    //             .then(() => {\r\n    //                 setCases(cases)\r\n    //                 setReady(true)\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 console.log(\"Error getting documents: \", error);\r\n    //             });\r\n    //     }\r\n    // }, [currentUser])\r\n    // //////////////\r\n\r\n    const getCasesFromFirebase = (ranks) => {\r\n        let cases = []\r\n        console.log(\"Fired\")\r\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.data())\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c, i) => {\r\n                if (c.hide) {\r\n                    return null\r\n                }\r\n                else {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxWidth: 300\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, setShown, shown, date } = props\r\n\r\n\tconst getFormatDate = (dt) => {\r\n\t\t// let month = '' + (d.getMonth() + 1)\r\n\t\t// let day = '' + d.getDate()\r\n\t\t// let year = d.getFullYear()\r\n\r\n\t\t// if (month.length < 2)\r\n\t\t// \tmonth = '0' + month;\r\n\t\t// if (day.length < 2)\r\n\t\t// \tday = '0' + day;\r\n\t\tlet formatDate = `${\r\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\r\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\r\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\r\n\r\n\t\treturn formatDate\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                console.log(messages[0].created_date.toDate())\r\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Dialog, DialogContent, DialogContentText, DialogTitle, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        // height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    message: {\r\n        background: 'lightgreen',\r\n        // height: 200,\r\n        width: 500,\r\n        margin: 10,\r\n        padding: 10,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = (props) => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [tgId, setTgId] = useState(\"\")\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        let unsubscribeUser = () => { }\r\n        let unsubscribeUserPrivate = () => { }\r\n        if (currentUser) {\r\n            unsubscribeUser = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .onSnapshot(doc => {\r\n\r\n                    let oldToken;\r\n                    if (doc.exists && doc.data().tg_token) {\r\n                        oldToken = doc.data().tg_token\r\n                    } else {\r\n                        oldToken = false\r\n                    }\r\n\r\n                    console.log(oldToken)\r\n                    if (oldToken) {\r\n                        console.log(oldToken)\r\n                        let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                        let date = moment().diff(oldDate, 'hours')\r\n                        console.log(date)\r\n                        if (date > 0) {\r\n                            let newToken = makeToken()\r\n                            firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                            setToken(newToken)\r\n                        } else {\r\n                            setToken(oldToken)\r\n                        }\r\n                    } else {\r\n                        console.log('no token')\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                        setToken(newToken)\r\n                    }\r\n                })\r\n            unsubscribeUserPrivate = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    if (doc.exists && doc.data().tg_id) {\r\n                        console.log(\"TGID: \", doc.data().tg_id)\r\n                        setTgId(doc.data().tg_id)\r\n                    }\r\n                    else {\r\n                        setOpen(true)\r\n                    }\r\n                })\r\n        }\r\n        return () => {\r\n            unsubscribeUser()\r\n            unsubscribeUserPrivate()\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let urlString = queryString.parse(window.location.search)\r\n            if (urlString.rank) {\r\n                console.log(urlString.rank)\r\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log('creating request')\r\n                        firebase.firestore().collection('rank_requests').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            user_id: currentUser.uid,\r\n                            processed: false,\r\n                            rank: doc.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('no rank')\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid>\r\n                <Grid container className={classes.message}>\r\n                    <Typography>Чтобы понять, как работает бот посмотрите нашу <Link href=\"https://www.youtube.com/watch?v=jJX5uMqqC7Q&feature=youtu.be\">видео-инструкцию</Link>.</Typography>\r\n                    <Typography>8 апреля с 08:00 до 22:00 состоится генеральная репетиция выборов.</Typography>\r\n                    <Typography>Всю информацию мы отправляем только через телеграм-бот.</Typography>\r\n                </Grid>\r\n                {tgId.length === 0 ?\r\n                    <Dialog\r\n                        fullWidth\r\n                        open={open}\r\n                        aria-labelledby=\"max-width-dialog-title\"\r\n                    >\r\n                        <DialogTitle id=\"max-width-dialog-title\">\r\n                            <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Подключите бот, чтобы пользоваться системой / Системаны колдонуу үчүн ботко кошулуңуз</Typography>\r\n                        </DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                <Grid container justify=\"center\">\r\n                                    <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Вы можете связать свой\r\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\r\n                                    <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Сиз өзүңүздүн аккаунтуңузду биздин телеграм-ботко туташтыра аласыз. Ал үчүн төмөндөгү шилтемени басыңыз.</Typography>\r\n                                    {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на бот / Ботко шилтеме</Link>\r\n                                        : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд, перезагрузите страницу</Typography>}\r\n                                    <Button style={{marginTop: 20}} size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>\r\n                                        Войти с другого аккаунта\r\n                                    </Button>\r\n                                </Grid>\r\n                            </DialogContentText>\r\n                        </DialogContent>\r\n                    </Dialog> :\r\n                    null}\r\n                {/* <Grid container justify=\"center\" className={classes.message}>\r\n                        <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Вы можете связать свой\r\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\r\n                        {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на бот</Link>\r\n                            : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд,\r\n                                перезагрузите страницу</Typography>}\r\n                    </Grid> */}\r\n\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\r\n                <br />\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью\r\n                    аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if (props.userInfo == {}) {\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.userInfo.surname + \" \" + props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          username: {props.userInfo.username}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport {cloneDeep} from \"lodash\";\r\n\r\n\r\nconst Loader = props => {\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState({})\r\n    //const [storedFiles, setStoredFiles] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     props.filesLinks.onSnapshot(doc => {\r\n    //         setStoredFiles(doc.data().contents)\r\n    //     });\r\n    // }, [props.filesLinks])\r\n\r\n    const clear_url = (url) => {\r\n        return url.replace('https://firebasestorage.googleapis.com/v0/b/journal-bb5e3.appspot.com/o', 'https://storage.cloud.google.com/journal-bb5e3.appspot.com') + '?authuser=1'\r\n    }\r\n\r\n\r\n    const upload = async files => {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = props.storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                    console.log('Upload is ' + progress + '% done');\r\n\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                }, error => {\r\n\r\n                    // A full list of error codes is available at\r\n                    // https://firebase.google.com/docs/storage/web/handle-errors\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n                            // User doesn't have permission to access the object\r\n                            break;\r\n\r\n                        case 'storage/canceled':\r\n                            // User canceled the upload\r\n                            break;\r\n\r\n                        default:\r\n                            // Unknown error occurred, inspect error.serverResponse\r\n                            break;\r\n                    }\r\n                }, () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(async downloadURL => {\r\n                        let fileLink = downloadURL\r\n                        if (props.secure) {\r\n                            fileLink = clear_url(downloadURL.split('?')[0])\r\n                        }\r\n                        await props.filesLinks.set({contents: {[fileLink]: {name: file.name, url: fileLink}}},\r\n\t\t\t\t\t{merge: props.allowMultipleFiles})\r\n                        setFileBeingUploaded(prevState => {\r\n                            const newState = Object.assign({}, prevState)\r\n                            delete newState[file.name]\r\n                            return newState\r\n                        })\r\n                        console.log('File available at', fileLink);\r\n                    });\r\n                });\r\n\r\n            // let url = await snap.ref.getDownloadURL()\r\n            // let url_wo_token = url.split(\"?\")[0]\r\n            // console.log(\"File uploaded: \", url)\r\n            // //await uploadFilesData(file.name, url_wo_token, key)\r\n        }));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files])\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                multiple={props.allowMultipleFiles}\r\n            />\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <p>{filename}</p>\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>\r\n                </div>\r\n\r\n            )}\r\n            {/*{storedFiles ? <p>Сохраненные файлы</p> : <p></p>}*/}\r\n            {/*{Object.keys(storedFiles).map(fileUrl =>*/}\r\n            {/*    <div key={fileUrl}>*/}\r\n            {/*        <a href={fileUrl}>{storedFiles[fileUrl].name}</a>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader","import firebase from \"../../util/Firebase\";\r\nimport Loader from \"./Loader\";\r\nimport React, { useState } from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Dialog, Typography } from \"@material-ui/core\";\r\n\r\nconst CustomFileUpload = props => {\r\n\r\n\tconst [connectingTelegram, setConnectingTelegram] = useState(false)\r\n\tconst [telegramConnected, setTelegramConnected] = useState(false)\r\n\tconst [open, setOpen] = useState(false)\r\n\tconst [currentFile, setCurrentFile] = useState(null)\r\n\r\n\tlet pathToFolder = null\r\n\tlet handleTgConnectClick = null\r\n\tif (!props.disabled) {\r\n\t\tpathToFolder = firebase\r\n\t\t\t.storage()\r\n\t\t\t.ref(props.taskID)\r\n\t\t\t.child(props.name)\r\n\t\t\t.child(props.currentUserUid)\r\n\r\n\t\thandleTgConnectClick = async () => {\r\n\t\t\tsetConnectingTelegram(true)\r\n\t\t\tawait firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"users\")\r\n\t\t\t\t.doc(props.currentUserUid)\r\n\t\t\t\t.set({ fileUpload: props.taskID + \"/\" + props.name }, { merge: true })\r\n\t\t\tsetConnectingTelegram(false)\r\n\t\t\tsetTelegramConnected(true)\r\n\r\n\t\t}\r\n\t}\r\n\tconst linksToFiles = firebase\r\n\t\t.firestore()\r\n\t\t.collection(\"tasks\")\r\n\t\t.doc(props.taskID)\r\n\t\t.collection(\"responses\")\r\n\t\t.doc(props.name)\r\n\r\n\t// console.log(\"Props formData: \", props.formData)\r\n\r\n\tconst removeFile = (path) => {\r\n\t\tconsole.log(path)\r\n\t\tlinksToFiles.set({\r\n\t\t\tcontents: { [path]: firebase.firestore.FieldValue.delete() }\r\n\t\t}, { merge: true })\r\n\t\t\t.then(() => console.log(\"file removed\"))\r\n\t\t\t.then(() => props.onChange())\r\n\t\t\t.catch(error => console.log(error))\r\n\t}\r\n\r\n\tlet files = {}\r\n\tif (props.formData && Object.keys(props.formData).length > 0) {\r\n\t\tfiles = props.formData\r\n\t\tconsole.log('files formdata', files)\r\n\t}\r\n\telse if (props.initResp && props.name && props.initResp[props.name] && props.initResp[props.name].contents && Object.keys(props.initResp[props.name].contents).length > 0) {\r\n\t\tfiles = props.initResp[props.name].contents\r\n\t\tconsole.log('files initresp', files)\r\n\t}\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst openDialog = (file) => {\r\n\t\tlet comp = getComponent(file)\r\n\t\tsetCurrentFile(comp)\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\tconst getComponent = (file) => {\r\n\t\tconsole.log(\"debug file viewer\", file)\r\n\t\tif (file) {\r\n\t\t\tconst extension = file.name.substring(file.name.lastIndexOf('.') + 1, file.name.length) || ''\r\n\t\t\tconsole.log(\"debug file extension\", extension)\r\n\t\t\tif (extension === 'jpeg' || extension === 'jpg' || extension === 'png') {\r\n\t\t\t\treturn <img src={file.url} alt={file.name}></img>\r\n\t\t\t}\r\n\t\t\telse if (extension === 'mp4' || extension === 'ogg' || extension === 'webm') {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<video controls=\"controls\">\r\n\t\t\t\t\t\t<source src={file.url}></source>\r\n\t\t\t\t\t</video>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn <Typography>Файл не является фото или видео</Typography>\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Dialog onClose={handleClose} open={open}>\r\n\t\t\t\t{currentFile}\r\n\t\t\t</Dialog>\r\n\t\t\t{props.schema.title ? <div>{props.schema.title}</div> : <div></div>}\r\n\t\t\t{props.schema.description ? <div>{props.schema.description}</div> : <div></div>}\r\n\t\t\t{props.disabled ? null :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Loader storageRef={pathToFolder}\r\n\t\t\t\t\t\tallowMultipleFiles={props.stage && props.stage.allowMultipleFiles ? props.stage.allowMultipleFiles : false}\r\n\t\t\t\t\t\tsecure={props.stage && props.stage.cleanFileLink ? props.stage.cleanFileLink : false}\r\n\t\t\t\t\t\tfilesLinks={linksToFiles} />\r\n\t\t\t\t\t{connectingTelegram ?\r\n\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\ttelegramConnected ?\r\n\t\t\t\t\t\t\t<div>Вы можете начать загрузку файлов через бота. Все файлы, отправляемые боту, будут сохраняться здесь. После загрузки файлов через бот, не забудьте вернуться сюда и нажать \"ОТПРАВИТЬ\". <a href=\"https://t.me/journal_tg_bot\">Перейти в бот.</a></div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Вы так же можете загрузить сюда файлы через Телеграм-бота. Для этого нажмите кнопку ниже: </p>\r\n\t\t\t\t\t\t\t\t<button onClick={handleTgConnectClick}>Загрузка через бот</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{files ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{Object.keys(files).map(path =>\r\n\t\t\t\t\t\t<div key={path}>\r\n\t\t\t\t\t\t\t<a href={files[path].url} target=\"_blank\" rel=\"noreferrer\">{files[path].name}</a>\r\n\t\t\t\t\t\t\t{props.metadata && !props.metadata.is_complete && <IconButton onClick={() => removeFile(path)} size=\"small\"><ClearIcon /></IconButton>}\r\n\t\t\t\t\t\t\t<IconButton onClick={() => openDialog(files[path])} size=\"small\"><VisibilityIcon /></IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div></div>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CustomFileUpload\r\n\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport { cloneDeep } from 'lodash'\r\n\r\n\r\nconst JSchemaTask = (props) => {\r\n\tconst [formResponses, setFormResponses] = useState({})\r\n\tconst [taskForm, setTaskForm] = useState({})\r\n\tconst [mergedForm, setMergedForm] = useState({})\r\n\tconst [taskMetadata, setTaskMetadata] = useState({})\r\n\tconst [caseStages, setCaseStages] = useState({})\r\n\tconst [gRef, setGRef] = useState(null)\r\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst id = props.id\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser && id) {\r\n\r\n\t\t\tconst ref = firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.doc(id)\r\n\r\n\t\t\tsetGRef(ref)\r\n\r\n\t\t\tref.onSnapshot(doc => {\r\n\t\t\t\tsetTaskMetadata(doc.data())\r\n\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\tsetFormStatus(\"sent\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!doc.data().assigned_users.includes(currentUser.uid)) {\r\n\t\t\t\t\tsetFormStatus(\"released\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\r\n\t\t\t});\r\n\r\n\t\t\tref.collection(\"responses\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tconst changes = {}\r\n\t\t\t\t\tconst deletes = []\r\n\t\t\t\t\tlet modifyResponses = false\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\r\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\r\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\r\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (modifyResponses) {\r\n\t\t\t\t\t\tsetFormResponses(prevState => {\r\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\r\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\r\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\r\n\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tref.collection(\"questions\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}, [id, currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(taskMetadata).length > 0) {\r\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection(\"schema\")\r\n\t\t\t\t.doc(\"structure\")\r\n\t\t\t\t.collection(\"cases\")\r\n\t\t\t\t.doc(taskMetadata.case_type)\r\n\t\t\t\t.collection(\"stages\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t}, [taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\r\n\t}, [taskForm, taskMetadata, caseStages])\r\n\r\n\tconst handleFormChange = e => {\r\n\t\tsetFormResponses(e.formData)\r\n\t};\r\n\r\n\tconst mergeForm = (taskForm, caseForms) => {\r\n\t\tconst tForm = Object.assign({}, taskForm)\r\n\t\tconst cForms = Object.assign({}, caseForms)\r\n\r\n\t\tcForms.start = cForms.start ? cForms.start : {}\r\n\t\tcForms.end = cForms.end ? cForms.end : {}\r\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\r\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\r\n\r\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\r\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\r\n\r\n\r\n\t\tconst properties = {\r\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\r\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\r\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\r\n\t\t}\r\n\r\n\t\tconst definitions = {\r\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\r\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\r\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\r\n\t\t}\r\n\r\n\t\tlet title = \"\"\r\n\t\tif (tForm.form_questions.title) {\r\n\t\t\ttitle = tForm.form_questions.title\r\n\t\t} else if (cForms.end.title) {\r\n\t\t\ttitle = cForms.end.title\r\n\t\t} else if (cForms.start.title) {\r\n\t\t\ttitle = cForms.start.title\r\n\t\t}\r\n\r\n\t\tlet description = \"\"\r\n\t\tif (tForm.form_questions.description) {\r\n\t\t\tdescription = tForm.form_questions.description\r\n\t\t} else if (cForms.end.description) {\r\n\t\t\tdescription = cForms.end.description\r\n\t\t} else if (cForms.start.description) {\r\n\t\t\tdescription = cForms.start.description\r\n\t\t}\r\n\r\n\t\tconst required = [...new Set([\r\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\r\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\r\n\t\t\t...(cForms.end.required ? cForms.end.required : [])\r\n\t\t])]\r\n\r\n\t\tconst uiOrder = [...new Set([\r\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(tForm.ui_schema[\"ui:order\"] ? tForm.ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\r\n\t\t])]\r\n\r\n\t\tlet uiSchema = {\r\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\r\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\r\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\r\n\t\t}\r\n\r\n\t\tuiSchema = { ...uiSchema, ...{ \"ui:order\": uiOrder } }\r\n\r\n\t\tconst form = {\r\n\t\t\tproperties: properties,\r\n\t\t\tdefinitions: definitions,\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\trequired: required\r\n\t\t}\r\n\t\treturn { form_questions: form, ui_schema: uiSchema }\r\n\r\n\t}\r\n\r\n\tconst customImageWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<img src={props.value} alt={props.schema.title}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t}}></img>\r\n\t\t);\r\n\t};\r\n\r\n\tconst customVideoWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<video title={props.schema.title}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t}}\r\n\t\t\t\tcontrols\r\n\t\t\t>\r\n\t\t\t\t<source src={props.value} type=\"video/mp4\"></source>\r\n\t\t\t</video>\r\n\t\t)\r\n\t}\r\n\r\n\tconst customIframeWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<iframe\r\n\t\t\t\ttitle={props.schema.title}\r\n\t\t\t\tsrc={props.value}\r\n\t\t\t\tframeBorder=\"0\"\r\n\t\t\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\tallowFullScreen></iframe>\r\n\t\t)\r\n\t}\r\n\r\n\tconst widgets = {\r\n\t\tcustomImageWidget: customImageWidget,\r\n\t\tcustomVideoWidget: customVideoWidget,\r\n\t\tcustomIframeWidget: customIframeWidget\r\n\t};\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\r\n\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\tschema={mergedForm.form_questions}\r\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\r\n\t\t\t\t\t\tformData={formResponses}\r\n\t\t\t\t\t\tfields={{ customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: id }, ...{ \"currentUserUid\": currentUser.uid }, ...{stage: caseStages[taskMetadata.case_stage_id]} }) }}\r\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\tnoHtml5Validate \r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}><></>\r\n\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull}\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default JSchemaTask","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\nimport NewForm from './NewForm'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\tlet review_status\r\n\t\t\tif (doc.exists && doc.data() && doc.data().review_status) {\r\n\t\t\t\treview_status = doc.data().review_status\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treview_status = 'pending'\r\n\t\t\t}\r\n\t\t\tconsole.log(\"TEST TEST\", doc.data())\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t{/* <Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid> */}\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {/* {forms} */}\r\n\t\t\t<Typography>{\"Task ID: \" + props.task.id}</Typography>\r\n\t\t\t<Typography>{\"Case ID: \" + props.task.case_id}</Typography>\r\n            <NewForm id={props.task.id} />\r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport { Button, Grid } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [allCases, setCases] = useState([])\r\n    const [allStages, setStages] = useState({})\r\n    const [users, setUsers] = React.useState([]);\r\n\r\n    const [user, setUser] = React.useState(\"\");\r\n    const [selectedCase, setSelectedCase] = useState(null)\r\n    const [selectedStage, setSelectedStage] = React.useState(null);\r\n    const [taskId, setTaskId] = useState(\"\")\r\n\r\n    const casesPath = firebase.firestore().collection('schema').doc('structure').collection('cases')\r\n\r\n    useEffect(() => {\r\n        casesPath.get().then(docs => {\r\n            const cases = []\r\n            docs.forEach(doc => {\r\n                cases.push(doc.id)\r\n            })\r\n            return cases\r\n        }).then(cases => setCases(cases))\r\n\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        setStages(null)\r\n        if (selectedCase) {\r\n            casesPath.doc(selectedCase).collection(\"stages\").get().then(docs => {\r\n                const stages = []\r\n                docs.forEach(doc => {\r\n                    stages.push(doc.id)\r\n                })\r\n                return stages\r\n            }).then(stages => setStages(stages))\r\n        }\r\n    }, [selectedCase])\r\n\r\n\r\n    const setSelectedCaseHandler = (value) => {\r\n        setSelectedStage(null)\r\n        setSelectedCase(value);\r\n    };\r\n\r\n    const setSelectedStageHandler = (value) => {\r\n        setSelectedStage(value);\r\n    };\r\n\r\n    const setUserHandler = (value) => {\r\n        setUser(value);\r\n    }\r\n\r\n    const handleClickApplyFilters = (event) => {\r\n        getTasks()\r\n    }\r\n\r\n\r\n    const getUsers = async () => {\r\n        let usersList = []\r\n        let usersRef = firebase.firestore().collection('users')\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where(\"is_complete\", \"==\", true)\r\n\r\n        // console.log('USER ID')\r\n        console.log(user)\r\n        console.log(selectedCase)\r\n        console.log(selectedStage)\r\n\r\n        if (user !== \"\") {\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n            console.log(\"USER FIRED\", user)\r\n        }\r\n\r\n        if (selectedCase !== null) {\r\n            tasksRef = tasksRef.where(\"case_type\", \"==\", selectedCase)\r\n            console.log(\"CASE FIRED\", selectedCase)\r\n        }\r\n\r\n        if (selectedStage !== null) {\r\n            tasksRef = tasksRef.where(\"case_stage_id\", \"==\", selectedStage)\r\n            console.log(\"STAGE FIRED\", selectedStage)\r\n\r\n        }\r\n\r\n        if (taskId !== \"\") {\r\n            firebase.firestore().collection('tasks').doc(taskId).get().then(doc => setTasks([{id:doc.id, ...doc.data()}]))\r\n        }\r\n        else {\r\n            await tasksRef.get().then(docs => {\r\n                docs.forEach(doc => {\r\n                    tasksList.push({ id: doc.id, ...doc.data() })\r\n                })\r\n    \r\n                setTasks(tasksList)\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers()\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container justify=\"center\" style={{ padding: 15 }}>\r\n                <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={allCases}\r\n                    style={{ width: 350 }}\r\n                    disabled={taskId.length > 0}\r\n                    value={selectedCase}\r\n                    onChange={(event, newValue) => setSelectedCaseHandler(newValue)}\r\n                    renderInput={(params) => <TextField {...params} fullWidth label=\"Выберите фильтр по case\" variant=\"outlined\" />}\r\n                />\r\n            </Grid>\r\n\r\n            {allStages !== null && allStages.length > 0 && <Grid container justify=\"center\" style={{ padding: 15 }}>\r\n                <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={allStages}\r\n                    style={{ width: 350 }}\r\n                    disabled={taskId.length > 0}\r\n                    value={selectedStage}\r\n                    onChange={(event, newValue) => setSelectedStageHandler(newValue)}\r\n                    renderInput={(params) => <TextField {...params} fullWidth label=\"Выберите фильтр по stage\" variant=\"outlined\" />}\r\n                />\r\n            </Grid>}\r\n\r\n            <Grid container justify=\"center\" style={{ padding: 15 }}>\r\n                <Autocomplete\r\n                    id=\"combo-box-demo\"\r\n                    options={users}\r\n                    getOptionLabel={(option) => option.surname + \" \" + option.name + \" (\" + option.username + \")\"}\r\n                    style={{ width: 350 }}\r\n                    disabled={taskId.length > 0}\r\n                    value={user.value}\r\n                    onChange={(event, newValue) => {\r\n                        if (newValue) {\r\n                            setUserHandler(newValue.id)\r\n                        }\r\n                        else {\r\n                            setUserHandler(\"\")\r\n                        }\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} fullWidth label=\"Выберите фильтр по users\" variant=\"outlined\" />}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" style={{ padding: 15 }}>\r\n                <TextField\r\n                    style={{ width: 350 }}\r\n                    value={taskId}\r\n                    variant=\"outlined\"\r\n                    label=\"Введите id таска\"\r\n                    onChange={(event, newValue) => setTaskId(event.target.value)}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TasksObserver","import React, { useContext } from 'react'\r\nimport { signInWithGoogle } from '../../util/Firebase'\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Signin = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n            <br />\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px grey solid',\r\n        padding: '0px 10px',\r\n        margin: 10,\r\n        background: 'yellow',\r\n\t\twidth: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    button: {\r\n        background: 'orange',\r\n        margin: '10px 0'\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { title, sendAnswer, taskId, questionId } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\r\n            </Box>\r\n            <TextField\r\n                label=\"Мой ответ\"\r\n                value={value}\r\n                style={{ background: 'white' }}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from './Card'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: '20px 0',\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst FAQ = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const classes = useStyles();\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\r\n\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value);\r\n    };\r\n\r\n    const handleClickApplyFilters = async (event) => {\r\n        let tasklist = await getTasks()\r\n        getQuestions(tasklist)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\r\n\r\n        if (taskType !== 'ВСЕ') {\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n        console.log('fired')\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\r\n            setTasks(tasksList)\r\n        })\r\n        return tasksList\r\n    }\r\n\r\n    const getQuestions = async (taskList) => {\r\n        let questionList = await taskList.map(async task => {\r\n            let arr = []\r\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\r\n                })\r\n            })\r\n            return arr\r\n        })\r\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\r\n    }\r\n\r\n    const sendAnswer = (taskId, questionId, answer) => {\r\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\r\n        console.log(taskId, answer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <FormControl className={classes.select}>\r\n                    <NativeSelect\r\n                        value={taskType}\r\n                        onChange={setTaskTypeHandler}\r\n                        name=\"filterTaskType\"\r\n                    >\r\n                        {\r\n                            taskTypes.map((taskType, i) => (\r\n                                <option key={taskType} value={taskType}>{taskType}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" className={classes.select}>\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                {questions\r\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\r\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FAQ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport firebase from \"../../util/Firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250,\r\n\t\tmaxWidth: 400\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst JSchemaTaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { complete, id, cardColor, cardType, stage, stageID, task, user, pCase } = props\r\n\r\n\tconst [waiting, setWaiting] = useState(false)\r\n\tconst [newTaskId, setNewTaskId] = useState(null)\r\n\r\n\tconst handleOpen = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequest()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/t/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOpenOld = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequestOld()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/tasks/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst sendCallbackRequest = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/t/\" + change.doc.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst sendCallbackRequestOld = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/tasks/\" + change.doc.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst displayJSON = (cardData) => {\r\n\t\treturn Object.keys(cardData).map((stgId, i) => {\r\n\t\t\t// console.log(\"STAGE: \", stage)\r\n\t\t\tif (stgId === 'message') {\r\n\t\t\t\treturn <Typography key={stgId + i}>{cardData[stgId]}</Typography>\r\n\t\t\t}\r\n\t\t\treturn Object.keys(cardData[stgId]).map(response => {\r\n\t\t\t\t// console.log(\"RESPONSE: \", response)\r\n\t\t\t\tif (stage && stage.cardData && stage.cardData[stgId] && stage.cardData[stgId].includes(response)) {\r\n\t\t\t\t\tif (response === \"attachedFiles\") {\r\n\t\t\t\t\t\t// console.log(\"FILES: \")\r\n\t\t\t\t\t\treturn <div key={stgId + response}>Files</div>\r\n\t\t\t\t\t} else return (\r\n\t\t\t\t\t\t<typography variant=\"body2\" component=\"p\" key={stgId + response}>\r\n\t\t\t\t\t\t\t{/* {console.log(\"TEXT: \", cardData[stgId][response])} */}\r\n\t\t\t\t\t\t\t{JSON.stringify(cardData[stgId][response], null, 2)}\r\n\t\t\t\t\t\t</typography>)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Card key={id} className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{stage.title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{id}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{(task && task.cardData && (cardType === \"selectable\" || (stage && stage.showCard))) ?\r\n\t\t\t\t\t\t\tdisplayJSON(task.cardData)\r\n\t\t\t\t\t\t\t//JSON.stringify(task.cardData, null, 2)\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\"Задание: \" + stage.description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{waiting ?\r\n\t\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>{(cardType === \"creatableUnlim\") ? \"СОЗДАТЬ НОВУЮ ФОРМУ\" : \"Открыть\"}</Button>\r\n\t\t\t\t\t\t\t{stage.showOldButton && <Button size=\"small\" onClick={handleOpenOld}>Открыть (Old)</Button>}\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default JSchemaTaskCard","const complexStateFirebaseUpdate = (snapshot, setFunction, subState) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                if (!newState[subState]) {\r\n                    newState[subState] = {}\r\n                }\r\n                newState[subState][change.doc.id] = change.doc.data()\r\n                // console.log(\"User stages: \", newState)\r\n                return newState\r\n            })\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[subState][change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst simpleStateFirebaseUpdate = (snapshot, setFunction) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => (\r\n                {...prevState, [change.doc.id]: change.doc.data()}\r\n            ))\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate}","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect, useParams } from 'react-router';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TaskCard from \"../Tasks/JSchemaCard\";\r\nimport { cloneDeep } from \"lodash\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport Case from '../Cases/Case'\r\n\r\nimport { complexStateFirebaseUpdate, simpleStateFirebaseUpdate } from \"../../util/Utilities\";\r\nimport Home from '../Home/Home';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\nconst Page = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const { id } = useParams();\r\n\r\n    const classes = useStyles()\r\n\r\n    const [pageData, setPageData] = useState({})\r\n    const [userRanks, setUserRanks] = useState([])\r\n    const [userCases, setUserCases] = useState({})\r\n    const [allCases, setAllCases] = useState({})\r\n    const [userTasks, setUserTasks] = useState({})\r\n    const [filteredStages, setFilteredStages] = useState({})\r\n    const [caseData, setCaseData] = useState({})\r\n    const [caseSelector, setCaseSelector] = useState({})\r\n    const [caseSelectorResponse, setCaseSelectorResponse] = useState({})\r\n    //const [unlimStages, setUnlimStages] = useState({})\r\n    const [tabValue, setTabValue] = useState(0)\r\n    const [availableStages, setAvailableStages] = useState({})\r\n    const [bgStages, setBgStages] = useState({})\r\n    const [filterFormData, setFilterFormData] = useState({})\r\n    const [availableTasks, setAvailableTasks] = useState({})\r\n    const [userRanksDescriptions, setUserRanksDescriptions] = useState({})\r\n    const [filterSettings, setFilterSettings] = useState(() => { })\r\n    const [availableRanks, setAvailableRanks] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Page id: \", id)\r\n        // console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('pages')\r\n                .doc(id)\r\n                .onSnapshot(doc => {\r\n                    setPageData(doc.data())\r\n                    // console.log(\"Page data: \", doc.data())\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id])\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Page id: \", id)\r\n        // console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser && pageData && pageData.ranks) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    setUserRanks(intersection(doc.data().ranks, pageData.ranks))\r\n                    // console.log(\"User ranks: \", doc.data().ranks)\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id, pageData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0) {\r\n            setUserCases({})\r\n            setUserTasks({})\r\n            setAllCases({})\r\n            setAvailableStages({})\r\n            setAvailableTasks({})\r\n            setBgStages({})\r\n            const casesPath = firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"cases\")\r\n\r\n            pageData.cases.map(pCase => {\r\n                // console.log(\"PCASE\", pCase)\r\n                casesPath.doc(pCase).get().then(doc => {\r\n                    setCaseData(prevState => {\r\n                        const newState = Object.assign({}, prevState)\r\n                        newState[doc.id] = doc.data()\r\n                        return newState\r\n                    })\r\n                })\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_write\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setUserCases, pCase)\r\n                    })\r\n\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setAllCases, pCase)\r\n                    })\r\n            })\r\n            // console.log(\"ALLCASES\", allCases)\r\n            firebase.firestore()\r\n                .collection(\"tasks\")\r\n                .where(\"assigned_users\", \"array-contains\", currentUser.uid)\r\n                // .where(\"case_type\", \"in\", pageData.cases)\r\n                .onSnapshot(snapshot => {\r\n                    // simpleStateFirebaseUpdate(snapshot, setUserTasks)\r\n                    snapshot.docChanges().forEach(change => {\r\n                        if (pageData.cases.includes(change.doc.data().case_type)) {\r\n                            if (change.type === \"added\" || change.type === \"modified\") {\r\n                                setUserTasks(prevState => (\r\n                                    { ...prevState, [change.doc.id]: change.doc.data() }\r\n                                ))\r\n                            }\r\n                            if (change.type === \"removed\") {\r\n                                setUserTasks(prevState => {\r\n                                    const newState = Object.assign({}, prevState)\r\n                                    delete newState[change.doc.id]\r\n                                    return newState\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n\r\n            if (pageData.caseWithSelectableTasks) {\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    // .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        let allAvaiableStages = {}\r\n                        snapshot.forEach(doc => {\r\n                            if (doc.data().ranks_read) {\r\n                                let available = doc.data().ranks_read.some(rank => userRanks.includes(rank))\r\n                                if (available) {\r\n                                    allAvaiableStages[doc.id] = doc.data()\r\n                                }\r\n                            }\r\n                        })\r\n                        setAvailableStages(allAvaiableStages)\r\n                        // simpleStateFirebaseUpdate(snapshot, setAvailableStages)\r\n                    })\r\n\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setBgStages)\r\n                    })\r\n\r\n                firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n    }, [currentUser, pageData, userRanks, id])\r\n\r\n\r\n    useEffect(() => {\r\n        let fs = () => { }\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0 && pageData.caseWithSelectableTasks) {\r\n            // console.log(\"filtersData\", filterFormData)\r\n            if (Object.keys(filterFormData).length !== 0) {\r\n                const stages = availableStages\r\n                const stageID = Object.keys(stages)[0]\r\n                const stage = stages[stageID]\r\n                const filters = stage.filters\r\n                filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n                filters.emergency_form_filling['violationTime'] = '=='\r\n                // console.log(\"filters\", filters)\r\n                // console.log(\"filtersData\", filterFormData)\r\n                setAvailableTasks({})\r\n                let collection = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                let query = collection.where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n\r\n                Object.keys(filters).forEach(stageFilter => {\r\n                    Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                        // console.log(stageFilter, filterQuestion)\r\n                        if (filterFormData[filterQuestion] && filterFormData[filterQuestion][filterQuestion]) {\r\n                            // console.log('filters3', filterFormData[filterQuestion][filterQuestion], filters[stageFilter][filterQuestion][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}.${filterQuestion}`, filters[stageFilter][filterQuestion][filterQuestion], filterFormData[filterQuestion][filterQuestion])\r\n                        }\r\n                        else if (filterFormData[filterQuestion] && Object.keys(filterFormData[filterQuestion]).length > 0 && !filterFormData[filterQuestion][filterQuestion]) {\r\n                            // console.log('filters4', filterFormData[filterQuestion], filters[stageFilter][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}`, filters[stageFilter][filterQuestion], filterFormData[filterQuestion])\r\n                        }\r\n                    })\r\n                })\r\n                // query = query.where('cardData.emergency_form_filling.violationType.violationType', '==', 'Нарушения в ходе голосования / Добуш берүү убагындагы мыйзам бузуулар')\r\n                // query = query.where('cardData.emergency_form_filling.region.region', '==', 'г. Бишкек')\r\n                // query = query.where('cardData.emergency_form_filling.violationTime', '==', '12:00-13:00')\r\n\r\n                query = query.orderBy('created_date', 'desc').limit(25).onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                })\r\n                fs = query\r\n            } else {\r\n                setAvailableTasks({})\r\n                fs = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n        return (fs)\r\n    }, [currentUser, pageData, userRanks, id, filterFormData])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            const newFilteredStages = cloneDeep(userCases)\r\n            //let newUnlimStages = {}\r\n            Object.keys(userCases).map(caseID => {\r\n                Object.keys(userCases[caseID]).map(stageId => {\r\n                    const stage = userCases[caseID][stageId]\r\n                    if (stage.ranks_write &&\r\n                        Object.keys(stage.ranks_write).length > 0 &&\r\n                        intersection(stage.ranks_write, userRanks).length > 0 &&\r\n                        \"creatable\" in stage &&\r\n                        stage.creatable) {\r\n                        if (stage.rank_limit_number && Object.keys(stage.rank_limit_number).length > 0) {\r\n                            const setIntersection = intersection(Object.keys(stage.rank_limit_number), userRanks)\r\n                            if (setIntersection.length > 0) {\r\n                                const maxTasksPerStage = calculatemaxTasksPerStage(setIntersection, stage.rank_limit_number)\r\n                                const tasksPerStage = countTasksPerStage(stageId, userTasks, caseID)\r\n                                // console.log(\"caseID: \", caseID)\r\n                                // console.log(\"stageId: \", stageId)\r\n                                // console.log(\"maxTasksPerStage: \", maxTasksPerStage)\r\n                                // console.log(\"tasksPerStage: \", tasksPerStage)\r\n                                // if (tasksPerStage >= maxTasksPerStage) {\r\n                                //     console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                //     delete newFilteredStages[caseID][stageId]\r\n                                //     console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                // }\r\n                                if (tasksPerStage >= maxTasksPerStage) {\r\n                                    // console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                    delete newFilteredStages[caseID][stageId]\r\n                                    // console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                }\r\n                                // console.log(\"userCases: \", userCases)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        delete newFilteredStages[caseID][stageId]\r\n                    }\r\n                })\r\n            })\r\n            setFilteredStages(newFilteredStages)\r\n            //setUnlimStages(newUnlimStages)\r\n        }\r\n    }, [currentUser, userCases, userTasks, id])\r\n\r\n\r\n    const countTasksPerStage = (stage, tasks, caseId) => {\r\n        let occurrences = 0\r\n        Object.values(tasks).map(task => {\r\n            if (task.case_stage_id === stage && caseId === task.case_type) {\r\n                occurrences++\r\n            }\r\n        })\r\n        return occurrences\r\n    }\r\n\r\n    const calculatemaxTasksPerStage = (rArray, limits) => {\r\n        let largestLimit = 0\r\n        rArray.map(v => {\r\n            if (limits[v] > largestLimit) {\r\n                largestLimit = limits[v]\r\n            }\r\n        })\r\n        return largestLimit\r\n    }\r\n\r\n    const intersection = (arrA, arrB) => {\r\n        const setA = new Set(arrA)\r\n        const setB = new Set(arrB)\r\n        let _intersection = new Set()\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem)\r\n            }\r\n        }\r\n        return [..._intersection]\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userRanks.length > 0) {\r\n            firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"ranks\")\r\n                .where(firebase.firestore.FieldPath.documentId(), \"in\", userRanks)\r\n                .onSnapshot(snapshot => {\r\n                    snapshot.docChanges().forEach(change => {\r\n                        if (change.type === \"added\" || change.type === \"modified\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                return { ...prevState, [change.doc.id]: change.doc.data() }\r\n                            })\r\n                        }\r\n                        if (change.type === \"removed\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                const newState = Object.assign({}, prevState)\r\n                                delete newState[change.doc.id]\r\n                                return newState\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }, [userRanks])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            createCaseSelectorForm()\r\n        }\r\n        else {\r\n            setCaseSelector({})\r\n        }\r\n    }, [userCases])\r\n\r\n    const displayTasks = (tasks, stages, cases, cardType, complete) => {\r\n        const displayedTasks = Object.keys(tasks).map(taskId => {\r\n            const caseType = tasks[taskId].case_type\r\n            const stageId = tasks[taskId].case_stage_id\r\n\r\n            let stage = false\r\n\r\n            if (stages) {\r\n                if (stages[stageId]) {\r\n                    stage = stages[stageId]\r\n                }\r\n            } else if (cases && cases[caseType] && cases[caseType][stageId]) {\r\n                stage = cases[caseType][stageId]\r\n            }\r\n\r\n            if (stage && tasks[taskId].is_complete === complete) {\r\n                // console.log(\"TASKS: \", tasks[taskId])\r\n                // console.log(\"userStages: \", userCases)\r\n                return <Grid key={taskId} style={{ padding: 10 }}>\r\n                    <TaskCard\r\n                        stage={stage}\r\n                        stageID={stageId}\r\n                        cardType={cardType}\r\n                        task={tasks[taskId]}\r\n                        user={currentUser}\r\n                        pCase={caseType}\r\n                        id={taskId} />\r\n                </Grid>\r\n            }\r\n        })\r\n        return displayedTasks\r\n    }\r\n\r\n    const showFilters = (stages, bgStages, formData, handleFormChange) => {\r\n        if (Object.keys(stages).length === 1 &&\r\n            stages[Object.keys(stages)[0]] &&\r\n            stages[Object.keys(stages)[0]].filters &&\r\n            Object.keys(stages[Object.keys(stages)[0]].filters).length > 0 &&\r\n            Object.keys(bgStages).length > 0\r\n        ) {\r\n            const stageID = Object.keys(stages)[0]\r\n            const stage = stages[stageID]\r\n            const filters = stage.filters\r\n            filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n            filters.emergency_form_filling['violationTime'] = '=='\r\n            const formQuestions = { properties: {} }\r\n            let formUI = {}\r\n            Object.keys(filters).forEach(stageFilter => {\r\n                Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                    let endProps = bgStages[stageFilter].end.properties[filterQuestion]\r\n                    if (endProps) {\r\n                        delete endProps.dependencies\r\n                        formQuestions.properties[filterQuestion] = endProps\r\n                        // console.log(\"bgStages: \", bgStages)\r\n                        formUI[filterQuestion] = { \"ui:widget\": \"select\" }\r\n                    }\r\n                })\r\n            })\r\n            return (\r\n                <JSchemaForm\r\n                    schema={formQuestions}\r\n                    uiSchema={formUI}\r\n                    formData={formData}\r\n                    onChange={e => {\r\n                        handleFormChange(e)\r\n                    }}\r\n                > </JSchemaForm>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const handleFilterFormChange = (e) => {\r\n        setFilterFormData(e.formData)\r\n        // console.log(\"FilterFormChange: \", e.formData)\r\n    }\r\n\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n\r\n    const createCaseSelectorForm = () => {\r\n        let schema = {\r\n            type: \"object\",\r\n            properties: {\r\n                request: {\r\n                    title: \"Получить задание\",\r\n                    $ref: \"#/definitions/cases\"\r\n                }\r\n            },\r\n            definitions: {\r\n                cases: {\r\n                    type: \"object\",\r\n                    properties: {\r\n                        case: {\r\n                            type: \"string\",\r\n                            enum: [\"none\", ...Object.keys(userCases)],\r\n                            default: \"none\"\r\n                        }\r\n                    },\r\n                    required: ['case'],\r\n                    dependencies: {\r\n                        case: {\r\n                            oneOf: [\r\n                                {\r\n                                    properties: {\r\n                                        case: {\r\n                                            enum: [\r\n                                                \"none\"\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Object.keys(userCases).forEach((k, i) => {\r\n            let c = userCases[k]\r\n            if (pageData.cases.includes(k)) {\r\n                schema.definitions.cases.dependencies.case.oneOf.push(\r\n                    {\r\n                        properties: {\r\n                            case: {\r\n                                enum: [\r\n                                    k\r\n                                ]\r\n                            },\r\n                            task: {\r\n                                type: \"string\",\r\n                                enum: ['none', ...Object.keys(c)],\r\n                                default: 'none'\r\n                            }\r\n                        },\r\n                        required: [\r\n                            'task'\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        })\r\n\r\n        // console.log('schema', schema)\r\n        // console.log('schema', JSON.stringify(schema))\r\n        setCaseSelector(schema)\r\n    }\r\n\r\n    const handleFormChange = e => {\r\n        setCaseSelectorResponse(e.formData)\r\n    };\r\n\r\n    const requestTask = () => {\r\n\r\n        if (caseSelectorResponse.request.case !== 'none' && caseSelectorResponse.request.task !== 'none') {\r\n            firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n                status: \"pending\",\r\n                user: currentUser.uid,\r\n                case_type: caseSelectorResponse.request.case,\r\n                case_stage_id: caseSelectorResponse.request.task\r\n            })\r\n        }\r\n        else {\r\n            alert('Выберите case и task!')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const checkRank = async () => {\r\n            let assignableRanks = []\r\n            await firebase.firestore().collection('schema').doc('structure').collection('ranks').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    if (pageData.ranks.includes(doc.id) && doc.data().assign_without_moderator) {\r\n                        // console.log(\"RANK_ID\", doc.id)\r\n                        assignableRanks.push(doc.id)\r\n                    }\r\n                })\r\n            })\r\n            return assignableRanks\r\n        }\r\n\r\n        const notInUserRanks = (ranks) => {\r\n            return ranks.filter(rank => userRanks && !userRanks.includes(rank))\r\n        }\r\n\r\n        if (pageData && pageData.ranks) {\r\n            let assignableRanks = checkRank()\r\n            assignableRanks.then(ranks => setAvailableRanks(notInUserRanks(ranks)))\r\n        }\r\n\r\n    }, [pageData, userRanks])\r\n\r\n    const requestRank = (rank) => {\r\n        // console.log(\"Отправляем запрос\")\r\n        firebase.firestore().collection('rank_requests').add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user_id: currentUser.uid,\r\n            processed: false,\r\n            rank: rank\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        {/* {console.log(\"pageData: \", pageData)}\r\n        {console.log(\"userRanks: \", userRanks)}\r\n        {console.log(\"userCases: \", userCases)}\r\n        {console.log(\"userTasks: \", userTasks)}\r\n        {console.log(\"filteredStages: \", filteredStages)}\r\n        {console.log(\"availableStages: \", availableStages)}\r\n        {console.log(\"availableTasks: \", availableTasks)}\r\n        {console.log(\"caseData\", caseData)}\r\n        {console.log(\"availableRanks: \", availableRanks)} */}\r\n\r\n        <Home />\r\n\r\n        {availableRanks.length > 0 && <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\" style={{ paddingBottom: 20 }}>\r\n            <Typography variant=\"h5\">{pageData.message}</Typography>\r\n            {availableRanks.map((rank, i) => <Button key={i} variant=\"contained\" color=\"primary\" onClick={() => requestRank(rank)} style={{ margin: 15 }}>Получить ранг {rank}</Button>)}\r\n        </Grid>}\r\n\r\n        {pageData.showTaskSelector && <Grid style={{ paddingBottom: 30 }}>\r\n            <JSchemaForm\r\n                schema={caseSelector}\r\n                // uiSchema={formUI}\r\n                formData={caseSelectorResponse}\r\n                onChange={e => {\r\n                    handleFormChange(e)\r\n                }}\r\n                onSubmit={requestTask}\r\n            >\r\n                <button type=\"submit\" className='btn btn-info'>Получить</button>\r\n            </JSchemaForm>\r\n        </Grid>}\r\n\r\n        {/* <Grid>\r\n            {Object.keys(userCases).map((k, i) => {\r\n                let c = caseData[k]\r\n                console.log(c)\r\n                if (pageData.cases.includes(k) && c) {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={k} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </Grid> */}\r\n\r\n        {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n        {Object.keys(userRanksDescriptions).length > 0 ? userRanks.map(rank => {\r\n            if (userRanksDescriptions[rank] && userRanksDescriptions[rank].description) {\r\n                return (\r\n                    <Typography variant=\"h5\" key={rank}>{userRanksDescriptions[rank].description}</Typography>\r\n                )\r\n            }\r\n        })\r\n            : null}\r\n        <div className={classes.root}>\r\n            {/*{Object.keys(unlimStages).map(pCase => (*/}\r\n            {/*    Object.keys(unlimStages[pCase]).map(stage => (*/}\r\n            {/*        <Grid key={pCase + stage} style={{padding: 10}}>*/}\r\n            {/*            <TaskCard complete={false}*/}\r\n            {/*                      stage={unlimStages[pCase][stage]}*/}\r\n            {/*                      stageID={stage}*/}\r\n            {/*                      user={currentUser}*/}\r\n            {/*                      pCase={pCase}*/}\r\n            {/*                      cardType = \"creatableUnlim\"/>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    ))*/}\r\n            {/*))}*/}\r\n            <Paper position=\"static\" color=\"default\">\r\n\r\n                <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\" centered\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                    {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n                        <Tab label=\"Доступные\" {...a11yProps(2)} />\r\n                        :\r\n                        null}\r\n\r\n                    {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n            {Object.keys(filteredStages).map(pCase => (\r\n                Object.keys(filteredStages[pCase]).map(stage => (\r\n                    <Grid key={pCase + stage} style={{ padding: 10 }}>\r\n                        <TaskCard complete={false}\r\n                            stage={filteredStages[pCase][stage]}\r\n                            stageID={stage}\r\n                            user={currentUser}\r\n                            pCase={pCase}\r\n                            cardType=\"creatable\" />\r\n                    </Grid>\r\n                ))\r\n            ))}\r\n            {displayTasks(userTasks, false, allCases, \"selected\", false)}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n            {displayTasks(userTasks, false, allCases, \"selected\", true)}\r\n        </TabPanel>\r\n\r\n        {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n            <TabPanel value={tabValue} index={2}>\r\n                {/* {console.log(\"availableTasks: \", availableTasks)} */}\r\n                {showFilters(availableStages, bgStages, filterFormData, handleFilterFormChange)}\r\n                {displayTasks(availableTasks, availableStages, false, \"selectable\", false)}\r\n            </TabPanel>\r\n            :\r\n            null}\r\n        {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n    </Grid>)\r\n}\r\n\r\nexport default Page","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\n\r\n\r\nconst CustomUIKField = (props) => {\r\n\r\n    const { formContext } = props\r\n    const [JSchema, setJSchema] = useState({})\r\n    const [ready, setReady] = useState(false)\r\n    const [UIKS, setUIKS] = useState({})\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const uiksRef = firebase.firestore().collection('UIKS1')\r\n\r\n    const taskRef = firebase\r\n        .firestore()\r\n        .collection(\"tasks\")\r\n        .doc(props.taskID)\r\n        .collection(\"responses\")\r\n        .doc(props.name)\r\n\r\n    const uikDataRef = firebase\r\n        .firestore()\r\n        .collection(\"tasks\")\r\n        .doc(props.taskID)\r\n        .collection(\"responses\")\r\n        .doc(\"uikData\")\r\n\r\n    useEffect(() => {\r\n        if (formContext && formContext.conditional && formContext.role) {\r\n            let uikRef = firebase.firestore().collection('UIKS1')\r\n            let unsubscribe = {}\r\n            let locality = formContext.conditional\r\n            console.log(\"DEBUG PROPS\", props)\r\n            if (props.prevResp.conditional && !props.metadata.is_complete) {\r\n                if (props.prevResp.conditional.region !== locality.region\r\n                    || props.prevResp.conditional.subregion !== locality.subregion\r\n                    || props.prevResp.conditional.locality !== locality.locality\r\n                    || props.prevResp.conditional.district !== locality.district) {\r\n                        if (formContext.role === 'Стационарный наблюдатель / стационардук байкоочу') {\r\n                            taskRef.set({ contents: \"\" })\r\n                        }\r\n                        else {\r\n                            taskRef.set({ contents: \"mobile\" })\r\n                        }\r\n                    uikDataRef.set({})\r\n                    uiksRef.where('observers', 'array-contains', currentUser.uid).get().then(async snap => {\r\n                        snap.forEach(async doc => {\r\n                            await doc.ref.update({ observers: firebase.firestore.FieldValue.arrayRemove(currentUser.uid) })\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n            if (formContext.role === 'Стационарный наблюдатель / стационардук байкоочу') {\r\n                setReady(true)\r\n                if (formContext.uik === \"mobile\" && !props.metadata.is_complete) {\r\n                    taskRef.set({ contents: \"\" })\r\n                    uikDataRef.set({})\r\n                    uiksRef.where('observers', 'array-contains', currentUser.uid).get().then(async snap => {\r\n                        snap.forEach(async doc => {\r\n                            await doc.ref.update({ observers: firebase.firestore.FieldValue.arrayRemove(currentUser.uid) })\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n            else {\r\n                if (formContext.uik !== \"mobile\" && !props.metadata.is_complete) {\r\n                    setReady(false)\r\n                    taskRef.set({ contents: \"mobile\" })\r\n                    uikDataRef.set({})\r\n                    uiksRef.where('observers', 'array-contains', currentUser.uid).get().then(async snap => {\r\n                        snap.forEach(async doc => {\r\n                            await doc.ref.update({ observers: firebase.firestore.FieldValue.arrayRemove(currentUser.uid) })\r\n                        })\r\n                    })\r\n                }\r\n            }\r\n\r\n            if (locality.region) {\r\n                uikRef = uikRef.where('region', '==', locality.region)\r\n            }\r\n            if (locality.subregion) {\r\n                uikRef = uikRef.where('subregion', '==', locality.subregion)\r\n            }\r\n            if (locality.locality) {\r\n                uikRef = uikRef.where('locality', '==', locality.locality)\r\n            }\r\n            if (locality.district) {\r\n                uikRef = uikRef.where('district', '==', locality.district)\r\n            }\r\n            unsubscribe = uikRef.onSnapshot(snap => {\r\n                let allUiks = {}\r\n                snap.forEach(doc => {\r\n                    allUiks[doc.id] = doc.data()\r\n                })\r\n                setUIKS(allUiks)\r\n                createUIKSelectorForm(allUiks)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [formContext])\r\n\r\n    const getAvailableUIKS = (allUiks) => {\r\n        let disabled = []\r\n        let available = Object.keys(allUiks)\r\n        let customLabels = []\r\n        Object.keys(allUiks).forEach(uik => {\r\n            if (allUiks[uik].address) {\r\n                customLabels.push(uik + \" \" + allUiks[uik].address)\r\n            }\r\n            else {\r\n                customLabels.push(uik)\r\n            }\r\n            if (allUiks[uik].observers.length >= 2) {\r\n                disabled.push(uik)\r\n            }\r\n        })\r\n        console.log(\"DISABLED\", disabled)\r\n        return ({ available: available, customLabels: customLabels, disabled: disabled })\r\n    }\r\n\r\n    const uikChangeHandler = async (e) => {\r\n        console.log(\"DEBUG FORMDATA\", e.formData)\r\n        if (e.formData === \"\" || e.formData === undefined || e.formData === null) {\r\n            if (!props.metadata.is_complete) {\r\n                taskRef.set({ contents: \"\" })\r\n                uikDataRef.set({})\r\n                await uiksRef.where('observers', 'array-contains', currentUser.uid).get().then(async snap => {\r\n                    snap.forEach(async doc => {\r\n                        await doc.ref.update({ observers: firebase.firestore.FieldValue.arrayRemove(currentUser.uid) })\r\n                    })\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            if (!props.metadata.is_complete) {\r\n                taskRef.set({ contents: e.formData })\r\n                uikDataRef.set({ ...UIKS[e.formData], uikNumber: e.formData })\r\n                await uiksRef.where('observers', 'array-contains', currentUser.uid).get().then(async snap => {\r\n                    snap.forEach(async doc => {\r\n                        await doc.ref.update({ observers: firebase.firestore.FieldValue.arrayRemove(currentUser.uid) })\r\n                    })\r\n                })\r\n                uiksRef.doc(e.formData).update({ observers: firebase.firestore.FieldValue.arrayUnion(currentUser.uid) })\r\n            }\r\n        }\r\n    }\r\n\r\n    const createUIKSelectorForm = (allUiks) => {\r\n        let schema = {\r\n            title: props.schema.title,\r\n            enum: [],\r\n            type: \"string\",\r\n            enumNames: []\r\n        }\r\n\r\n        let uiSchema = {\r\n            \"ui:enumDisabled\": []\r\n        }\r\n\r\n        let uikTypes = getAvailableUIKS(allUiks)\r\n        schema.enum = uikTypes.available\r\n        schema.enumNames = uikTypes.customLabels\r\n        uiSchema['ui:enumDisabled'] = uikTypes.disabled\r\n        console.log('schema', schema)\r\n\r\n        setJSchema({ schema: schema, uiSchema: uiSchema })\r\n    }\r\n\r\n\r\n    return (\r\n        ready && <JSchemaForm\r\n            schema={JSchema.schema ? JSchema.schema : {}}\r\n            uiSchema={JSchema.uiSchema ? JSchema.uiSchema : {}}\r\n            formData={props.formData}\r\n            disabled={props.metadata.is_complete}\r\n            noHtml5Validate\r\n            onChange={e => uikChangeHandler(e)} > </JSchemaForm>\r\n    )\r\n}\r\n\r\nexport default CustomUIKField","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\n//import Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DefaultDialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\nimport { complexStateFirebaseUpdate, simpleStateFirebaseUpdate } from \"../../util/Utilities\"\r\n\r\nimport Loader from \"../form/Loader\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport CustomUIKField from \"../form/CustomUIKField\"\r\nimport { Button, DialogContentText, DialogTitle, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport JSchemaForm from \"@rjsf/fluent-ui\";\r\nimport { cloneDeep, isEqual } from 'lodash'\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// import 'semantic-ui-css/semantic.min.css'\r\nvar breaks = require('remark-breaks')\r\n\r\nconst JSchemaTask = () => {\r\n\tconst [formResponses, setFormResponses] = useState({})\r\n\tconst [taskForm, setTaskForm] = useState({})\r\n\tconst [mergedForm, setMergedForm] = useState({})\r\n\tconst [taskMetadata, setTaskMetadata] = useState({})\r\n\tconst [caseStages, setCaseStages] = useState({})\r\n\tconst [backgroundTasks, setBackgroundTasks] = useState({})\r\n\tconst [backgroundTaskForms, setBackgroundTaskForms] = useState({})\r\n\tconst [mergedBackgroundForms, setMergedBackgroundForms] = useState({})\r\n\tconst [backgroundResponses, setBackgroundResponses] = useState({})\r\n\tconst [currentFocus, setCurrentFocus] = useState(\"\")\r\n\tconst [gRef, setGRef] = useState(null)\r\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\r\n\tconst [lastUpdated, setLastUpdated] = useState(new Date())\r\n\r\n\tconst [prevFormResponses, setPrevResponses] = useState({})\r\n\tconst [initialResponses, setInitialResponses] = useState({})\r\n\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\tconst [enableButton, setEnableButton] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser && id) {\r\n\r\n\t\t\tconst ref = firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.doc(id)\r\n\r\n\t\t\tsetGRef(ref)\r\n\r\n\t\t\tref.onSnapshot(doc => {\r\n\t\t\t\tsetTaskMetadata(doc.data())\r\n\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\tsetFormStatus(\"sent\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!doc.data().assigned_users.includes(currentUser.uid)) {\r\n\t\t\t\t\tsetFormStatus(\"released\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\r\n\t\t\t});\r\n\r\n\t\t\tref.collection(\"responses\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tconst changes = {}\r\n\t\t\t\t\tconst deletes = []\r\n\t\t\t\t\tlet modifyResponses = false\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\r\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\r\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\r\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (modifyResponses) {\r\n\t\t\t\t\t\tconsole.log(\"DEBUG FIRED MODIFIED\")\r\n\t\t\t\t\t\tsetFormResponses(prevState => {\r\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\r\n\t\t\t\t\t\t\tsetPrevResponses(newState)\r\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\r\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\r\n\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tref.collection(\"questions\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}, [id, currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst unsubscribe = firebase.firestore().collection('tasks').doc(id).collection('responses').onSnapshot(snap => {\r\n\t\t\tlet initState = {}\r\n\t\t\tsnap.forEach(doc => {\r\n\t\t\t\tinitState[doc.id] = doc.data()\r\n\t\t\t})\r\n\t\t\tsetInitialResponses(initState)\r\n\t\t})\r\n\t\treturn () => unsubscribe()\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(taskMetadata).length > 0 && taskMetadata.case_type) {\r\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection(\"schema\")\r\n\t\t\t\t.doc(\"structure\")\r\n\t\t\t\t.collection(\"cases\")\r\n\t\t\t\t.doc(taskMetadata.case_type)\r\n\t\t\t\t.collection(\"stages\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t}, [taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst mergedBgForms = {}\r\n\t\tconsole.log(\"Bg tasks: \", backgroundTasks)\r\n\t\tObject.keys(backgroundTasks).map(taskId => {\r\n\t\t\tif (taskId !== id) {\r\n\t\t\t\tconst stage = backgroundTasks[taskId].case_stage_id\r\n\t\t\t\tif (!mergedBgForms[stage]) {\r\n\t\t\t\t\tmergedBgForms[stage] = {}\r\n\t\t\t\t}\r\n\t\t\t\tmergedBgForms[stage][taskId] = mergeForm(backgroundTaskForms[taskId],\r\n\t\t\t\t\tcaseStages[stage])\r\n\t\t\t}\r\n\r\n\t\t})\r\n\t\tconsole.log(\"Merged bg forms: \", mergedBgForms)\r\n\t\tsetMergedBackgroundForms(mergedBgForms)\r\n\t}, [backgroundTasks, backgroundTaskForms, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.keys(mergedForm).length > 0 && formStatus === \"loading\") {\r\n\t\t\tsetFormStatus(\"ready\")\r\n\t\t}\r\n\t\tif (mergedForm && mergedForm.form_questions && mergedForm.form_questions.required && formResponses) {\r\n\t\t\tlet requirementsSatisfied = mergedForm.form_questions.required.every(checker)\r\n\t\t\tsetEnableButton(requirementsSatisfied)\r\n\t\t}\r\n\r\n\t}, [formResponses, mergedForm])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\r\n\t}, [taskForm, taskMetadata, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (Object.keys(caseStages).length > 0 && Object.keys(taskMetadata).length > 0 && caseStages[taskMetadata.case_stage_id]) {\r\n\t\t\tconsole.log(\"caseStages: \", caseStages)\r\n\t\t\tconsole.log(\"taskMetadata: \", taskMetadata)\r\n\t\t\tconst backgroundTasksList = caseStages[taskMetadata.case_stage_id].backgroundStages\r\n\t\t\tif (backgroundTasksList && backgroundTasksList.length > 0) {\r\n\t\t\t\tconsole.log(\"backgroundTasksList: \", backgroundTasksList.length)\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"case_id\", \"==\", taskMetadata.case_id)\r\n\t\t\t\t\t.where(\"case_stage_id\", \"in\", backgroundTasksList)\r\n\t\t\t\t\t.orderBy(\"created_date\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Background task: \", change.doc.data())\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [caseStages, taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(backgroundTasks).length > 0) {\r\n\t\t\tObject.keys(backgroundTasks).map(key => {\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"questions\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tcomplexStateFirebaseUpdate(snapshot, setBackgroundTaskForms, key)\r\n\t\t\t\t\t})\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"responses\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tif (!newState[key]) {\r\n\t\t\t\t\t\t\t\t\t\tnewState[key] = {}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data().contents\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[key][change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, [backgroundTasks])\r\n\r\n\t// useEffect( () => {\r\n\t// \tsetMergedQuestions(mergeQuestions([caseStages[taskMetadata.case_stage_id]]))\r\n\t// }, [caseStages, taskQuestions])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst timer = setTimeout(() => {\r\n\t// \t\tif (formResponsesChanged) {\r\n\t// \t\t\tfirebase\r\n\t// \t\t\t\t.firestore()\r\n\t// \t\t\t\t.collection(\"tasks\")\r\n\t// \t\t\t\t.doc(id)\r\n\t// \t\t\t\t.collection(\"responses\")\r\n\t// \t\t\t\t.doc(\"form_responses\")\r\n\t// \t\t\t\t.set(formResponses)\r\n\t// \t\t\t\t.then(docRef => {\r\n\t// \t\t\t\t\tsetFormResponsesChanged(false);\r\n\t// \t\t\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n\t// \t\t\t\t})\r\n\t// \t\t\t\t.catch(error => console.error(\"Error setting document: \", error));\r\n\t// \t\t}\r\n\t// \t}, AUTOSAVE_INTERVAL);\r\n\t// \treturn () => clearTimeout(timer);\r\n\t// }, [formResponsesChanged, formResponses]);\r\n\r\n\r\n\tconst handleFormChange = e => {\r\n\t\tsetFormResponses(e.formData)\r\n\t\t// Object.keys(e.formData).forEach(k => {\r\n\t\t// \tif (mergedForm.ui_schema.hasOwnProperty(k) && mergedForm.ui_schema[k].hasOwnProperty(\"ui:widget\") && mergedForm.ui_schema[k][\"ui:widget\"] === \"radio\") {\r\n\t\t// \t\tconsole.log(\"DEBUG radio\", mergedForm.ui_schema[k])\r\n\t\t// \t\tgRef.collection(\"responses\")\r\n\t\t// \t\t\t.doc(k)\r\n\t\t// \t\t\t.set({ contents: e.formData[k] ? e.formData[k] : \"\" })\r\n\t\t// \t}\r\n\t\t// \telse if (mergedForm.ui_schema.hasOwnProperty(k) && typeof mergedForm.ui_schema[k] === 'object' && mergedForm.ui_schema[k] !== null) {\r\n\t\t// \t\tObject.keys(mergedForm.ui_schema[k]).forEach(nestedKey => {\r\n\t\t// \t\t\tif (typeof mergedForm.ui_schema[k][nestedKey] === 'object'\r\n\t\t// \t\t\t\t&& mergedForm.ui_schema[k][nestedKey] !== null\r\n\t\t// \t\t\t\t&& mergedForm.ui_schema[k][nestedKey].hasOwnProperty(\"ui:widget\")\r\n\t\t// \t\t\t\t&& mergedForm.ui_schema[k][nestedKey][\"ui:widget\"] === \"radio\") {\r\n\t\t// \t\t\t\tconsole.log(\"DEBUG radio nested\", mergedForm.ui_schema[k][nestedKey])\r\n\t\t// \t\t\t\tgRef.collection(\"responses\")\r\n\t\t// \t\t\t\t\t.doc(k)\r\n\t\t// \t\t\t\t\t.set({ contents: e.formData[k] ? e.formData[k] : \"\" })\r\n\t\t// \t\t\t}\r\n\t\t// \t\t})\r\n\t\t// \t}\r\n\t\t// })\r\n\r\n\t\tlet timeDiff = (new Date().getTime() - lastUpdated.getTime()) / 1000;\r\n\t\tconsole.log(\"TIME DIFF\", timeDiff)\r\n\t\tif (timeDiff > 5) {\r\n\t\t\tsetLastUpdated(new Date())\r\n\t\t\tObject.keys(e.formData).forEach(k => {\r\n\t\t\t\tif (mergedForm.ui_schema.hasOwnProperty(k) && mergedForm.ui_schema[k].hasOwnProperty(\"ui:field\") && mergedForm.ui_schema[k][\"ui:field\"] === \"customFileUpload\") {\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t\t.set({ contents: e.formData[k] ? e.formData[k] : \"\" }).then(() => console.log(\"debug blur k: \", k, \" response:\", formResponses[k] ? formResponses[k] : \"\"))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\t// const handleBlur = e => {\r\n\t// \tif (gRef) {\r\n\t// \t\tconsole.log(\"Responses: \", formResponses)\r\n\t// \t\tconsole.log(\"That is what was blured\", e)\r\n\t// \t\tif (e === \"root\") {\r\n\t// \t\t\tconsole.log(\"e from first option when trigger is root\", e)\r\n\t// \t\t\tObject.keys(formResponses).map(k => {\r\n\t// \t\t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t\t.doc(k)\r\n\t// \t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t\t{merge: true})\r\n\t// \t\t\t})\r\n\t// \t\t} else {\r\n\t// \t\t\tconsole.log(\"e from second option when trigger is not root\", e)\r\n\t// \t\t\tconst docID = e.split(\"_\")[1]\r\n\t// \t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t.doc(docID)\r\n\t// \t\t\t\t.set({contents: formResponses[docID] ? formResponses[docID] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t{merge: true})\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst handleBlur = (e, v) => {\r\n\t\tconsole.log(\"onBlur e\", e)\r\n\t\tconsole.log(\"onBlur v\", v)\r\n\t\tif (gRef) {\r\n\t\t\tconsole.log(\"Responses: \", formResponses)\r\n\t\t\tconsole.log(\"That is what was blured\", e)\r\n\r\n\t\t\tObject.keys(formResponses).map(k => {\r\n\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t.set({ contents: formResponses[k] ? formResponses[k] : \"\" }).then(() => console.log(\"debug blur k: \", k, \" response:\", formResponses[k] ? formResponses[k] : \"\"))\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst mergeForm = (taskForm, caseForms) => {\r\n\t\tconst tForm = Object.assign({}, taskForm)\r\n\t\tconst cForms = Object.assign({}, caseForms)\r\n\r\n\t\tcForms.start = cForms.start ? cForms.start : {}\r\n\t\tcForms.end = cForms.end ? cForms.end : {}\r\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\r\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\r\n\r\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\r\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\r\n\r\n\r\n\t\tconst properties = {\r\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\r\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\r\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\r\n\t\t}\r\n\r\n\t\tconst definitions = {\r\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\r\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\r\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\r\n\t\t}\r\n\r\n\t\tlet title = \"\"\r\n\t\tif (tForm.form_questions.title) {\r\n\t\t\ttitle = tForm.form_questions.title\r\n\t\t} else if (cForms.end.title) {\r\n\t\t\ttitle = cForms.end.title\r\n\t\t} else if (cForms.start.title) {\r\n\t\t\ttitle = cForms.start.title\r\n\t\t}\r\n\r\n\t\tlet description = \"\"\r\n\t\tif (tForm.form_questions.description) {\r\n\t\t\tdescription = tForm.form_questions.description\r\n\t\t} else if (cForms.end.description) {\r\n\t\t\tdescription = cForms.end.description\r\n\t\t} else if (cForms.start.description) {\r\n\t\t\tdescription = cForms.start.description\r\n\t\t}\r\n\r\n\t\tconst required = [...new Set([\r\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\r\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\r\n\t\t\t...(cForms.end.required ? cForms.end.required : [])\r\n\t\t])]\r\n\r\n\t\tconst uiOrder = [...new Set([\r\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(tForm.ui_schema[\"ui:order\"] ? tForm.ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\r\n\t\t])]\r\n\r\n\t\tlet uiSchema = {\r\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\r\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\r\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\r\n\t\t}\r\n\r\n\t\tuiSchema = { ...uiSchema, ...{ \"ui:order\": uiOrder } }\r\n\r\n\t\tconst form = {\r\n\t\t\tproperties: properties,\r\n\t\t\tdefinitions: definitions,\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\trequired: required\r\n\t\t}\r\n\t\treturn { form_questions: form, ui_schema: uiSchema }\r\n\r\n\t}\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst getQuestions = async (taskID) => {\r\n\t// \t\tlet q = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn q\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getResponses = async (taskID) => {\r\n\t// \t\tlet r = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn r\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getSameCaseTasks = async () => {\r\n\t// \t\tlet sameCaseTasks = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t// \t\t\treturn doc.data()\r\n\t// \t\t}).then(async data => {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t// \t\t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\t\tif (doc.id !== id) {\r\n\t// \t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t\treturn sameCaseTasks\r\n\t// \t}\r\n\t//\r\n\t// \tconst getForms = async () => {\r\n\t// \t\tlet f = []\r\n\t// \t\tlet locked = true\r\n\t//\r\n\t// \t\tsetForms(null)\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t// \t\t\tif (doc.data().status === 'complete') {\r\n\t// \t\t\t\tlocked = true\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}\r\n\t// \t\t\telse {\r\n\t// \t\t\t\tlocked = false\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet sq = []\r\n\t// \t\tlet sr = []\r\n\t//\r\n\t// \t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t// \t\tsetCaseTasks(sameCaseTasks)\r\n\t// \t\tif (sameCaseTasks.length > 0) {\r\n\t// \t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getQuestions(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getResponses(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tconsole.log(ques)\r\n\t// \t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t// \t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\t//\r\n\t// \t\t\tconsole.log(sq)\r\n\t// \t\t\tconsole.log(sr)\r\n\t// \t\t}\r\n\t//\r\n\t// \t\tlet sf = sq.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tsr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\t//\r\n\t//\r\n\t// \t\tlet q = await getQuestions(id)\r\n\t// \t\tlet r = await getResponses(id)\r\n\t//\r\n\t//\r\n\t// \t\tsetQuestions(q)\r\n\t// \t\tsetResponses(r)\r\n\t//\r\n\t//\r\n\t// \t\t// let newQ = sq.concat(q)\r\n\t// \t\t// let newR = sr.concat(r)\r\n\t//\r\n\t// \t\tf = q.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn (\r\n\t// \t\t\t\t<Form\r\n\t// \t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t// \t\t\t\t\tquestion={el.data}\r\n\t// \t\t\t\t\tindex={i}\r\n\t// \t\t\t\t\tresponse={response}\r\n\t// \t\t\t\t\treturnFile={returnFile}\r\n\t// \t\t\t\t\treturnAnswer={returnAnswer}\r\n\t// \t\t\t\t\tid={el.questionId}\r\n\t// \t\t\t\t\tlocked={locked}\r\n\t// \t\t\t\t\t// ref={uploadsRef}\r\n\t// \t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t// \t\t\t)\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet newF = sf.concat(f)\r\n\t// \t\tsetForms(newF)\r\n\t// \t}\r\n\t// \tif (currentUser) {\r\n\t// \t\tgetForms()\r\n\t// \t}\r\n\t// }, [currentUser, id, lockButton])\r\n\t//\r\n\t//\r\n\t// const returnAnswer = (answer, index) => {\r\n\t// \tconst tmp = answers\r\n\t// \ttmp[index] = answer\r\n\t// \tsetAnswers(tmp)\r\n\t// }\r\n\t//\r\n\t// const returnFile = (file, questionId) => {\r\n\t// \tlet arr = [...file]\r\n\t// \tlet tmp = files\r\n\t// \ttmp[questionId] = arr\r\n\t// \tsetFiles(tmp)\r\n\t// \tconsole.log([...file], questionId)\r\n\t// }\r\n\t//\r\n\t// const upload = async () => {\r\n\t// \t// uploadsRef.current.startUpload()\r\n\t// \tif (Object.keys(files).length > 0) {\r\n\t// \t\tconsole.log('files')\r\n\t// \t\tsetUploading(true)\r\n\t// \t\tfor (const [key, value] of Object.entries(files)) {\r\n\t// \t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t// \t\t\tawait Promise.all(value.map(async v => {\r\n\t// \t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t// \t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t// \t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t// \t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t// \t\t\t}));\r\n\t// \t\t}\r\n\t// \t\tsetUploaded(true)\r\n\t// \t\tsetUploading(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t// \tif (previousTaskId) {\r\n\t// \t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t// \t\t\t.add({\r\n\t// \t\t\t\tanswer: data.reason,\r\n\t// \t\t\t\ttext: data.text,\r\n\t// \t\t\t\tuser_id: currentUser.uid,\r\n\t// \t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t// \t\t\t})\r\n\t// \t\t\t.then(() => setOpenSnackbar(true))\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveToFirebase = async (lock) => {\r\n\t// \tawait upload()\r\n\t// \tquestions.forEach(async (q, i) => {\r\n\t// \t\tif (answers[i] || answers[i] === \"\") {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t// \t\t}\r\n\t// \t})\r\n\t//\r\n\t// \tif (lock) {\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t// \t\tsetLock(true)\r\n\t// \t\tconsole.log(\"Task Locked\")\r\n\t// \t\tsetDialog(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const uploadFilesData = async (filename, url, questionId) => {\r\n\t// \tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t// \tconsole.log(\"Файл отправлен\")\r\n\t// \tif (filename && url) {\r\n\t// \t\trootRef.set(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t// \t\t\t}, { merge: true }\r\n\t// \t\t).then(() => console.log('super'))\r\n\t// \t}\r\n\t// };\r\n\t//\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\t//setFeedback({})\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetDialog(false)\r\n\t\thistory.goBack()\r\n\t};\r\n\r\n\tconst checker = (q) => {\r\n\t\tif (typeof formResponses[q] === 'object' && formResponses[q] !== null && Object.values(formResponses[q]).length > 0) {\r\n\t\t\t// console.log(q, \"object not empty\")\r\n\t\t\treturn true\r\n\t\t}\r\n\t\telse if (typeof formResponses[q] !== 'object' && formResponses[q] !== null && formResponses[q] !== \"\" && formResponses[q] !== {} && formResponses[q] !== undefined) {\r\n\t\t\t// console.log(q, \"primitive not empty\")\r\n\t\t\treturn true\r\n\t\t}\r\n\t\telse if (mergedForm.ui_schema.hasOwnProperty(q) && mergedForm.ui_schema[q].hasOwnProperty(\"ui:field\") && mergedForm.ui_schema[q][\"ui:field\"] === \"customFileUpload\") {\r\n\t\t\tif (initialResponses[q] && initialResponses[q].contents && Object.keys(initialResponses[q].contents).length > 0) {\r\n\t\t\t\tconsole.log(q, \"file not empty\", initialResponses[q])\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn false\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// console.log(q, \"empty\")\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleSubmit = () => {\r\n\t\tObject.keys(formResponses).forEach(k => {\r\n\t\t\tif (mergedForm.ui_schema.hasOwnProperty(k) && mergedForm.ui_schema[k].hasOwnProperty(\"ui:field\") && mergedForm.ui_schema[k][\"ui:field\"] === \"customFileUpload\") {\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t.set({ contents: formResponses[k] ? formResponses[k] : \"\" })\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tconsole.log(\"Dialog open\")\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t\thandleSubmit()\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t// \t\tlet feedback = <Grid>\r\n\t// \t\t\t{/* <Typography>{doc.data().description}</Typography>\r\n\t// \t\t\t<Feedback answers={doc.data().answers} returnAnswer={handleFeedbackSave}/> */}\r\n\t// \t\t\t<JSchemaForm\r\n\t// \t\t\t\tschema={schm}\r\n\t// \t\t\t\tuiSchema={ui}\r\n\t// \t\t\t\tformData={testData}\r\n\t// \t\t\t> </JSchemaForm>\r\n\r\n\t// \t\t</Grid>\r\n\t// \t\tsetReleaseFeedbackData(feedback)\r\n\t// \t})\r\n\t// }, [])\r\n\t//\r\n\t// const releaseTask = () => {\r\n\t// \tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t// \t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t// \t\t\t.then(() => {\r\n\t// \t\t\t\tsetDialog(false)\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}))\r\n\t// \t// alert(feedbackValue)\r\n\t// }\r\n\t//\r\n\tconst handleFeedbackSave = (event) => {\r\n\t\tsetFeedback(event.formData)\r\n\t\tconsole.log('event', event.formData)\r\n\t}\r\n\r\n\tconst changeTaskStatus = (status) => {\r\n\t\tlet root = firebase.firestore()\r\n\t\t\t.collection(\"tasks\")\r\n\t\t\t.doc(id)\r\n\t\t\t.collection(\"user_editable\")\r\n\t\t\t.doc(\"user_editable\")\r\n\r\n\t\tconsole.log('debug status', status)\r\n\t\troot.set({ status: status })\r\n\t\tif (status === 'released') {\r\n\t\t\tif (feedbackValue.reasons) {\r\n\t\t\t\tif (feedbackValue.extra) {\r\n\t\t\t\t\troot.update({ status: status, release_status: feedbackValue.reasons, release_description: feedbackValue.extra })\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troot.update({ status: status, release_status: feedbackValue.reasons, release_description: \"\" })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst customImageWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<img src={props.value} alt={props.schema.title}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t}}></img>\r\n\t\t);\r\n\t};\r\n\r\n\tconst customVideoWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<video title={props.schema.title}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tmaxWidth: \"100%\",\r\n\t\t\t\t\theight: \"auto\"\r\n\t\t\t\t}}\r\n\t\t\t\tcontrols\r\n\t\t\t>\r\n\t\t\t\t<source src={props.value} type=\"video/mp4\"></source>\r\n\t\t\t</video>\r\n\t\t)\r\n\t}\r\n\r\n\tconst customIframeWidget = (props) => {\r\n\t\tconsole.log(\"PROPS\", props)\r\n\t\treturn (\r\n\t\t\t<iframe\r\n\t\t\t\ttitle={props.schema.title}\r\n\t\t\t\tsrc={props.value}\r\n\t\t\t\tframeBorder=\"0\"\r\n\t\t\t\tallow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n\t\t\t\tallowFullScreen></iframe>\r\n\t\t)\r\n\t}\r\n\r\n\tconst widgets = {\r\n\t\tcustomImageWidget: customImageWidget,\r\n\t\tcustomVideoWidget: customVideoWidget,\r\n\t\tcustomIframeWidget: customIframeWidget\r\n\t};\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid container style={{ wordBreak: 'break-word' }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"sent\"}\r\n\t\t\t\t\t// title={formStatus === \"sent\" ? caseStages[taskMetadata.case_stage_id].releaseTitle ? <ReactMarkdown allowDangerousHtml plugins={[breaks]} children={caseStages[taskMetadata.case_stage_id].releaseTitle} /> : \"Форма успешно отправлена.\" : \"Отправить форму?\"}\r\n\t\t\t\t\t// content={formStatus === \"sent\" ? caseStages[taskMetadata.case_stage_id].releaseMessage ? <ReactMarkdown allowDangerousHtml plugins={[breaks]} children={caseStages[taskMetadata.case_stage_id].releaseMessage} /> : \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\ttitle={formStatus === \"sent\" ? \"Форма успешно отправлена.\" : \"Отправить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"sent\" ? \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => { changeTaskStatus('complete') }} />}\r\n\r\n\t\t\t\t{/* {dialogType === 'release' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"released\"}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tcontent={formStatus === \"released\" ? \"Спасибо\" : releaseFeedbackData}\r\n\t\t\t\t\ttitle={formStatus === \"released\" ? \"Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.\" : \"Освободить форму?\"}\r\n\t\t\t\t\tdialogFunction={() => { changeTaskStatus('released') }} />} */}\r\n\r\n\t\t\t\t{dialogType === 'release' && <DefaultDialog\r\n\t\t\t\t\topen={dialogState}\r\n\t\t\t\t\tonClose={handleDialogClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t{formStatus === \"released\" &&\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.</DialogTitle>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<DialogContentText>Спасибо</DialogContentText>\r\n\t\t\t\t\t\t\t: <JSchemaForm\r\n\t\t\t\t\t\t\t\tschema={caseStages[taskMetadata.case_stage_id].releaseFeedback_schema}\r\n\t\t\t\t\t\t\t\tuiSchema={caseStages[taskMetadata.case_stage_id].releaseFeedback_ui}\r\n\t\t\t\t\t\t\t\tformData={feedbackValue}\r\n\t\t\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\thandleFeedbackSave(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonSubmit={() => changeTaskStatus('released')}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={handleDialogClose} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\tОтмена\r\n                      \t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" color=\"primary\" autoFocus>\r\n\t\t\t\t\t\t\t\t\t\tПодтвердить\r\n                      \t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t{formStatus === \"released\" && <DialogActions>\r\n\t\t\t\t\t\t<Button onClick={handleOk} color=\"primary\">\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</DialogActions>}\r\n\t\t\t\t</DefaultDialog>}\r\n\r\n\t\t\t\t{/*{dialogType === 'release' && <DialogFeedback*/}\r\n\t\t\t\t{/*\tstate={dialogState}*/}\r\n\t\t\t\t{/*\tfeedbackValue={feedbackValue}*/}\r\n\t\t\t\t{/*\thandleClose={handleDialogClose}*/}\r\n\t\t\t\t{/*\ttitle={releaseFeedbackData.title}*/}\r\n\t\t\t\t{/*\tdialogFunction={releaseTask}*/}\r\n\t\t\t\t{/*\tanswers={releaseFeedbackData.answers}*/}\r\n\t\t\t\t{/*\tdescription={releaseFeedbackData.description}*/}\r\n\t\t\t\t{/*\treturnFeedback={handleFeedbackSave} />}*/}\r\n\t\t\t\t{/*{redirect && <Redirect to=\"/tasks\" />}*/}\r\n\t\t\t\t{/*<Snackbar*/}\r\n\t\t\t\t{/*\tanchorOrigin={{*/}\r\n\t\t\t\t{/*\t\tvertical: 'bottom',*/}\r\n\t\t\t\t{/*\t\thorizontal: 'left',*/}\r\n\t\t\t\t{/*\t}}*/}\r\n\t\t\t\t{/*\topen={openSnackbar}*/}\r\n\t\t\t\t{/*\tautoHideDuration={6000}*/}\r\n\t\t\t\t{/*\tonClose={handleCloseSnackbar}*/}\r\n\t\t\t\t{/*\tmessage=\"Фидбек отправлен\"*/}\r\n\t\t\t\t{/*\taction={*/}\r\n\t\t\t\t{/*\t\t<React.Fragment>*/}\r\n\t\t\t\t{/*\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>*/}\r\n\t\t\t\t{/*\t\t\t\t<CloseIcon fontSize=\"small\" />*/}\r\n\t\t\t\t{/*\t\t\t</IconButton>*/}\r\n\t\t\t\t{/*\t\t</React.Fragment>*/}\r\n\t\t\t\t{/*\t}*/}\r\n\t\t\t\t{/*/>*/}\r\n\t\t\t\t{/*/!* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} *!/*/}\r\n\t\t\t\t{/*{forms}*/}\r\n\t\t\t\t{/*<Grid container style={{ padding: 20 }} justify=\"center\">*/}\r\n\t\t\t\t{/*\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>*/}\r\n\t\t\t\t{/*\t{!lockButton &&*/}\r\n\t\t\t\t{/*\t\t<div>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>*/}\r\n\t\t\t\t{/*\r\n\t\t\t\t{/*\t\t</div>}*/}\r\n\t\t\t\t{/*</Grid>*/}\r\n\r\n\t\t\t\t{/*{console.log(\"Case stages::: \", caseStages)}*/}\r\n\t\t\t\t{/* {console.log(\"Task metadata::: \", JSON.stringify(taskMetadata.source))} */}\r\n\t\t\t\t{/*{console.log(\"Merged background forms::: \", mergedBackgroundForms)}*/}\r\n\r\n\t\t\t\t{(Object.keys(caseStages).length > 0 &&\r\n\t\t\t\t\tObject.keys(taskMetadata).length > 0 &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id] &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages.length > 0 &&\r\n\t\t\t\t\tObject.keys(mergedBackgroundForms).length > 0) ?\r\n\t\t\t\t\t<Grid style={{ paddingBottom: 30 }}>\r\n\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].backgroundStages.map(stage => {\r\n\t\t\t\t\t\t\treturn <div key={stage}>\r\n\t\t\t\t\t\t\t\t{console.log(\"STAGE: \", stage)}\r\n\t\t\t\t\t\t\t\t{console.log(\"mergedBackgroundForms: \", mergedBackgroundForms)}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmergedBackgroundForms[stage] ?\r\n\t\t\t\t\t\t\t\t\t\t(Object.keys(mergedBackgroundForms[stage]).map(taskId => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid style={{ paddingBottom: 30 }} key={taskId}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tschema={mergedBackgroundForms[stage][taskId].form_questions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuiSchema={mergedBackgroundForms[stage][taskId].ui_schema}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tformData={backgroundResponses[taskId]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields={{ customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: taskId }, ...{ \"currentUserUid\": currentUser.uid } }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t> </JSchemaForm>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\r\n\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\tschema={mergedForm.form_questions}\r\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\r\n\t\t\t\t\t\tformData={formResponses}\r\n\t\t\t\t\t\tfields={{ CustomUIKField: a => CustomUIKField({ ...a, ...{ metadata: taskMetadata }, ...{ prevResp: prevFormResponses }, ...{ taskID: id } }), customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: id }, ...{ initResp: initialResponses }, ...{ \"currentUserUid\": currentUser.uid }, ...{ metadata: taskMetadata }, ...{ stage: caseStages[taskMetadata.case_stage_id] } }) }}\r\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\twidgets={widgets}\r\n\t\t\t\t\t\tomitExtraData={true}\r\n\t\t\t\t\t\tliveOmit={true}\r\n\t\t\t\t\t\tformContext={formResponses}\r\n\t\t\t\t\t\tnoHtml5Validate\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={e => {\r\n\t\t\t\t\t\t\tconsole.log(\"That is what was focused\", e)\r\n\t\t\t\t\t\t\tsetCurrentFocus(e.split(\"_\")[1])\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSubmit={() => handleDialogOpen('send')}\r\n\t\t\t\t\t\tonBlur={(e, v) => {\r\n\t\t\t\t\t\t\t// handleBlur(e, v)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{formStatus === \"sent\" ?\r\n\t\t\t\t\t\t\t<div>Форма отправлена успешно</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\r\n\t\t\t\t\t\t{formStatus === \"ready\" ? <div>\r\n\t\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].additionalButtons && caseStages[taskMetadata.case_stage_id].additionalButtons.includes(\"release\") ?\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"} style={{\r\n\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t}} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t\t\t{!enableButton && <Typography color=\"error\">Вы не можете отправить, пока не заполните все поля</Typography>}\r\n\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\" || !enableButton}\r\n\t\t\t\t\t\t\t\tstyle={enableButton ? {\r\n\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t} : null}\r\n\t\t\t\t\t\t\t>Отправить</Button>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<div>Вы освободили эту форму и больше не можете ее заполнять.</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull}\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default JSchemaTask","import React, { useState, useContext, useEffect } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport firebase from './util/Firebase'\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\n// import Appbar from './Components/Appbar/oldAppBar'\r\nimport Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\nimport Signin from './Components/Auth/Signin';\r\nimport PrivateRoute from './util/PrivateRoute';\r\nimport FAQ from './Components/FAQ/FAQ';\r\nimport Page from \"./Components/Page/Page\";\r\nimport JSchemaTask from \"./Components/Tasks/JSchemaTask\";\r\n\r\n\r\nconst App = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const [tgId, setTgId] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    let unsubscribeUserPrivate = () => { }\r\n    if (currentUser) {\r\n      unsubscribeUserPrivate = firebase.firestore()\r\n        .collection('users')\r\n        .doc(currentUser.uid)\r\n        .collection(\"user_private\")\r\n        .doc(\"private\")\r\n        .onSnapshot(doc => {\r\n          if (doc.exists && \"tg_id\" in doc.data()) {\r\n            console.log(\"APP TGID: \", doc.data().tg_id)\r\n            setTgId(doc.data().tg_id)\r\n          }\r\n        })\r\n    }\r\n    return () => {\r\n      unsubscribeUserPrivate()\r\n    }\r\n  }, [currentUser])\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n            {tgId !== \"\" ? <Switch>\r\n              <Route exact path=\"/profile\">\r\n                <Profile />\r\n              </Route>\r\n              <Route exact path=\"/request\">\r\n                <Cases />\r\n              </Route>\r\n              <Route exact path=\"/tasks\">\r\n                <Tasks />\r\n              </Route>\r\n              <Route path=\"/tasks/:id\">\r\n                <Task />\r\n              </Route>\r\n              <Route path=\"/t/:id\">\r\n                <JSchemaTask />\r\n              </Route>\r\n              <Route exact path=\"/tasksObserver\">\r\n                <TasksObserver />\r\n              </Route>\r\n              <Route exact path=\"/notifications\">\r\n                <Notifications />\r\n              </Route>\r\n              <Route exact path=\"/signin\">\r\n                <Signin />\r\n              </Route>\r\n              <Route exact path=\"/faq\">\r\n                <FAQ />\r\n              </Route>\r\n              <Route path=\"/p/:id\">\r\n                {currentUser ?\r\n                  <Page />\r\n                  :\r\n                  <Signin />}\r\n              </Route>\r\n              <PrivateRoute path=\"/\" component={Home} />\r\n            </Switch>\r\n              :\r\n              <Route>\r\n                <Home />\r\n              </Route>\r\n            }\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from './util/Auth'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}