{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/LinearProgressWithLabel.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","Components/Tasks/JSchemaCard.js","Components/form/Loader.js","Components/form/CustomFileUpload.js","Components/Page/Page.js","Components/Tasks/JSchemaTask.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","messages","userRanks","setUserRanks","userPages","setUserPages","snap","forEach","id","catch","onSnapshot","data","ranks","length","where","snapshot","docChanges","change","type","prevState","className","Divider","to","Object","keys","map","page","name","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","size","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","message","i","justify","Typography","flex","title","Button","update","shown","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","marginBottom","marginTop","paddingRight","formControl","maxWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","a","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","TabPanel","other","role","hidden","p","a11yProps","paddingTop","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","push","error","Paper","Tabs","newValue","centered","Tab","task","Form","uploadsRef","feedback_type","hideActions","showOk","handleOk","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","uploading","setUploading","useParams","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","storage","child","v","put","getDownloadURL","url","url_wo_token","split","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","CircularProgress","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","Case","caseId","disableCase","setDisable","setMessage","sort","b","parseInt","order","task_type","taskType","case_type","case_stage_id","border","item","Cases","allCases","setCases","setRanks","getCasesFromFirebase","cases","c","down","dt","setShown","date","opacity","paddingLeft","toDate","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","unsubscribe","Notification","queryString","require","Home","token","setToken","tgId","setTgId","makeToken","uuid","Date","now","unsubscribeUser","unsubscribeUserPrivate","oldToken","tg_token","oldDate","substring","moment","diff","newToken","tg_id","urlString","parse","location","search","rank","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","assigned_users","users","find","getUserInfo","PaginatedTasks","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","floor","start","end","slice","pagination","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","taskId","select","FAQ","handleClickApplyFilters","tasklist","taskList","questionList","apply","JSchemaTaskCard","history","useHistory","cardType","stage","stageID","pCase","waiting","setWaiting","sendCallbackRequest","callback","callbackType","callbackName","uuidv4","FieldPath","documentId","cardData","Loader","fileBeingUploaded","setFileBeingUploaded","storageRef","progress","on","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","downloadURL","filesLinks","contents","newState","assign","CustomFileUpload","currentUserUid","connectingTelegram","setConnectingTelegram","telegramConnected","setTelegramConnected","pathToFolder","handleTgConnectClick","fileUpload","linksToFiles","formData","schema","path","Page","pageData","setPageData","userCases","setUserCases","setAllCases","userTasks","setUserTasks","filteredStages","setFilteredStages","tabValue","setTabValue","availableStages","setAvailableStages","bgStages","setBgStages","filterFormData","setFilterFormData","availableTasks","setAvailableTasks","userRanksDescriptions","setUserRanksDescriptions","intersection","casesPath","complexStateFirebaseUpdate","simpleStateFirebaseUpdate","caseWithSelectableTasks","limit","fs","region","setFunction","subState","newFilteredStages","cloneDeep","caseID","stageId","ranks_write","creatable","rank_limit_number","setIntersection","maxTasksPerStage","calculatemaxTasksPerStage","tasksPerStage","countTasksPerStage","occurrences","values","rArray","limits","largestLimit","arrA","arrB","setA","Set","setB","_intersection","elem","has","displayTasks","stages","caseType","handleFormChange","filters","formQuestions","properties","formUI","stageFilter","filterQuestion","end_ui_schema","uiSchema","e","showFilters","JSchemaTask","formResponses","setFormResponses","taskForm","setTaskForm","mergedForm","setMergedForm","taskMetadata","setTaskMetadata","caseStages","setCaseStages","backgroundTasks","setBackgroundTasks","backgroundTaskForms","setBackgroundTaskForms","mergedBackgroundForms","setMergedBackgroundForms","backgroundResponses","setBackgroundResponses","setCurrentFocus","gRef","setGRef","formStatus","setFormStatus","includes","changes","deletes","modifyResponses","mergedBgForms","mergeForm","backgroundTasksList","backgroundStages","caseForms","tForm","cForms","start_ui_schema","form_questions","ui_schema","definitions","uiOrder","goBack","changeTaskStatus","fields","customFileUpload","onFocus","onBlur","k","delete","handleBlur","additionalButtons","App","exact","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.72da24d4.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\n    projectId: \"journal-bb5e3\",\n    storageBucket: \"journal-bb5e3.appspot.com\",\n    messagingSenderId: \"918752509407\",\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n  export const signInWithGoogle = () => {\n    firebase.auth().signInWithPopup(provider);\n  };\n\nexport default firebase;","import React, { useEffect, useState } from \"react\";\nimport firebase from \"./Firebase\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setCurrentUser(user)\n      setPending(false)\n      let rootRef = firebase.firestore().collection(\"users\")\n      if (user) {\n        let userRef = rootRef.doc(user.uid)\n        userRef.get().then(doc => {\n          if (doc && doc.exists) {\n              // pass\n              console.log('User Exist')\n          }\n          else {\n            console.log(\"Creating user\")\n            userRef.set(\n              {\n                username: user.displayName,\n                email: user.email,\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\n              }\n            )\n          }\n        })\n      }\n    });\n  }, []);\n\n  // if(pending){\n  //   return <>Loading...</>\n  // }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\nimport { AuthContext } from '../../util/Auth';\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport KloopLogo from '../../kloop_transparent_site.png'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { Badge } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid'\n\nimport {\n\tLink\n} from \"react-router-dom\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tdisplay: 'flex',\n\t},\n\tdrawer: {\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: drawerWidth,\n\t\t\tflexShrink: 0,\n\t\t},\n\t},\n\tappBar: {\n\t\tbackground: 'white',\n\t\tboxShadow: 'none',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\n\t\t\tmarginLeft: drawerWidth,\n\t\t},\n\t},\n\tmenuButton: {\n\t\tcolor: 'black',\n\t\tmarginRight: theme.spacing(2),\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\tdisplay: 'none',\n\t\t},\n\t},\n\t// necessary for content to be below app bar\n\ttoolbar: theme.mixins.toolbar,\n\tdrawerPaper: {\n\t\twidth: drawerWidth,\n\t},\n\tcontent: {\n\t\tflexGrow: 1,\n\t\tpadding: theme.spacing(3),\n\t},\n}));\n\nfunction ResponsiveDrawer(props) {\n\tconst { window } = props;\n\tconst classes = useStyles();\n\tconst theme = useTheme();\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\n\tconst { currentUser } = useContext(AuthContext);\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\n\tconst menuOpen = Boolean(anchorEl);\n\n\tconst handleDrawerToggle = () => {\n\t\tsetMobileOpen(!mobileOpen);\n\t};\n\n\n\tconst [moderator, setModerator] = useState(false)\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\n\tconst [messages, setMessages] = useState([])\n\tconst [userRanks, setUserRanks] = useState([])\n\tconst [userPages, setUserPages] = useState({})\n\n\tuseEffect(() => {\n\t\tif (currentUser) {\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\n\t\t\t\tsnap.forEach(doc => {\n\t\t\t\t\tif (doc.id === currentUser.uid) {\n\t\t\t\t\t\tconsole.log('moderator')\n\t\t\t\t\t\tsetModerator(true)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}).catch(() => setModerator(false))\n\t\t}\n\t}, [currentUser])\n\n\tuseEffect(() => {\n\t\tif (currentUser) {\n\t\t\tfirebase\n\t\t\t\t.firestore()\n\t\t\t\t.collection('users')\n\t\t\t\t.doc(currentUser.uid)\n\t\t\t\t.collection(\"user_private\")\n\t\t\t\t.doc(\"private\")\n\t\t\t\t.onSnapshot( doc => {\n\t\t\t\t\tif(doc.data()) {\n\t\t\t\t\t\tsetUserRanks(doc.data().ranks)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t}, [currentUser])\n\n\tuseEffect(() => {\n\t\tif (userRanks.length > 0) {\n\t\t\tfirebase\n\t\t\t\t.firestore()\n\t\t\t\t.collection('pages')\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", userRanks)\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\tsetUserPages(prevState => {\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tconsole.log(\"User pages: \", change.doc.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\t}, [userRanks])\n\n\n\t// useEffect(() => {\n\t// \t//let unsubscribe = () => {}\n\t// \tif (currentUser) {\n\t// \t\tfirebase.firestore()\n\t// \t\t\t.collection('notifications')\n\t// \t\t\t.where('user_id', 'array-contains', currentUser.uid)\n\t// \t\t\t.onSnapshot(snap => {\n\t// \t\t\tconsole.log(snap.size)\n\t// \t\t\tlet m = []\n\t// \t\t\tlet count = 0\n\t// \t\t\tsnap.forEach(doc => {\n\t// \t\t\t\tif (!doc.data().shown) {\n\t// \t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\n\t// \t\t\t\t\tcount++\n\t// \t\t\t\t}\n\t// \t\t\t})\n\t// \t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\n\t// \t\t\tsetNumOfMessages(count)\n\t// \t\t\tsetMessages(m)\n\t// \t\t})\n\t// \t}\n\t// \t//return () => unsubscribe\n\t// }, [currentUser])\n\n\tconst updateFirestoreStatus = (id, index) => {\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\n\t}\n\n\tconst handleMenu = (event) => {\n\t\tsetAnchorEl(event.currentTarget);\n\t};\n\n\tconst handleMenuClose = () => {\n\t\tsetAnchorEl(null)\n\t}\n\n\tconst drawer = (\n\t\t<div>\n\t\t\t<div className={classes.toolbar} />\n\t\t\t<Divider />\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t{/*<li>*/}\n\t\t\t\t\t{/*\t<Link to=\"/tasks\">Задания</Link>*/}\n\t\t\t\t\t{/*</li>*/}\n\t\t\t\t\t{/*<li>*/}\n\t\t\t\t\t{/*\t<Link to=\"/request\">Получить задание</Link>*/}\n\t\t\t\t\t{/*</li>*/}\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\n\t\t\t\t\t</li>\n\t\t\t\t\t{moderator ? <li>\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\n\t\t\t\t\t</li> : null}\n\t\t\t\t\t{moderator ? <li>\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\n\t\t\t\t\t</li> : null}\n\t\t\t\t\t</ul>\n\t\t\t\t<ul>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tObject.keys(userPages).map(page => {\n\t\t\t\t\t\t\t\treturn <li key={page}> <Link to={\"/p/\" + page}>\n\t\t\t\t\t\t\t\t\t{userPages[page].name}\n\t\t\t\t\t\t\t\t</Link> </li>\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t</div>\n\t);\n\n\tconst container = window !== undefined ? () => window().document.body : undefined;\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<CssBaseline />\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\taria-label=\"open drawer\"\n\t\t\t\t\t\tedge=\"start\"\n\t\t\t\t\t\tonClick={handleDrawerToggle}\n\t\t\t\t\t\tclassName={classes.menuButton}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{currentUser &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\t\tonClick={handleMenu}\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\n\t\t\t\t\t\t\t\t</Badge>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t<Menu\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\n\t\t\t\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tkeepMounted\n\t\t\t\t\t\t\t\ttransformOrigin={{\n\t\t\t\t\t\t\t\t\tvertical: 'top',\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\topen={menuOpen}\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\n\t\t\t\t\t\t\t\t\t\t<Grid container key={message.id} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t{currentUser\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span style={{color: 'black', fontSize: 12, marginLeft: 7}}>\n\t\t\t\t\t\t\t\t{currentUser.email}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<Button style={{borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12}}\n\t\t\t\t\t\t\t\t\tvariant=\"outlined\" size=\"small\"\n\t\t\t\t\t\t\t\t\tonClick={() => firebase.auth().signOut()}>\n\t\t\t\t\t\t\t\tВыход\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\n\t\t\t\t\t}\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n\t\t\t\t<Hidden smUp implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\tvariant=\"temporary\"\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\n\t\t\t\t\t\topen={mobileOpen}\n\t\t\t\t\t\tonClose={handleDrawerToggle}\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tModalProps={{\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t\t<Hidden xsDown implementation=\"css\">\n\t\t\t\t\t<Drawer\n\t\t\t\t\t\tclasses={{\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvariant=\"permanent\"\n\t\t\t\t\t\topen\n\t\t\t\t\t>\n\t\t\t\t\t\t{drawer}\n\t\t\t\t\t</Drawer>\n\t\t\t\t</Hidden>\n\t\t\t</nav>\n\t\t\t<main className={classes.content}>\n\t\t\t\t<div className={classes.toolbar} />\n\t\t\t\t{props.children}\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nResponsiveDrawer.propTypes = {\n\t/**\n\t * Injected by the documentation to work in an iframe.\n\t * You won't need it on your project.\n\t */\n\twindow: PropTypes.func,\n};\n\nexport default ResponsiveDrawer;\n","import React, { useState } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst Feedback = (props) => {\n\n    const [value, setValue] = useState(null)\n    const [textValue, setTextValue] = useState('')\n    const { returnAnswer } = props\n\n    const handleChange = (event) => {\n        setValue(event.target.value)\n        returnAnswer({reason: event.target.value, text: textValue})\n    };\n\n    const handleTextChange = (event) => {\n        setTextValue(event.target.value)\n        returnAnswer({reason: value, text: event.target.value})\n    }\n\n\n\n    return (\n        <div>\n            <h4>{props.title}</h4>\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\n                    {props.answers.map((el, i) => <FormControlLabel\n                        key={i}\n                        value={el}\n                        control={<Radio color=\"primary\" />}\n                        label={el}\n                        disabled={props.locked ? true : false} />)}\n                </RadioGroup>\n            </FormControl>\n            <TextField\n                id={\"feedback_input\"}\n                label=\"Примечание\"\n                value={textValue}\n                onChange={handleTextChange}\n                // required={required}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n            />\n        </div>\n    )\n}\n\nexport default Feedback","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\nimport Feedback from '../form/feedback'\n\n\nexport default function AlertDialog(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.state}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            <Typography>{props.description}</Typography>\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={props.handleClose} color=\"primary\">\n            Отмена\n          </Button>\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\n            Подтвердить\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, {useState} from 'react'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\n\nconst LinearProgressWithLabel = (props) => {\n    return (\n      <Box display=\"flex\" alignItems=\"center\">\n        <Box width=\"100%\" mr={1}>\n          <LinearProgress variant=\"determinate\" {...props} />\n        </Box>\n        <Box minWidth={35}>\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\n            props.value,\n          )}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\nexport default LinearProgressWithLabel","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\nimport Feedback from './feedback'\n\nimport firebase from '../../util/Firebase'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            width: '40ch',\n        },\n    },\n\n}));\n\n\nconst File = (props) => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('');\n    const [dialogOpen, setDialogOpen] = useState(false)\n    const [feedbackValue, setFeedback] = useState({})\n    const [feedbackFormData, setFormData] = useState({})\n    const [showFeedback, setShowFeedback] = useState(false)\n\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\n\n    useEffect(() => {\n        console.log(feedbackType)\n        if (feedbackType && askFeedback) {\n            console.log(feedbackType)\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\n                setFormData(doc.data())\n            })\n            setShowFeedback(true)\n        }\n        else {\n            setShowFeedback(false)\n        }\n    }, [feedbackType])\n\n    const handleChange = (event) => {\n        returnFile(event.target.files, id)\n    };\n\n    const sendFeedback = () => {\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\n        handleDialogClose()\n    }\n\n    const returnFeedback = (value) => {\n        setFeedback(value)\n    }\n\n\n    const handleDialogClose = () => {\n        setDialogOpen(false)\n    }\n\n    return (\n        <div>\n            {/* <FeedbackDialog\n                title={feedbackFormData.title}\n                dialogFunction={sendFeedback}\n                state={dialogOpen}\n                handleClose={handleDialogClose}\n                feedbackValue={feedbackValue}\n                answers={feedbackFormData.answers}\n                description={feedbackFormData.description}\n                returnFeedback={returnFeedback}\n            />\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\n            </Box> */}\n            <input\n                    type=\"file\"\n                    onChange={handleChange}\n                    multiple\n                />\n        </div>\n    );\n}\n\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography, IconButton, Box } from '@material-ui/core';\nimport FeedbackIcon from '@material-ui/icons/Feedback';\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\nimport Feedback from './feedback'\nimport FirebaseFileUploader from './FirebaseFileUploader'\nimport File from './file'\n\nimport firebase from '../../util/Firebase'\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'& > *': {\n\t\t\twidth: '40ch',\n\t\t},\n\t},\n\n}));\n\n\nconst BasicTextFields = forwardRef((props, ref) => {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState('');\n\tconst [dialogOpen, setDialogOpen] = useState(false)\n\tconst [answer, setAnswer] = useState(null)\n\tconst [feedbackValue, setFeedback] = useState({})\n\tconst [feedbackFormData, setFormData] = useState({})\n\tconst [showFeedback, setShowFeedback] = useState(false)\n\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\n\n\tuseEffect(() => {\n\t\tif (response) {\n\t\t\tsetValue(response)\n\t\t}\n\t}, [response])\n\n\tuseEffect(() => {\n\t\tif (feedbackType && askFeedback) {\n\t\t\tconsole.log(feedbackType)\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\n\t\t\t\tsetFormData(doc.data())\n\t\t\t})\n\t\t\tsetShowFeedback(true)\n\t\t}\n\t\telse {\n\t\t\tsetShowFeedback(false)\n\t\t}\n\t}, [feedbackType])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value)\n\t\tprops.returnAnswer(event.target.value, props.index)\n\t};\n\n\tconst sendFeedback = () => {\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\n\t\thandleDialogClose()\n\t}\n\n\tconst returnFeedback = (value) => {\n\t\tsetFeedback(value)\n\t}\n\n\n\tconst handleDialogClose = () => {\n\t\tsetDialogOpen(false)\n\t}\n\n\tconst handleFilesUpload = (filename, downloadURL) => {\n\t\tuploadFilesData(filename, downloadURL, id)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<FeedbackDialog\n\t\t\t\ttitle={feedbackFormData.title}\n\t\t\t\tdialogFunction={sendFeedback}\n\t\t\t\tstate={dialogOpen}\n\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\tfeedbackValue={feedbackValue}\n\t\t\t\tanswers={feedbackFormData.answers}\n\t\t\t\tdescription={feedbackFormData.description}\n\t\t\t\treturnFeedback={returnFeedback}\n\t\t\t/>\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\n\t\t\t</Box>\n\t\t\t<TextField\n\t\t\t\tid={\"inputBox\" + index}\n\t\t\t\tlabel=\"Мой ответ\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\t// required={required}\n\t\t\t\tmultiline\n\t\t\t\trows={5}\n\t\t\t\tdisabled={locked}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tfullWidth\n\t\t\t/>\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\n\t\t\t{/* <FirebaseFileUploader\n                ref={ref}\n                title={\"\"}\n                index={index}\n                uploadFilesData={handleFilesUpload}\n            /> */}\n\t\t</div>\n\t);\n})\n\nexport default BasicTextFields","import React, { useEffect } from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tminWidth: 100,\n\t\tmaxWidth: 300\n\t},\n}));\n\nexport default function SelectBox(props) {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState('');\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst {index, response, required, locked } = props\n\n\tuseEffect(() => {\n\t\tif (response) {\n\t\t\t// console.log(props.answers[response])\n\t\t\t// setValue(props.answers[response])\n\t\t\tsetValue(response)\n\t\t}\n\t}, [response])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\tlet id = props.answers.indexOf(event.target.value)\n\t\tprops.returnAnswer(event.target.value, index)\n\t};\n\n\tconst handleClose = (event) => {\n\t\tsetOpen(false)\n\t};\n\n\tconst handleOpen = (event) => {\n\t\tsetOpen(true)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\n\t\t\t\t\tid={\"select\" + index}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tonOpen={handleOpen}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}>\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t)\n\n}","import React, { useEffect } from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nexport default function RadioButton(props) {\n\tconst [value, setValue] = React.useState('');\n\tconst {index, response} = props\n\n\tuseEffect(() => {\n\t\tif (response) {\n\t\t\tsetValue(response)\n\t\t}\n\t}, [response])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value)\n\t\tlet id = props.answers.indexOf(event.target.value)\n\t\tprops.returnAnswer(event.target.value, index, id)\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h4>{props.title}</h4>\n\t\t\t<FormControl const='fieldset'>\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\n\t\t\t\t</RadioGroup>\n\t\t\t</FormControl>\n\t\t</div>\n\t)\n\t\t;\n}","import React, { useEffect } from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tflexWrap: 'wrap',\n\t},\n\ttextField: {\n\t\tmarginLeft: theme.spacing(1),\n\t\tmarginRight: theme.spacing(1),\n\t\twidth: 'auto',\n\t},\n}));\n\nexport default function TimePickers(props) {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState('');\n\tconst {index, response} = props\n\n\tuseEffect(() => {\n\t\tif (response) {\n\t\t\tsetValue(response)\n\t\t}\n\t}, [index, response])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value)\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\n\t};\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h4>{props.title}</h4>\n\t\t\t<form className={classes.container} noValidate>\n\t\t\t\t<TextField\n\t\t\t\t\tid={\"time\" + index}\n\t\t\t\t\tlabel=\"Время\"\n\t\t\t\t\ttype=\"time\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t}}\n\t\t\t\t\tInputProps={{disableUnderline: true}}\n\t\t\t\t\tdisabled={props.locked ? true : false}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n}","import React, {useEffect, useState} from 'react';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Typography } from '@material-ui/core';\n\n\nexport default function CheckboxesGroup(props) {\n    const [state, setState] = React.useState({});\n    const [ready, setReady] = useState(false)\n    const {index, answers, required, response, locked} = props\n\n    useEffect(() => {\n\t\tif (response) {\n            setState(response)\n            let a = {}\n            answers.forEach((answer, i) => {\n                if (response[answer]) {\n                    a[answer] = response[answer]\n                }\n                else {\n                    a[answer] = false\n                }\n            })\n            setState(a)\n            props.returnAnswer(a, index)\n        }\n        else {\n            let a = {}\n            answers.forEach((answer, i) => a[answer] = false)\n            props.returnAnswer(a, index)\n            \n        }\n        setReady(true)\n        console.log(state)\n    }, [response, answers])\n\n\n    const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\n    };\n\n    return (\n        ready ?\n        <div>\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\n            <FormControl component=\"fieldset\" disabled={locked}>\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\n                <FormGroup>\n                    {answers.map((el, i) => (\n                        <FormControlLabel\n                            key={i}\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\n                            label={el}\n                        />\n                    ))}\n                </FormGroup>\n            </FormControl>\n        </div> : null\n    );\n}\n","import React, { useState, useEffect, useContext } from 'react'\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\nimport { AuthContext } from \"../../util/Auth\";\n\nimport TextInput from \"../form/textInput\";\nimport SelectBox from \"../form/selectBox\";\nimport RadioButton from \"../form/radiobutton\";\nimport TimePickers from \"../form/timePickers\";\nimport Checkbox from \"../form/checkbox\"\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport { Redirect } from 'react-router';\n\n\nconst Profile = () => {\n    const [questions, setQuestions] = useState([])\n    const [answers, setAnswers] = useState({})\n    const [forms, setForms] = useState([])\n    const [uploaded, setUploaded] = useState(false)\n    const [redirect, setRedirect] = useState(false)\n    const [userData, setUserData] = useState({})\n\n    const { currentUser } = useContext(AuthContext);\n\n    useEffect(() => {\n        let user = {}\n        if (currentUser) {\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\n                setUserData(doc.data())\n                user = doc.data()\n            }).then(() => {\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\n                    console.log(JSON.stringify(doc.data()))\n                    setQuestions(doc.data().questions)\n                    console.log(doc.data().questions)\n                    const forms = doc.data().questions.map((el, i) => {\n                        let response = null\n                        if (user[el.key]) {\n                            console.log(user[el.key])\n                            response = user[el.key]\n                        }\n                        if (el.type === 'input') {\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\n                        }\n                        else if (el.type === 'select') {\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\n                        }\n                        else if (el.type === 'radio') {\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\n                        }\n                        else if (el.type === 'time') {\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\n                        }\n                        else if (el.type === 'checkbox') {\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\n                        }\n                        else {\n                            return null\n                        }\n                    })\n                    setForms(forms)\n                })\n            })\n        }\n    }, [currentUser])\n\n\n    const returnAnswer = (answer, index) => {\n        const tmp = answers\n        tmp[index] = answer\n        setAnswers(tmp)\n        console.log(answers)\n    }\n\n    const saveToFirebase = () => {\n        let mergedAnswers = {}\n        questions.forEach((q, i) => {\n            if (answers[i]) {\n                mergedAnswers[q.key] = answers[i]\n            }\n        })\n\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\n            // profileAnswers: answers,\n            ...mergedAnswers\n        }).then(() => setUploaded(true))\n    }\n\n    // const addCaseId = () => {\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\n    //         snap.forEach( async doc => {\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\n    //             console.log(doc.id)\n    //         })\n    //     })\n    // }\n\n    return (\n        currentUser ?\n            <Grid style={{ padding: 30 }}>\n                {redirect && <Redirect to=\"/\" />}\n                {forms}\n                <Grid container style={{ padding: 20 }} justify=\"center\">\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\n                </Grid>\n\n            </Grid>\n            :\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\n                <br />\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\n            </Grid>\n    )\n\n}\n\nexport default Profile","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Redirect } from 'react-router';\nimport { Box, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminWidth: 250\n\t},\n\tbullet: {\n\t\tdisplay: 'inline-block',\n\t\tmargin: '0 2px',\n\t},\n\ttitle: {\n\t\tfontSize: 14,\n\t},\n\tpos: {\n\t\tmarginBottom: 12,\n\t},\n});\n\nconst TaskCard = (props) => {\n\tconst classes = useStyles();\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\n\n\tconst [redirect, setRedirect] = useState(false)\n\n\treturn (\n\t\t<div>\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\n\t\t\t\t\t\t\tСдано\n\t\t\t\t\t\t</Typography>}\n\t\t\t\t\t</Box>\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\n\t\t\t\t\t\t#{type}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\tЗадание: {description}\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardActions>\n\t\t\t\t\t{sendRequest ?\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\n\t\t\t\t\t}\n\t\t\t\t</CardActions>\n\t\t\t</Card>\n\t\t</div>\n\t);\n}\n\nexport default TaskCard","import React, {useState, useEffect, useContext} from 'react'\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\nimport {AuthContext} from \"../../util/Auth\";\nimport {Grid, Typography} from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport TaskCard from './Card'\nimport PropTypes from 'prop-types';\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 30,\n        flexGrow: 1\n    },\n});\n\n\nconst Tasks = (props) => {\n    const classes = useStyles()\n    const [allTasks, setTasks] = useState(null)\n    const [submittedTasks, setSubmitted] = useState(null)\n    const [quickTasks, setQuickTasks] = useState(null)\n    const {currentUser} = useContext(AuthContext);\n    const [value, setValue] = useState(0)\n\n    useEffect(() => {\n        if (currentUser) {\n            let tasks = []\n            let submitted = []\n            console.log(\"Fired\")\n            firebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        console.log(doc.id, \" => \", doc.data());\n                        if (doc.data().is_complete) {\n                            submitted.push({id: doc.id, ...doc.data()})\n                        } else {\n                            tasks.push({id: doc.id, ...doc.data()})\n                        }\n\n                    });\n                })\n                .then(() => {\n                    setTasks(tasks)\n                    setSubmitted(submitted)\n                })\n                .catch((error) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n        }\n    }, [currentUser])\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n            {/* <Grid>\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\n\t\t\t</Grid> */}\n\n            {/*<Typography variant=\"h4\">Задания</Typography>*/}\n            <div className={classes.root}>\n                <Paper position=\"static\" color=\"default\">\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\n                          aria-label=\"simple tabs example\">\n                        <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\n                        <Tab label=\"Выполненные\" {...a11yProps(1)}/>\n                        {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\n                    </Tabs>\n                </Paper>\n            </div>\n            <TabPanel value={value} index={0}>\n                {allTasks && allTasks.map((task, i) => (\n                    <Grid key={'active_task_' + i} style={{padding: 10}}>\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\n                                  type={task.type} id={task.id}/>\n                    </Grid>\n                ))}\n            </TabPanel>\n\n            <TabPanel value={value} index={1}>\n                {submittedTasks && submittedTasks.map((task, i) => (\n                    <Grid key={'submitted_task_' + i} style={{padding: 10}}>\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\n                                  type={task.type} id={task.id}/>\n                    </Grid>\n                ))}\n            </TabPanel>\n           {/* <TabPanel value={value} index={2}>\n                быстрые задания\n            </TabPanel>*/}\n        </Grid>\n    )\n}\n\nexport default Tasks","import React, { useEffect } from 'react';\nimport { Typography } from '@material-ui/core';\n\n\n\nfunction BasicTextFields(props) {\n\n\tconst {title} = props\n\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\n\t\t</div>\n\t);\n}\n\nexport default BasicTextFields","import React, { forwardRef } from 'react'\n\nimport TextInput from \"./textInput\";\nimport SelectBox from \"./selectBox\";\nimport RadioButton from \"./radiobutton\";\nimport TimePickers from \"./timePickers\";\nimport Checkbox from \"./checkbox\"\nimport Text from \"./text\"\nimport File from \"./file\"\n\nconst Form = forwardRef((props, ref) => {\n\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\n\n    if (question.type === 'input') {\n        return <TextInput\n            key={index}\n            // ref={ref}\n            index={index}\n            title={question.title}\n            response={response}\n            returnAnswer={returnAnswer}\n            required={question.required}\n            locked={locked}\n            askFeedback={askFeedback}\n            feedbackType={question.feedback_type}\n            saveQuestionFeedback={saveQuestionFeedback}\n            id={id}\n            prevTaskId={prevTaskId}\n            uploadFilesData={uploadFilesData}\n            uploadsRef={uploadsRef}\n            returnFile={returnFile}\n            attachMaterials={question.attachMaterials}\n        />\n    }\n    else if (question.type === 'select') {\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\n    }\n    else if (question.type === 'radio') {\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\n    }\n    else if (question.type === 'time') {\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\n    }\n    else if (question.type === 'checkbox') {\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\n    }\n    else if (question.type === 'text') {\n        return <Text key={index} title={question.title} />\n    }\n    else if (question.type === 'file') {\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\n    }\n    else {\n        return null\n    }\n\n})\n\n\nexport default Form\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function AlertDialog(props) {\n\n  return (\n    <div>\n      <Dialog\n        open={props.state}\n        onClose={props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.content}\n          </DialogContentText>\n        </DialogContent>\n          {props.hideActions ? \"\" :\n              props.showOk ?\n                  <DialogActions>\n                      <Button onClick={props.handleOk} color=\"primary\">\n                          Ok\n                      </Button>\n                  </DialogActions>\n                  :\n                  <DialogActions>\n                      <Button onClick={props.handleClose} color=\"primary\">\n                          Отмена\n                      </Button>\n                      <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\n                          Подтвердить\n                      </Button>\n                  </DialogActions>}\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\nimport { AuthContext } from \"../../util/Auth\";\n\nimport Form from \"../form/form\"\nimport Dialog from \"../Dialog/Dialog\"\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\nimport Feedback from \"../form/feedback\"\n\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { Redirect, useParams } from 'react-router';\nimport { Link } from \"react-router-dom\";\n\n\nconst Tasks = () => {\n\tconst [questions, setQuestions] = useState([])\n\tconst [responses, setResponses] = useState([])\n\tconst [answers, setAnswers] = useState({})\n\tconst [forms, setForms] = useState([])\n\tconst [uploaded, setUploaded] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\tconst [userData, setUserData] = useState({})\n\tconst [lockButton, setLock] = useState(false)\n\tconst [caseTasks, setCaseTasks] = useState([])\n\tconst [dialogState, setDialog] = useState(false)\n\tconst [dialogType, setDialogType] = useState(null)\n\tconst [feedbackValue, setFeedback] = useState({})\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\n\tconst [files, setFiles] = useState({})\n\tconst [uploading, setUploading] = useState(false)\n\n\tconst { currentUser } = useContext(AuthContext);\n\tconst { id } = useParams();\n\n\tconst handleCloseSnackbar = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenSnackbar(false);\n\t};\n\n\t// const uploadsRef = useRef();\n\n\tuseEffect(() => {\n\t\tconst getQuestions = async (taskID) => {\n\t\t\tlet q = []\n\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\n\t\t\t\t.then((querySnapshot) => {\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t\t});\n\n\t\t\treturn q\n\t\t}\n\n\n\t\tconst getResponses = async (taskID) => {\n\t\t\tlet r = []\n\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\n\t\t\t\t.then((querySnapshot) => {\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t\t});\n\n\t\t\treturn r\n\t\t}\n\n\n\t\tconst getSameCaseTasks = async () => {\n\t\t\tlet sameCaseTasks = []\n\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\n\t\t\t\treturn doc.data()\n\t\t\t}).then(async data => {\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\n\t\t\t\t\tsnap.forEach(doc => {\n\t\t\t\t\t\tif (doc.id !== id) {\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn sameCaseTasks\n\t\t}\n\n\t\tconst getForms = async () => {\n\t\t\tlet f = []\n\t\t\tlet locked = true\n\n\t\t\tsetForms(null)\n\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\n\t\t\t\tif (doc.data().status === 'complete') {\n\t\t\t\t\tlocked = true\n\t\t\t\t\tsetLock(true)\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlocked = false\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet sq = []\n\t\t\tlet sr = []\n\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\n\t\t\tsetCaseTasks(sameCaseTasks)\n\t\t\tif (sameCaseTasks.length > 0) {\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\n\t\t\t\t\treturn getQuestions(t.id)\n\t\t\t\t})\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\n\t\t\t\t\treturn getResponses(t.id)\n\t\t\t\t})\n\t\t\t\tconsole.log(ques)\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\n\n\t\t\t\tconsole.log(sq)\n\t\t\t\tconsole.log(sr)\n\t\t\t}\n\n\t\t\tlet sf = sq.map((el, i) => {\n\t\t\t\tlet response = null\n\t\t\t\tsr.forEach((res) => {\n\t\t\t\t\tif (el.questionId === res.responseId) {\n\t\t\t\t\t\tresponse = res.data.answer\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\n\t\t\t})\n\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\n\n\n\t\t\tlet q = await getQuestions(id)\n\t\t\tlet r = await getResponses(id)\n\n\n\t\t\tsetQuestions(q)\n\t\t\tsetResponses(r)\n\n\n\t\t\t// let newQ = sq.concat(q)\n\t\t\t// let newR = sr.concat(r)\n\n\t\t\tf = q.map((el, i) => {\n\t\t\t\tlet response = null\n\t\t\t\tr.forEach((res) => {\n\t\t\t\t\tif (el.questionId === res.responseId) {\n\t\t\t\t\t\tresponse = res.data.answer\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn (\n\t\t\t\t\t<Form\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\n\t\t\t\t\t\tquestion={el.data}\n\t\t\t\t\t\tindex={i}\n\t\t\t\t\t\tresponse={response}\n\t\t\t\t\t\treturnFile={returnFile}\n\t\t\t\t\t\treturnAnswer={returnAnswer}\n\t\t\t\t\t\tid={el.questionId}\n\t\t\t\t\t\tlocked={locked}\n\t\t\t\t\t\t// ref={uploadsRef}\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\n\t\t\t\t)\n\t\t\t})\n\n\t\t\tlet newF = sf.concat(f)\n\t\t\tsetForms(newF)\n\t\t}\n\t\tif (currentUser) {\n\t\t\tgetForms()\n\t\t}\n\t}, [currentUser, id, lockButton])\n\n\n\tconst returnAnswer = (answer, index) => {\n\t\tconst tmp = answers\n\t\ttmp[index] = answer\n\t\tsetAnswers(tmp)\n\t}\n\n\tconst returnFile = (file, questionId) => {\n\t\tlet arr = [...file]\n\t\tlet tmp = files\n\t\ttmp[questionId] = arr\n\t\tsetFiles(tmp)\n\t\tconsole.log([...file], questionId)\n\t}\n\n\tconst upload = async () => {\n\t\t// uploadsRef.current.startUpload()\n\t\tif (Object.keys(files).length > 0) {\n\t\t\tconsole.log('files')\n\t\t\tsetUploading(true)\n\t\t\tfor (const [key, value] of Object.entries(files)) {\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\n\t\t\t\tawait Promise.all(value.map(async v => {\n\t\t\t\t\tlet snap = await ref.child(v.name).put(v)\n\t\t\t\t\tlet url = await snap.ref.getDownloadURL()\n\t\t\t\t\tlet url_wo_token = url.split(\"?\")[0]\n\t\t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\n\t\t\t\t}));\n\t\t\t}\n\t\t\tsetUploaded(true)\n\t\t\tsetUploading(false)\n\t\t}\n\t}\n\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\n\t\tif (previousTaskId) {\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\n\t\t\t\t.add({\n\t\t\t\t\tanswer: data.reason,\n\t\t\t\t\ttext: data.text,\n\t\t\t\t\tuser_id: currentUser.uid,\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\n\t\t\t\t})\n\t\t\t\t.then(() => setOpenSnackbar(true))\n\t\t}\n\t\telse {\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\n\t\t}\n\t}\n\n\tconst saveToFirebase = async (lock) => {\n\t\tawait upload()\n\t\tquestions.forEach(async (q, i) => {\n\t\t\tif (answers[i] || answers[i] === \"\") {\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\n\t\t\t}\n\t\t})\n\n\t\tif (lock) {\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\n\t\t\tsetLock(true)\n\t\t\tconsole.log(\"Task Locked\")\n\t\t\tsetDialog(false)\n\t\t}\n\t}\n\n\tconst uploadFilesData = async (filename, url, questionId) => {\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\n\t\tconsole.log(\"Файл отправлен\")\n\t\tif (filename && url) {\n\t\t\trootRef.set(\n\t\t\t\t{\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\n\t\t\t\t}, { merge: true }\n\t\t\t).then(() => console.log('super'))\n\t\t}\n\t};\n\n\tconst handleDialogClose = () => {\n\t\tsetDialog(false);\n\t\tsetFeedback({})\n\t};\n\n\tconst handleDialogOpen = (type) => {\n\t\tif (type === 'send') {\n\t\t\tsetDialogType('send')\n\t\t\tsetDialog(true)\n\t\t}\n\t\tif (type === 'release') {\n\t\t\tsetDialogType('release')\n\t\t\tsetDialog(true)\n\t\t}\n\n\t}\n\n\tuseEffect(() => {\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\n\t\t\tsetReleaseFeedbackData(doc.data())\n\t\t})\n\t}, [])\n\n\tconst releaseTask = () => {\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetDialog(false)\n\t\t\t\t\tsetLock(true)\n\t\t\t\t}))\n\t\t// alert(feedbackValue)\n\t}\n\n\tconst handleFeedbackSave = (value) => {\n\t\tsetFeedback(value)\n\t}\n\n\treturn (\n\t\tcurrentUser ?\n\t\t\t<Grid style={{ padding: 30 }}>\n\t\t\t\t{dialogType === 'send' && <Dialog\n\t\t\t\t\tstate={dialogState}\n\t\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\t\thideActions={uploading || uploaded}\n\t\t\t\t\ttitle={uploading ? \"Загрузка файлов\" : uploaded ? \"Файлы загружены\" : \"Отправить задание?\"}\n\t\t\t\t\tcontent={uploading ? <CircularProgress /> : uploaded ? \"Спасибо\" : \"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"}\n\t\t\t\t\tdialogFunction={() => saveToFirebase(true)} />}\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\n\t\t\t\t\tstate={dialogState}\n\t\t\t\t\tfeedbackValue={feedbackValue}\n\t\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\t\ttitle={releaseFeedbackData.title}\n\t\t\t\t\tdialogFunction={releaseTask}\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\n\t\t\t\t\tdescription={releaseFeedbackData.description}\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{\n\t\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\t\thorizontal: 'left',\n\t\t\t\t\t}}\n\t\t\t\t\topen={openSnackbar}\n\t\t\t\t\tautoHideDuration={6000}\n\t\t\t\t\tonClose={handleCloseSnackbar}\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\n\t\t\t\t\taction={\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\n\t\t\t\t{forms}\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\n\t\t\t\t\t{!lockButton &&\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\n\t\t\t\t\t\t</div>}\n\t\t\t\t</Grid>\n\n\t\t\t</Grid>\n\t\t\t:\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\n\t\t\t\t<br />\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\n\t\t\t</Grid>\n\t)\n\n}\n\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\nimport { AuthContext } from \"../../util/Auth\";\nimport firebase from '../../util/Firebase'\n\nimport Paper from '@material-ui/core/Paper'\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Card from '../Tasks/Card'\nimport { Box, Grid, Typography } from '@material-ui/core'\nimport { set } from 'immutable';\n\n\nconst Case = (props) => {\n    const { caseId, userRanks } = props\n    const [allTasks, setTasks] = useState(null)\n    const [ready, setReady] = useState(false)\n    const { currentUser } = useContext(AuthContext);\n\n    const [open, setOpen] = React.useState(false);\n    const [disableCase, setDisable] = useState(false)\n    const [message, setMessage] = useState('')\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    useEffect(() => {\n        if (currentUser) {\n            let tasks = []\n            console.log(\"Fired\")\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\n                .then((querySnapshot) => {\n                    querySnapshot.forEach((doc) => {\n                        // before change\n                        //tasks.push({ id: doc.id, ...doc.data() }) \n\n                        //after change\n                        const ranks = doc.data().ranks\n                        console.log('RANKS')\n                        console.log(ranks)\n                        console.log(userRanks)\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\n                        // }\n                        // else {\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\n                        // }\n                        tasks.push({ id: doc.id, ...doc.data(), disabled: false })\n                        \n                    });\n                })\n                .then(() => {\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\n                    setTasks(tasks)\n                    setReady(true)\n                })\n                .catch((error) => {\n                    console.log(\"Error getting documents: \", error);\n                });\n        }\n    }, [currentUser])\n\n    useEffect(() => {\n        if (currentUser) {\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\n                if (snap.size < 3) {\n                    console.log(\"SIZE\", snap.size)\n                    setDisable(false)\n                }\n                else {\n                    setDisable(true)\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\n                }\n            })\n        }\n    }, [currentUser, disableCase, open])\n\n    const sendRequest = (type, task_type) => {\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\n            taskType: type,\n            status: \"pending\",\n            user: currentUser.uid,\n            case_type: caseId,\n            case_stage_id: task_type\n        }).then((doc) => {\n            setOpen(true)\n            console.log('sending request')\n        })\n    }\n\n    return (\n        <div>\n            <Snackbar\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n                open={open}\n                autoHideDuration={6000}\n                onClose={handleClose}\n                message=\"Запрос отправлен\"\n                action={\n                    <React.Fragment>\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                            <CloseIcon fontSize=\"small\" />\n                        </IconButton>\n                    </React.Fragment>\n                }\n            />\n\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\n                <Box style={{ padding: '10px 20px 0px' }}>\n                    <Box style={{ padding: '5px 10px 10px' }}>\n                        <Typography variant=\"h6\">{props.title}</Typography>\n                    </Box>\n                    <Box style={{ padding: '10px 10px 5px' }}>\n                        <Typography variant=\"body2\">{props.description}</Typography>\n                    </Box>\n                    <Box style={{ padding: '10px 10px 0px' }}>\n                        {message}\n                    </Box>\n                </Box>\n\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\n                    {ready && allTasks.map((t, i) => (\n                        <Grid item key={i} style={{ padding: 10 }}>\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Paper>\n        </div>\n    )\n}\n\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\nimport firebase from '../../util/Firebase'\nimport { AuthContext } from \"../../util/Auth\";\n\nimport Case from './Case'\n\n\nconst Cases = () => {\n\n    const { currentUser } = useContext(AuthContext);\n    const [allCases, setCases] = useState([])\n    const [ready, setReady] = useState(false)\n    const [userRanks, setRanks] = useState([])\n\n    // New\n    useEffect(() => {\n        if (currentUser) {\n            firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\n                \n                if (doc && doc.exists) {                \n\n                    let ranks = doc.data().ranks\n                    console.log(ranks)\n                    setRanks(ranks)\n                    getCasesFromFirebase(ranks)\n                }\n            })\n        }\n    }, [currentUser])\n\n\n    // /////// Old ////////\n    // useEffect(() => {\n    //     if (currentUser) {\n    //         let cases = []\n    //         console.log(\"Fired\")\n    //         firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\n    //             .then((querySnapshot) => {\n    //                 querySnapshot.forEach((doc) => {\n    //                     cases.push({ id: doc.id, ...doc.data() })\n    //                 });\n    //             })\n    //             .then(() => {\n    //                 setCases(cases)\n    //                 setReady(true)\n    //             })\n    //             .catch((error) => {\n    //                 console.log(\"Error getting documents: \", error);\n    //             });\n    //     }\n    // }, [currentUser])\n    // //////////////\n\n    const getCasesFromFirebase = (ranks) => {\n        let cases = []\n        console.log(\"Fired\")\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\n            .then((querySnapshot) => {\n                querySnapshot.forEach((doc) => {\n                    console.log(doc.data())\n                    cases.push({ id: doc.id, ...doc.data() })\n                });\n            })\n            .then(() => {\n                setCases(cases)\n                setReady(true)\n            })\n            .catch((error) => {\n                console.log(\"Error getting documents: \", error);\n            });\n    }\n\n    return (\n        <div>\n            {ready && allCases.map((c, i) => (\n                <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\n            ))}\n        </div>\n    )\n}\n\nexport default Cases","import React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Redirect } from 'react-router';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tmargin: 20,\n\t\twidth: 500,\n\t\t[theme.breakpoints.down(\"sm\")]: {\n\t\t\tmaxWidth: 300\n\t\t}\n\t},\n\tbullet: {\n\t\tdisplay: 'inline-block',\n\t\tmargin: '0 2px',\n\t},\n\ttitle: {\n\t\tfontSize: 14,\n\t},\n\tpos: {\n\t\tmarginBottom: 12,\n\t},\n}));\n\nconst TaskCard = (props) => {\n\tconst classes = useStyles();\n\tconst { title, description, id, setShown, shown, date } = props\n\n\tconst getFormatDate = (dt) => {\n\t\t// let month = '' + (d.getMonth() + 1)\n\t\t// let day = '' + d.getDate()\n\t\t// let year = d.getFullYear()\n\n\t\t// if (month.length < 2)\n\t\t// \tmonth = '0' + month;\n\t\t// if (day.length < 2)\n\t\t// \tday = '0' + day;\n\t\tlet formatDate = `${\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\n\n\t\treturn formatDate\n\t}\n\n\treturn (\n\t\t<Grid container justify=\"center\">\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\n\t\t\t\t</CardActions>\n\t\t\t</Card>\n\t\t</Grid>\n\t);\n}\n\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\nimport React, { useEffect, useState, useContext } from 'react'\nimport { AuthContext } from '../../util/Auth';\nimport firebase from '../../util/Firebase'\n\nimport Notification from './Notification'\n\n\nconst Notifications = () => {\n\n    const { currentUser } = useContext(AuthContext);\n    const [cards, setCards] = useState([])\n\n    const updateFirestoreStatus = (id) => {\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\n    }\n\n    useEffect(() => {\n        if (currentUser) {\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\n                let messages = []\n                snap.forEach((doc, i) => {\n                    messages.push({ id: doc.id, ...doc.data() })\n                })\n                console.log(messages[0].created_date.toDate())\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\n                setCards(messages)\n            })\n            return () => unsubscribe()\n        }\n    }, [currentUser])\n\n    return (\n        <div>\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\n        </div>\n    )\n\n}\n\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\nimport { AuthContext } from \"../../util/Auth\";\nimport moment from 'moment';\nimport { v1 as uuid } from 'uuid'\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: 20,\n        background: 'lightgreen',\n        height: 200,\n        width: 500,\n        [theme.breakpoints.down(\"sm\")]: {\n            maxWidth: 300\n        }\n    }\n}));\n\n\nconst Home = () => {\n    const classes = useStyles();\n    const [token, setToken] = useState(null)\n    const { currentUser } = useContext(AuthContext);\n    const [tgId, setTgId] = useState(\"\")\n\n    useEffect(() => {\n        const makeToken = () => {\n            return uuid().toString() + '_' + Date.now()\n        }\n        let unsubscribeUser = () => {}\n        let unsubscribeUserPrivate = () => {}\n        if (currentUser) {\n            unsubscribeUser = firebase.firestore()\n                .collection('users')\n                .doc(currentUser.uid)\n                .onSnapshot(doc => {\n\n                    let oldToken;\n                    if (doc.exists && doc.data().tg_token) {\n                        oldToken = doc.data().tg_token\n                    } else {\n                        oldToken = false\n                    }\n\n                    console.log(oldToken)\n                    if (oldToken) {\n                        console.log(oldToken)\n                        let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\n                        let date = moment().diff(oldDate, 'hours')\n                        console.log(date)\n                        if (date > 0) {\n                            let newToken = makeToken()\n                            firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\n                            setToken(newToken)\n                        } else {\n                            setToken(oldToken)\n                        }\n                    } else {\n                        console.log('no token')\n                        let newToken = makeToken()\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\n                        setToken(newToken)\n                    }\n                })\n            unsubscribeUserPrivate = firebase.firestore()\n                .collection('users')\n                .doc(currentUser.uid)\n                .collection(\"user_private\")\n                .doc(\"private\")\n                .onSnapshot(doc => {\n                    console.log(\"TGID: \", doc.data().tg_id)\n                    if (doc.exists && \"tg_id\" in doc.data()) {\n                        console.log(\"TGID: \", doc.data().tg_id)\n                        setTgId(doc.data().tg_id)\n                    }\n                })\n        }\n        return () => {\n            unsubscribeUser()\n            unsubscribeUserPrivate()\n        }\n    }, [currentUser])\n\n    useEffect(() => {\n        if (currentUser) {\n            let urlString = queryString.parse(window.location.search)\n            if (urlString.rank) {\n                console.log(urlString.rank)\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\n                    if (doc.exists) {\n                        console.log('creating request')\n                        firebase.firestore().collection('rank_requests').add({\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n                            user_id: currentUser.uid,\n                            processed: false,\n                            rank: doc.id\n                        })\n                    }\n                    else {\n                        console.log('no rank')\n                    }\n                })\n            }\n        }\n    }, [currentUser])\n\n    return (\n        currentUser ?\n            <Grid>\n                <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\n                    <Link variant=\"h5\" align=\"center\"\n                          href={\"https://kloopmedia.github.io/Journal/#/p/elections_monitoring\"}>ФОРМЫ ДЛЯ НАБЛЮДЕНИЯ НА\n                        ВЫБОРАХ</Link>\n                </Grid>\n                {tgId === \"\" ?\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\n                        <Typography style={{paddingBottom: 10}} variant=\"h5\" align=\"center\">Вы можете связать свой\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\n                        {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на\n                                бот</Link>\n                            : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд,\n                                перезагрузите страницу</Typography>}\n                    </Grid>\n                    :\n                    null}\n            </Grid>\n            :\n            <Grid container direction=\"column\" style={{padding: 20}} justify=\"center\">\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\n                <br/>\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью\n                    аккаунта Google</Button>\n            </Grid>\n    )\n}\n\nexport default Home","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function UserCard(props) {\n  const classes = useStyles();\n\n  console.log('TEST CARD')\n  console.log(props)\n\n  if(props.userInfo == {}){\n    return (<div></div>)\n  }\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          id: {props.userInfo.id}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n        {props.userInfo.surname} {props.userInfo.name}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          Регион: {props.userInfo.district}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.userInfo.phone}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {props.userInfo.email}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}","import React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../../util/Firebase'\n\nimport Form from '../form/form'\nimport { Button, Grid, Typography } from '@material-ui/core';\n\nimport UserCard from '../Moderator/UserCard'\n\n\nconst ModeratedTask = (props) => {\n\n\tconst [tasks, setTasks] = React.useState([]);\n\tconst [taskInfo, setTaskInfo] = useState({})  \n\t\n\tlet userInfo = {}\n\n    const [questions, setQuestions] = useState([])    \n    const [responses, setResponses] = useState([])    \n    const [answers, setAnswers] = useState({})    \n    const [forms, setForms] = useState(<div></div>)\n    \n\tconst [pending, setPending] = useState(false)\n\tconst [passed, setPassed] = useState(false)\n\tconst [notPassed, setNotPassed] = useState(false)\n\tconst [verified, setVerified] = useState(false)\n\tconst [notVerified, setNotVerified] = useState(false)\n\n\tconst getReviewStatus = async () => {\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\n\t\t\t\t\n\t\t\tlet review_status = doc.data().review_status\n\t\t\t\n\t\t\tsetPending(review_status === 'pending')\n\t\t\tsetPassed(review_status === 'passed')\n\t\t\tsetNotPassed(review_status === 'not passed')\n\t\t\tsetVerified(review_status === 'verified')\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\n        })\n\t}\n\t\n\tconst getUserInfo = () => {\n\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\n\t\t\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\n\t\t\tif (item !== undefined){\n\t\t\t\tuserInfo = item\n\t\t\t}\t\t\t\t\n\t\t\telse{\n\t\t\t\tuserInfo = {}\n\t\t\t}\n\t\t}\n        \n    }\n\n    useEffect(() => {\n\t\tconst getData = async () => {\n\t\t\tlet q = []\n\t\t\tlet r = []\n\t\t\tlet f = []\n\t\t\tlet locked = true\n\n\n\t\t\tconsole.log(\"HOOK\")\n\t\t\tgetReviewStatus()\t\t\n\t\t\t\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\n\t\t\t\t.then(doc => {\t\t\t\t\n\t\t\t\t\tsetTaskInfo(doc.data())\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t\t});\n\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\n\t\t\t\t.then((querySnapshot) => {\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetQuestions(q)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t\t});\n\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\n\t\t\t\t.then((querySnapshot) => {\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t\t.then(() => {\n\t\t\t\t\tsetResponses(r)\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t\t\t\t});\n\t\t\n\n\t\t\t//ЗАЛИПУХА!!!\n\t\t\tsetForms(<div></div>)\t\n\n\t\t\tf = q.map((el, i) => {\n\t\t\t\tlet response = null\n\t\t\t\t// console.log(i)\n\t\t\t\tr.forEach((res) => {\n\t\t\t\t\tif (el.questionId === res.responseId) {\n\t\t\t\t\t\tresponse = res.data.answer\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\n\t\t\t\t\t\t// console.log(res.data)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\n\t\t\t})\n\t\t\tsetForms(f)\n\t\t}\n\t\tif (props.task.id) {\n\t\t\tgetData()\n\t\t}\n\t}, [props.task.id])\n    \n    const returnAnswer = (answer, index) => {\n\t\tconst tmp = answers\n\t\ttmp[index] = answer\n\t\tsetAnswers(tmp)\n\t\t// console.log(answers)\n\t}\n\n\tconst handlePending = () => {\n\t\tupdateReviewStatus('pending')\n\t\tgetReviewStatus()\n\t}\n\n\tconst handlePassed = () => {\n\t\tupdateReviewStatus('passed')\n\t\tgetReviewStatus()\n\t}\n\n\tconst handleNotPassed = () => {\n\t\tupdateReviewStatus('not passed')\n\t\tgetReviewStatus()\n\t}\n\n\tconst handleVerified = () => {\n\t\tupdateReviewStatus('verified')\n\t\tgetReviewStatus()\n\t}\n\n\tconst handleNotVerified = () => {\n\t\tupdateReviewStatus('not verified')\n\t\tgetReviewStatus()\n\t}\n\t\n\tconst updateReviewStatus = async (review_status) => {\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\n\t}\n    \n    // console.log('TEST')\n    // console.log(tasks)\n\n\tgetUserInfo()\n\treturn (\n\t\t<Grid style={{ padding: 30 }}>\n\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\n\t\t\t\t\tPENDING\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\n\t\t\t\t\tPASSED\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\n\t\t\t\t\tNOT PASSED\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\n\t\t\t\t\tVERIFIED\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\n\t\t\t\t\tNOT VERIFIED\n\t\t\t\t</Button>\n            </Grid>\n\n\t\t\t<Grid container justify = \"center\">\n                <UserCard userInfo={userInfo}> </UserCard>\n            </Grid>\n\n            {forms}\n            \n\n\t\t\t</Grid>\n\t);\n}\n\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\nimport ModeratedTask from './ModeratedTask'\nimport Grid from \"@material-ui/core/Grid\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport {List} from \"immutable\"\n\nconst rowsPP = 1;\n\nconst PaginatedTasks= props => {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\n    const [dataSlice, setDataSlice] = useState([]);\n\n    const calculateSlice = (pageNumber, rowsPage, data) => {\n        const iData = List(data)\n        const numberOfPages = Math.floor(iData.size / rowsPage);\n        console.log(\"numberOfPages\", numberOfPages);\n        const start = pageNumber * rowsPage;\n        let end = iData.size\n        if (pageNumber !== numberOfPages - 1) {\n            end = (pageNumber + 1) * rowsPage;\n        }\n        console.log(\"Start\", start);\n        console.log(\"End\", end);\n        return data.slice(start, end)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event) => {\n        // setPage(0);\n        // setRowsPerPage(event.target.value);\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\n    };\n\n    useEffect(() => {\n        // Update the document title using the browser API\n        setPage(0)\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\n    }, [props.data]);\n\n\n    const pagination = props.data.length > 0 && (\n        <Grid container justify = \"center\">\n        <TablePagination\n            justify=\"center\"\n            component=\"div\"\n            count={props.data.length}\n            page={page}\n            onChangePage={handleChangePage}\n            rowsPerPage={rowsPerPage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            labelRowsPerPage = 'По одной задаче на страницу!'\n        /></Grid>)\n\n\n    // console.log('PAGINATION')\n    // console.log(dataSlice)\n\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\n    return (\n        <div>\n            {pagination}\n            <Grid\n                container\n                spacing={0}\n                direction=\"column\"\n                alignItems=\"center\"\n                justify=\"center\"\n                style={{minHeight: '100vh'}}>\n\n                <Grid item xs={12}>\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\n                       \n                            {isAllowedToRenderTask\n                                ? <Grid item>\n                                    <ModeratedTask \n                                        task={dataSlice[0]}\n                                        users={props.users}                                      \n                                    ></ModeratedTask>\n                                </Grid>\n                                : 'Выберите и примените фильтры!'\n                            }\n\n\n                    </Grid>\n                </Grid>\n\n            </Grid>\n            {pagination}\n        </div>\n    )\n\n}\n\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../../util/Firebase'\n\nimport Form from '../form/form'\nimport { Button, Grid, Typography } from '@material-ui/core';\n\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\n\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst TasksObserver = (props) => {\n\n    // console.log('TEST FUNCT')\n    // console.log(props)\n\n    //TODO load from SCHEMA\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \n\n    //TODO load from SCHEMA        \n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1', 'Задание № 2.2', 'Задание № 2.3', 'Задание 3.1', 'Задание 3.2', 'Задание 3.3']  \n\n    //TODO load from SCHEMA        \n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\n\n    const [tasks, setTasks] = React.useState([]);\n    const [user, setUser] = React.useState('ВСЕ');\n    const [users, setUsers] = React.useState([]);\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\n\n    const setTaskTypeHandler = (event) => {\n        setTaskType(event.target.value); \n    };\n\n    const setTaskTitleHandler = (event) => {\n        setTaskTitle(event.target.value); \n    };\n\n    const setUserHandler = (event) => {\n        setUser(event.target.value); \n    };\n\n    const setTaskReviewStatusHandler = (event) => {\n        setTaskReviewStatus(event.target.value); \n    };    \n\n    const handleClickApplyFilters = (event) => {\n\n        getTasks()\n\n      }\n\n    \n    const getUsers = async () => {\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\n        await usersRef.get().then(docs => {\n            docs.forEach(doc => {\n                usersList.push({id: doc.id, ...doc.data()})\n            })\n\n            setUsers(usersList)\n        })\n    }\n\n    const getTasks = async () => {\n        let tasksList = []\n        let tasksRef = firebase.firestore().collection('tasks')\n\n        // console.log('USER ID')\n        // console.log(user)\n\n        if(user != 'ВСЕ'){\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\n        }\n\n        if(taskTitle != 'ВСЕ'){\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\n        }\n\n        if(taskType != 'ВСЕ'){\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\n        }\n\n        if(taskReviewStatus != 'ВСЕ'){\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\n        }\n\n        await tasksRef.get().then(docs => {\n            docs.forEach(doc => {\n                tasksList.push({id: doc.id, ...doc.data()})\n            })\n\n            setTasks(tasksList)\n        })\n    }\n\n    useEffect(() => {        \n        getUsers()        \n    }, [])   \n    \n    // console.log('USERS')\n    // console.log(users)\n\n\treturn (\n        <div>\n            <Grid container justify = \"center\">\n                <FormControl style={{width:'350px'}}>\n                <NativeSelect\n                    value={user.value}\n                    onChange={setUserHandler}\n                    name=\"filterUser\"\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\n                >\n                    {\n                        users.map(userInfo => (\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\n                    ))\n                    }\n                </NativeSelect>\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\n                </FormControl>\n            </Grid>\n\n            <Grid container justify = \"center\">\n                <FormControl style={{width:'350px'}}>\n                <NativeSelect\n                    value={taskTitle}\n                    onChange={setTaskTitleHandler}\n                    name=\"filterTaskTitle\"\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\n                >\n                    {\n                        taskTitles.map(taskTitle => (\n                        <option value={taskTitle}>{taskTitle}</option>\n                    ))\n                    }\n                </NativeSelect>\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\n                </FormControl>\n            </Grid>\n\n            <Grid container justify = \"center\">\n                <FormControl style={{width:'350px'}}>\n                <NativeSelect\n                    value={taskType}\n                    onChange={setTaskTypeHandler}\n                    name=\"filterTaskType\"\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\n                >\n                    {\n                        taskTypes.map(taskType => (\n                        <option value={taskType}>{taskType}</option>\n                    ))\n                    }\n                </NativeSelect>\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\n                </FormControl>\n            </Grid>\n\n            <Grid container justify = \"center\">\n                <FormControl style={{width:'350px'}}>\n                <NativeSelect\n                    value={taskReviewStatus}\n                    onChange={setTaskReviewStatusHandler}\n                    name=\"filterReviewStatus\"\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\n                >\n                    {\n                        taskReviewStatuses.map(taskReviewStatus => (\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\n                    ))\n                    }\n                </NativeSelect>\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\n                </FormControl>\n            </Grid>\n\n            <Grid container justify = \"center\">\n                <Button\n                    style={{width:'350px'}}\n                    type ='number'\n                    variant=\"contained\"\n                    onClick={handleClickApplyFilters}\n                    color= 'primary'\n                    //className={classes.button}\n                    startIcon={<SearchIcon />}\n                >\n                    Применить фильтры\n                </Button>\n            </Grid>\n\n            <Grid container justify = \"center\">\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\n            </Grid>\n        </div>\n\t);\n}\n\nexport default TasksObserver","import React, { useContext } from 'react'\nimport { signInWithGoogle } from '../../util/Firebase'\nimport { Button, Grid, Typography } from '@material-ui/core'\nimport { AuthContext } from '../../util/Auth';\nimport { Redirect } from 'react-router';\n\n\nconst Signin = () => {\n    const { currentUser } = useContext(AuthContext);\n    if (currentUser) {\n        return <Redirect to={'/'} />;\n    }\n    return (\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\n            <br />\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\n        </Grid>\n    )\n}\n\nexport default Signin","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const {currentUser} = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={routeProps =>\n        !!currentUser ? (\n          <RouteComponent {...routeProps} />\n        ) : (\n          <Redirect to={\"/signin\"} />\n        )\n      }\n    />\n  );\n};\n\n\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        border: '2px grey solid',\n        padding: '0px 10px',\n        margin: 10,\n        background: 'yellow',\n\t\twidth: 700,\n        [theme.breakpoints.down(\"sm\")]: {\n            maxWidth: 300\n        }\n    },\n    button: {\n        background: 'orange',\n        margin: '10px 0'\n    }\n\n}));\n\n\nconst BasicTextFields = forwardRef((props, ref) => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState('');\n\n    const { title, sendAnswer, taskId, questionId } = props\n\n    const handleChange = (event) => {\n        setValue(event.target.value)\n    };\n\n    return (\n        <div className={classes.root}>\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\n            </Box>\n            <TextField\n                label=\"Мой ответ\"\n                value={value}\n                style={{ background: 'white' }}\n                onChange={handleChange}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                fullWidth\n            />\n            <Grid container justify=\"flex-end\">\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\n            </Grid>\n\n        </div>\n    );\n})\n\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\nimport firebase from '../../util/Firebase'\n\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\n\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport Card from './Card'\n\n\nconst useStyles = makeStyles((theme) => ({\n    select: {\n        margin: '20px 0',\n        width: 500,\n        [theme.breakpoints.down(\"sm\")]: {\n            maxWidth: 300\n        }\n    },\n\n}));\n\nconst FAQ = (props) => {\n\n    // console.log('TEST FUNCT')\n    // console.log(props)\n\n    //TODO load from SCHEMA\n    const classes = useStyles();\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\n\n\n    const [tasks, setTasks] = React.useState([]);\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\n    const [questions, setQuestions] = useState([])\n\n    const setTaskTypeHandler = (event) => {\n        setTaskType(event.target.value);\n    };\n\n    const handleClickApplyFilters = async (event) => {\n        let tasklist = await getTasks()\n        getQuestions(tasklist)\n    }\n\n    const getTasks = async () => {\n        let tasksList = []\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\n\n        if (taskType !== 'ВСЕ') {\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\n        }\n        console.log('fired')\n        await tasksRef.get().then(docs => {\n            docs.forEach(doc => {\n                tasksList.push({ id: doc.id, ...doc.data() })\n            })\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\n            setTasks(tasksList)\n        })\n        return tasksList\n    }\n\n    const getQuestions = async (taskList) => {\n        let questionList = await taskList.map(async task => {\n            let arr = []\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\n                snap.forEach(doc => {\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\n                })\n            })\n            return arr\n        })\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\n    }\n\n    const sendAnswer = (taskId, questionId, answer) => {\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\n        console.log(taskId, answer)\n    }\n\n\n    return (\n        <Grid container justify=\"center\">\n            <Grid container justify=\"center\">\n                <FormControl className={classes.select}>\n                    <NativeSelect\n                        value={taskType}\n                        onChange={setTaskTypeHandler}\n                        name=\"filterTaskType\"\n                    >\n                        {\n                            taskTypes.map((taskType, i) => (\n                                <option key={taskType} value={taskType}>{taskType}</option>\n                            ))\n                        }\n                    </NativeSelect>\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\n                </FormControl>\n            </Grid>\n\n            <Grid container justify=\"center\" className={classes.select}>\n                <Button\n                    style={{ width: '350px' }}\n                    type='number'\n                    variant=\"contained\"\n                    onClick={handleClickApplyFilters}\n                    color='primary'\n                    //className={classes.button}\n                    startIcon={<SearchIcon />}\n                >\n                    Применить фильтры\n                </Button>\n            </Grid>\n\n            <Grid container justify=\"center\">\n                {questions\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default FAQ","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Redirect, useHistory } from 'react-router';\nimport { Box, Grid } from '@material-ui/core';\nimport firebase from \"../../util/Firebase\";\nimport { v4 as uuidv4 } from 'uuid';\nimport {CircularProgress} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tminWidth: 250\n\t},\n\tbullet: {\n\t\tdisplay: 'inline-block',\n\t\tmargin: '0 2px',\n\t},\n\ttitle: {\n\t\tfontSize: 14,\n\t},\n\tpos: {\n\t\tmarginBottom: 12,\n\t},\n});\n\nconst JSchemaTaskCard = (props) => {\n\tconst classes = useStyles();\n\tconst history = useHistory();\n\tconst { complete, id, cardColor, cardType, stage, stageID, task, user, pCase } = props\n\n\tconst [waiting, setWaiting] = useState(false)\n\tconst [newTaskId, setNewTaskId] = useState(null)\n\n\tconst handleOpen = () => {\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\n\t\t\tsendCallbackRequest()\n\t\t} else {\n\t\t\thistory.push(\"/t/\" + id)\n\t\t\t//setRedirect(true)\n\t\t}\n\t}\n\n\tconst sendCallbackRequest = () => {\n\t\tsetWaiting(true)\n\t\tlet callback = \"\"\n\t\tlet callbackType = \"\"\n\t\tlet callbackName = \"\"\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\n\t\t\tcallback = uuidv4()\n\t\t\tcallbackType = \"callbackId\"\n\t\t\tcallbackName = \"callbackId\"\n\t\t} else if (cardType === \"selectable\") {\n\t\t\tcallback = id\n\t\t\tcallbackName = \"taskId\"\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\n\t\t}\n\t\tfirebase.firestore()\n\t\t\t.collection(\"task_requests\")\n\t\t\t.doc(user.uid)\n\t\t\t.collection(\"requests\")\n\t\t\t.add({\n\t\t\t\tstatus: \"pending\",\n\t\t\t\tuser: user.uid,\n\t\t\t\tcase_type: pCase,\n\t\t\t\tcase_stage_id: stageID,\n\t\t\t\t[callbackName]: callback\n\t\t\t}).then((doc) => {\n\t\t\tconst unsubscribe = firebase.firestore()\n\t\t\t\t.collection(\"tasks\")\n\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\n\t\t\t\t.where(callbackType, \"==\", callback)\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tif (change.type === \"added\") {\n\t\t\t\t\t\t\tif (change.doc.id) {\n\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\n\t\t\t\t\t\t\t\t//setRedirect(true)\n\t\t\t\t\t\t\t\tunsubscribe()\n\t\t\t\t\t\t\t\thistory.push(\"/t/\" + change.doc.id)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t})\n\t}\n\n\treturn (\n\t\t<Card key={id} className={classes.root} style={{background: cardColor}}>\n\t\t\t<CardContent>\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n\t\t\t\t\t<Typography variant=\"h6\">\n\t\t\t\t\t\t{stage.title}\n\t\t\t\t\t</Typography>\n\t\t\t\t\t{complete && <Typography color=\"error\">\n\t\t\t\t\t\tСдано\n\t\t\t\t\t</Typography>}\n\t\t\t\t</Box>\n\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\n\t\t\t\t\t#{id}\n\t\t\t\t</Typography>\n\t\t\t\t<Typography variant=\"body2\" component=\"p\">\n\t\t\t\t\t{(cardType===\"selectable\" && task && task.cardData) ?\n\t\t\t\t\t\tJSON.stringify(task.cardData, null, 2)\n\t\t\t\t\t\t:\n\t\t\t\t\t\t\"Задание: \" + stage.description}\n\t\t\t\t</Typography>\n\t\t\t</CardContent>\n\t\t\t<CardActions>\n\t\t\t\t{waiting ?\n\t\t\t\t\t<CircularProgress/>\n\t\t\t\t\t:\n\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>{(cardType === \"creatableUnlim\") ? \"СОЗДАТЬ НОВУЮ ФОРМУ\" : \"Открыть\"}</Button>\n\t\t\t\t}\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\n\nexport default JSchemaTaskCard","import React, {useEffect, useState} from \"react\";\nimport firebase from \"firebase\";\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\nimport {cloneDeep} from \"lodash\";\n\n\nconst Loader = props => {\n    const [fileBeingUploaded, setFileBeingUploaded] = useState({})\n    //const [storedFiles, setStoredFiles] = useState({})\n\n    // useEffect(() => {\n    //     props.filesLinks.onSnapshot(doc => {\n    //         setStoredFiles(doc.data().contents)\n    //     });\n    // }, [props.filesLinks])\n\n\n    const upload = async files => {\n        await Promise.all(files.map(async file => {\n            const snap = props.storageRef.child(file.name).put(file)\n            setFileBeingUploaded(prevState => {\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\n                return prevState ? {...prevState, ...update} : update\n            })\n\n            // Listen for state changes, errors, and completion of the upload.\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n                snapshot => {\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    setFileBeingUploaded(prevState => {\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\n                        return prevState ? {...prevState, ...update} : update\n                    })\n                    console.log('Upload is ' + progress + '% done');\n\n                    switch (snapshot.state) {\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\n                            console.log('Upload is paused');\n                            break;\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\n                            console.log('Upload is running');\n                            break;\n                    }\n                }, error => {\n\n                    // A full list of error codes is available at\n                    // https://firebase.google.com/docs/storage/web/handle-errors\n                    switch (error.code) {\n                        case 'storage/unauthorized':\n                            // User doesn't have permission to access the object\n                            break;\n\n                        case 'storage/canceled':\n                            // User canceled the upload\n                            break;\n\n                        default:\n                            // Unknown error occurred, inspect error.serverResponse\n                            break;\n                    }\n                }, () => {\n                    // Upload completed successfully, now we can get the download URL\n                    snap.snapshot.ref.getDownloadURL().then(async downloadURL => {\n                        await props.filesLinks.set({contents: {[downloadURL]: {name: file.name, url: downloadURL}}},\n\t\t\t\t\t{merge: true})\n                        setFileBeingUploaded(prevState => {\n                            const newState = Object.assign({}, prevState)\n                            delete newState[file.name]\n                            return newState\n                        })\n                        console.log('File available at', downloadURL);\n                    });\n                });\n\n            // let url = await snap.ref.getDownloadURL()\n            // let url_wo_token = url.split(\"?\")[0]\n            // console.log(\"File uploaded: \", url)\n            // //await uploadFilesData(file.name, url_wo_token, key)\n        }));\n    }\n\n    const handleChange = (event) => {\n        console.log(\"Files selected: \", [...event.target.files,])\n        upload([...event.target.files])\n    };\n\n\n    return (\n        <div>\n            <input\n                type=\"file\"\n                onChange={handleChange}\n                multiple\n            />\n            {Object.keys(fileBeingUploaded).map(filename =>\n                <div key={filename}>\n                    <p>{filename}</p>\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>\n                </div>\n\n            )}\n            {/*{storedFiles ? <p>Сохраненные файлы</p> : <p></p>}*/}\n            {/*{Object.keys(storedFiles).map(fileUrl =>*/}\n            {/*    <div key={fileUrl}>*/}\n            {/*        <a href={fileUrl}>{storedFiles[fileUrl].name}</a>*/}\n            {/*    </div>*/}\n            {/*)}*/}\n        </div>\n    );\n}\n\nexport default Loader","import firebase from \"../../util/Firebase\";\nimport Loader from \"./Loader\";\nimport React, { useState } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst CustomFileUpload = props => {\n\tconsole.log(\"All props: \", props)\n\tconsole.log(\"ID: \", props.taskID)\n\tconsole.log(\"Question ID: \", props.name)\n\tconsole.log(\"User UID: \", props.currentUserUid)\n\n\tconst [connectingTelegram, setConnectingTelegram] = useState(false)\n\tconst [telegramConnected, setTelegramConnected] = useState(false)\n\n\tlet pathToFolder = null\n\tlet handleTgConnectClick = null\n\tif (!props.disabled) {\n\t\tpathToFolder = firebase\n\t\t\t.storage()\n\t\t\t.ref(props.taskID)\n\t\t\t.child(props.name)\n\t\t\t.child(props.currentUserUid)\n\n\t\thandleTgConnectClick = async () => {\n\t\t\tsetConnectingTelegram(true)\n\t\t\tawait firebase\n\t\t\t\t.firestore()\n\t\t\t\t.collection(\"users\")\n\t\t\t\t.doc(props.currentUserUid)\n\t\t\t\t.set({fileUpload: props.taskID + \"/\" + props.name }, {merge: true})\n\t\t\tsetConnectingTelegram(false)\n\t\t\tsetTelegramConnected(true)\n\n\t\t}\n\t}\n\tconst linksToFiles = firebase\n\t\t.firestore()\n\t\t.collection(\"tasks\")\n\t\t.doc(props.taskID)\n\t\t.collection(\"responses\")\n\t\t.doc(props.name)\n\n\tconsole.log(\"Props formData: \", props.formData)\n\n\treturn (\n\t\t<div>\n\t\t\t{props.schema.title ? <div>{props.schema.title}</div> : <div></div>}\n\t\t\t{props.schema.description ? <div>{props.schema.description}</div> : <div></div>}\n\t\t\t{props.disabled ? null :\n\t\t\t\t<div>\n\t\t\t\t\t<Loader storageRef={pathToFolder}\n\t\t\t\t\t\t\tfilesLinks={linksToFiles}/>\n\t\t\t\t\t{connectingTelegram ?\n\t\t\t\t\t\t<CircularProgress/>\n\t\t\t\t\t\t:\n\t\t\t\t\t\ttelegramConnected ?\n\t\t\t\t\t\t\t<div>Вы можете начать загрузку файлов через бота. Все файлы, отправляемые боту, будут сохраняться здесь. После загрузки файлов через бот, не забудьте вернуться сюда и нажать \"ОТПРАВИТЬ\". <a href=\"https://t.me/journal_tg_bot\">Перейти в бот.</a></div>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>Вы так же можете загрузить сюда файлы через Телеграм-бота. Для этого нажмите кнопку ниже: </p>\n\t\t\t\t\t\t\t\t<button onClick={handleTgConnectClick}>Загрузка через бот</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t}\n\t\t\t{props.formData ?\n\t\t\t\t<div>\n\t\t\t\t\t{Object.keys(props.formData).map(path =>\n\t\t\t\t\t\t<div key={path}>\n\t\t\t\t\t\t\t<a href={props.formData[path].url}>{props.formData[path].name}</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<div></div>\n\t\t\t}\n\n\t\t</div>\n\t);\n}\n\nexport default CustomFileUpload\n\n","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\nimport { AuthContext } from \"../../util/Auth\";\nimport { Redirect, useParams } from 'react-router';\nimport Box from \"@material-ui/core/Box\";\nimport {Grid, Typography} from \"@material-ui/core\";\nimport PropTypes from \"prop-types\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TaskCard from \"../Tasks/JSchemaCard\";\nimport { cloneDeep } from \"lodash\"\nimport CustomFileUpload from \"../form/CustomFileUpload\";\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\n\nfunction TabPanel(props) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\n\nconst useStyles = makeStyles({\n    root: {\n        paddingTop: 30,\n        flexGrow: 1\n    },\n});\n\nconst Page = () => {\n    const { currentUser } = useContext(AuthContext);\n\tconst { id } = useParams();\n\n\tconst classes = useStyles()\n\n\tconst [pageData, setPageData] = useState({})\n    const [userRanks, setUserRanks] = useState([])\n    const [userCases, setUserCases] = useState({})\n    const [allCases, setAllCases] = useState({})\n    const [userTasks, setUserTasks] = useState({})\n    const [filteredStages, setFilteredStages] = useState({})\n    //const [unlimStages, setUnlimStages] = useState({})\n    const [tabValue, setTabValue] = useState(0)\n    const [availableStages, setAvailableStages] = useState({})\n    const [bgStages, setBgStages] = useState({})\n    const [filterFormData, setFilterFormData] = useState({})\n    const [availableTasks, setAvailableTasks] = useState({})\n    const [userRanksDescriptions, setUserRanksDescriptions] = useState({})\n    const [filterSettings, setFilterSettings] = useState(()=>{})\n\n\n\tuseEffect(() => {\n\t\tconsole.log(\"Page id: \", id)\n        console.log(\"Current user: \", currentUser)\n        let unsubscribe = () => {}\n        if (currentUser) {\n            unsubscribe = firebase\n                .firestore()\n                .collection('pages')\n                .doc(id)\n                .onSnapshot(doc => {\n                    setPageData(doc.data())\n                    console.log(\"Page data: \", doc.data())\n                })\n        }\n        return unsubscribe\n    }, [currentUser, id])\n\n    useEffect(() => {\n\t\tconsole.log(\"Page id: \", id)\n        console.log(\"Current user: \", currentUser)\n        let unsubscribe = () => {}\n        if (currentUser && pageData && pageData.ranks) {\n            unsubscribe = firebase\n                .firestore()\n                .collection('users')\n                .doc(currentUser.uid)\n                .collection(\"user_private\")\n                .doc(\"private\")\n                .onSnapshot(doc => {\n                    setUserRanks(intersection(doc.data().ranks, pageData.ranks))\n                    console.log(\"User ranks: \", doc.data().ranks)\n                })\n        }\n        return unsubscribe\n    }, [currentUser, id, pageData])\n\n\n    useEffect(() => {\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0) {\n            const casesPath = firebase.firestore()\n                .collection(\"schema\")\n                .doc(\"structure\")\n                .collection(\"cases\")\n\n            pageData.cases.map(pCase => {\n                casesPath.doc(pCase)\n                    .collection(\"stages\")\n                    .where(\"ranks_write\", \"array-contains-any\", userRanks)\n                    .onSnapshot(snapshot => {\n                        complexStateFirebaseUpdate(snapshot, setUserCases, pCase)\n                    })\n\n                casesPath.doc(pCase)\n                    .collection(\"stages\")\n                    .onSnapshot(snapshot => {\n                        complexStateFirebaseUpdate(snapshot, setAllCases, pCase)\n                    })\n\n\n            })\n\n            firebase.firestore()\n                .collection(\"tasks\")\n                .where(\"assigned_users\", \"array-contains\", currentUser.uid)\n                .where(\"case_type\", \"in\", pageData.cases)\n                .onSnapshot(snapshot => {\n                    simpleStateFirebaseUpdate(snapshot, setUserTasks)\n                })\n\n            if (pageData.caseWithSelectableTasks) {\n                casesPath.doc(pageData.caseWithSelectableTasks)\n                    .collection(\"stages\")\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\n                    .onSnapshot(snapshot => {\n                        simpleStateFirebaseUpdate(snapshot, setAvailableStages)\n                    })\n\n                casesPath.doc(pageData.caseWithSelectableTasks)\n                    .collection(\"stages\")\n                    .onSnapshot(snapshot => {\n                        simpleStateFirebaseUpdate(snapshot, setBgStages)\n                    })\n\n                firebase.firestore()\n                    .collection(\"tasks\")\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\n                    .where(\"assigned_users\", \"==\", [])\n                    .where(\"available\", \"==\", true)\n                    .where(\"is_complete\", \"==\", false)\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\n                    .orderBy('created_date', 'desc')\n                    .limit(25)\n                    .onSnapshot(snapshot => {\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\n                    })\n            }\n        }\n    }, [currentUser, pageData, userRanks, id])\n\n\n    useEffect(() => {\n        let fs = () => {}\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0 && pageData.caseWithSelectableTasks) {\n\n            if (filterFormData && filterFormData.region && filterFormData.region.region){\n                setAvailableTasks({})\n                fs = firebase.firestore()\n                    .collection(\"tasks\")\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\n                    .where(\"assigned_users\", \"==\", [])\n                    .where(\"available\", \"==\", true)\n                    .where(\"is_complete\", \"==\", false)\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\n                    .where(\"cardData.emergency_form_filling.region.region\", \"==\", filterFormData.region.region)\n                    .orderBy('created_date', 'desc')\n                    .limit(25)\n                    .onSnapshot(snapshot => {\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\n                    })\n\n            } else {\n                setAvailableTasks({})\n                 fs = firebase.firestore()\n                    .collection(\"tasks\")\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\n                    .where(\"assigned_users\", \"==\", [])\n                    .where(\"available\", \"==\", true)\n                    .where(\"is_complete\", \"==\", false)\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\n                    .orderBy('created_date', 'desc')\n                    .limit(25)\n                    .onSnapshot(snapshot => {\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\n                    })\n            }\n        }\n        return (fs)\n    }, [currentUser, pageData, userRanks, id, filterFormData])\n\n    const complexStateFirebaseUpdate = (snapshot, setFunction, subState) => {\n        snapshot.docChanges().forEach(change => {\n            if (change.type === \"added\" || change.type === \"modified\") {\n                setFunction(prevState => {\n                    const newState = Object.assign({}, prevState)\n                    if (!newState[subState]) {\n                        newState[subState] = {}\n                    }\n                    newState[subState][change.doc.id] = change.doc.data()\n                    console.log(\"User stages: \", newState)\n                    return newState\n                })\n            }\n            if (change.type === \"removed\") {\n                setFunction(prevState => {\n                    const newState = Object.assign({}, prevState)\n                    delete newState[subState][change.doc.id]\n                    return newState\n                })\n            }\n        })\n    }\n\n    const simpleStateFirebaseUpdate = (snapshot, setFunction) => {\n        snapshot.docChanges().forEach(change => {\n            if (change.type === \"added\" || change.type === \"modified\") {\n                setFunction(prevState => (\n                    {...prevState, [change.doc.id]: change.doc.data()}\n                ))\n            }\n            if (change.type === \"removed\") {\n                setFunction(prevState => {\n                    const newState = Object.assign({}, prevState)\n                    delete newState[change.doc.id]\n                    return newState\n                })\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (Object.keys(userCases).length > 0) {\n            const newFilteredStages = cloneDeep(userCases)\n            //let newUnlimStages = {}\n            Object.keys(userCases).map(caseID => {\n                Object.keys(userCases[caseID]).map(stageId => {\n                    const stage = userCases[caseID][stageId]\n                    if (stage.ranks_write &&\n                        Object.keys(stage.ranks_write).length > 0 &&\n                        intersection(stage.ranks_write, userRanks).length > 0 &&\n                        \"creatable\" in stage &&\n                        stage.creatable) {\n                        if (stage.rank_limit_number && Object.keys(stage.rank_limit_number).length > 0) {\n                            const setIntersection = intersection(Object.keys(stage.rank_limit_number), userRanks)\n                            if (setIntersection.length > 0) {\n                                const maxTasksPerStage = calculatemaxTasksPerStage(setIntersection, stage.rank_limit_number)\n                                const tasksPerStage = countTasksPerStage(stageId, userTasks)\n                                console.log(\"caseID: \", caseID)\n                                console.log(\"stageId: \", stageId)\n                                console.log(\"maxTasksPerStage: \", maxTasksPerStage)\n                                console.log(\"tasksPerStage: \", tasksPerStage)\n                                // if (tasksPerStage >= maxTasksPerStage) {\n                                //     console.log(\"newFilteredStages: \", newFilteredStages)\n                                //     delete newFilteredStages[caseID][stageId]\n                                //     console.log(\"newFilteredStages after delete: \", newFilteredStages)\n                                // }\n                                if (tasksPerStage >= maxTasksPerStage) {\n                                    console.log(\"newFilteredStages: \", newFilteredStages)\n                                    delete newFilteredStages[caseID][stageId]\n                                    console.log(\"newFilteredStages after delete: \", newFilteredStages)\n                                }\n                                console.log(\"userCases: \", userCases)\n                            }\n                        }\n                    } else {\n                        delete newFilteredStages[caseID][stageId]\n                    }\n                })\n            })\n            setFilteredStages(newFilteredStages)\n            //setUnlimStages(newUnlimStages)\n        }\n    }, [currentUser, userCases, userTasks, id])\n\n\n    const countTasksPerStage = (stage, tasks) => {\n\t    let occurrences = 0\n        Object.values(tasks).map(task => {\n            if (task.case_stage_id === stage) {\n                occurrences++\n            }\n        })\n        return occurrences\n    }\n\n    const calculatemaxTasksPerStage = (rArray, limits) => {\n        let largestLimit = 0\n        rArray.map(v => {\n            if (limits[v] > largestLimit) {\n                largestLimit = limits[v]\n            }\n        })\n        return largestLimit\n    }\n\n    const intersection = (arrA, arrB) => {\n\t    const setA = new Set(arrA)\n        const setB = new Set(arrB)\n        let _intersection = new Set()\n        for (let elem of setB) {\n            if (setA.has(elem)) {\n                _intersection.add(elem)\n            }\n        }\n        return [..._intersection]\n    }\n\n    useEffect(() => {\n        if (userRanks.length > 0) {\n            firebase.firestore()\n                .collection(\"schema\")\n                .doc(\"structure\")\n                .collection(\"ranks\")\n                .where(firebase.firestore.FieldPath.documentId(), \"in\", userRanks)\n                .onSnapshot(snapshot => {\n                    snapshot.docChanges().forEach(change => {\n                        if (change.type === \"added\" || change.type === \"modified\") {\n                            setUserRanksDescriptions(prevState => {\n                                return {...prevState, [change.doc.id]: change.doc.data()}\n                            })\n                        }\n                        if (change.type === \"removed\") {\n                            setUserRanksDescriptions(prevState => {\n                                const newState = Object.assign({}, prevState)\n                                delete newState[change.doc.id]\n                                return newState\n                            })\n                        }\n                    })\n                })\n        }\n    }, [userRanks])\n\n    const displayTasks = (tasks, stages, cases, cardType, complete) => {\n        const displayedTasks = Object.keys(tasks).map(taskId => {\n            const caseType = tasks[taskId].case_type\n            const stageId = tasks[taskId].case_stage_id\n\n            let stage = false\n\n            if (stages) {\n                if (stages[stageId]) {\n                    stage = stages[stageId]\n                }\n            } else if (cases && cases[caseType] && cases[caseType][stageId]) {\n                stage = cases[caseType][stageId]\n            }\n\n            if (stage && tasks[taskId].is_complete === complete) {\n                console.log(\"TASKS: \", tasks[taskId])\n                console.log(\"userStages: \", userCases)\n                return <Grid key={taskId} style={{padding: 10}}>\n                    <TaskCard\n                        stage={stage}\n                        stageID={stageId}\n                        cardType={cardType}\n                        task={tasks[taskId]}\n                        user={currentUser}\n                        pCase={caseType}\n                        id={taskId}/>\n                </Grid>\n            }\n        })\n        return displayedTasks\n    }\n\n    const showFilters = (stages, bgStages, formData, handleFormChange) => {\n        if (Object.keys(stages).length === 1 &&\n            stages[Object.keys(stages)[0]] &&\n            stages[Object.keys(stages)[0]].filters &&\n            Object.keys(stages[Object.keys(stages)[0]].filters).length > 0 &&\n            Object.keys(bgStages).length > 0\n        ) {\n            const stageID = Object.keys(stages)[0]\n            const stage = stages[stageID]\n            const filters = stage.filters\n            const formQuestions = {properties: {}}\n            let formUI = {}\n            Object.keys(filters).forEach(stageFilter => {\n                Object.keys(filters[stageFilter]).forEach(filterQuestion => {\n                    formQuestions.properties[filterQuestion] = bgStages[stageFilter].end.properties[filterQuestion]\n                    console.log(\"bgStages: \", bgStages)\n                    formUI[filterQuestion] = bgStages[stageFilter].end_ui_schema[filterQuestion]\n                })\n            })\n            return (\n                <JSchemaForm\n                    schema={formQuestions}\n                    uiSchema={formUI}\n                    formData={formData}\n                    onChange={e => {\n\t\t\t\t\t\t\thandleFormChange(e)\n\t\t\t\t\t\t}}\n                > </JSchemaForm>\n            )\n        } else return null\n    }\n\n    const handleFilterFormChange = (e) => {\n\t    setFilterFormData(e.formData)\n        console.log(\"FilterFormChange: \", e.formData)\n    }\n\n\n    const handleTabChange = (event, newValue) => {\n        setTabValue(newValue);\n    };\n\n\n    return (<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\n        {/*{console.log(\"pageData: \", pageData)}*/}\n        {/*{console.log(\"userRanks: \", userRanks)}*/}\n        {/*{console.log(\"userCases: \", userCases)}*/}\n        {/*{console.log(\"userTasks: \", userTasks)}*/}\n        {/*{console.log(\"filteredStages: \", filteredStages)}*/}\n        {/*{console.log(\"availableStages: \", availableStages)}*/}\n        {/*{console.log(\"availableTasks: \", availableTasks)}*/}\n\n        {/* <Grid>\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\n\t\t\t</Grid> */}\n        {Object.keys(userRanksDescriptions).length > 0 ? userRanks.map(rank => (\n            <Typography variant=\"h5\" key={rank}>{userRanksDescriptions[rank].description}</Typography>\n        ))\n        : null}\n        <div className={classes.root}>\n            {/*{Object.keys(unlimStages).map(pCase => (*/}\n            {/*    Object.keys(unlimStages[pCase]).map(stage => (*/}\n            {/*        <Grid key={pCase + stage} style={{padding: 10}}>*/}\n            {/*            <TaskCard complete={false}*/}\n            {/*                      stage={unlimStages[pCase][stage]}*/}\n            {/*                      stageID={stage}*/}\n            {/*                      user={currentUser}*/}\n            {/*                      pCase={pCase}*/}\n            {/*                      cardType = \"creatableUnlim\"/>*/}\n            {/*        </Grid>*/}\n            {/*    ))*/}\n            {/*))}*/}\n            <Paper position=\"static\" color=\"default\">\n\n                <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\" centered\n                      aria-label=\"simple tabs example\">\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\n                    <Tab label=\"Выполненные\" {...a11yProps(1)}/>\n                    {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\n                        <Tab label=\"Доступные\" {...a11yProps(2)}/>\n                        :\n                        null}\n\n                    {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\n                </Tabs>\n            </Paper>\n        </div>\n\n        <TabPanel value={tabValue} index={0}>\n            {Object.keys(filteredStages).map(pCase => (\n                Object.keys(filteredStages[pCase]).map(stage => (\n                    <Grid key={pCase + stage} style={{padding: 10}}>\n                        <TaskCard complete={false}\n                                  stage={filteredStages[pCase][stage]}\n                                  stageID={stage}\n                                  user={currentUser}\n                                  pCase={pCase}\n                                  cardType = \"creatable\"/>\n                    </Grid>\n                ))\n            ))}\n            {displayTasks(userTasks, false, allCases, \"selected\", false)}\n        </TabPanel>\n\n        <TabPanel value={tabValue} index={1}>\n            {displayTasks(userTasks, false, allCases, \"selected\", true)}\n        </TabPanel>\n\n        {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\n        <TabPanel value={tabValue} index={2}>\n            {console.log(\"availableTasks: \", availableTasks)}\n            {showFilters(availableStages, bgStages, filterFormData, handleFilterFormChange)}\n            {displayTasks(availableTasks, availableStages, false, \"selectable\", false)}\n        </TabPanel>\n        :\n        null}\n        {/* <TabPanel value={value} index={2}>\n                быстрые задания\n            </TabPanel>*/}\n    </Grid>)\n}\n\nexport default Page","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\nimport { AuthContext } from \"../../util/Auth\";\n\n//import Form from \"../form/form\"\nimport Dialog from \"../Dialog/Dialog\"\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\nimport Feedback from \"../form/feedback\"\n\nimport Loader from \"../form/Loader\"\nimport CustomFileUpload from \"../form/CustomFileUpload\";\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\nimport { cloneDeep, isEqual } from 'lodash'\n\n\nimport { Redirect, useParams, useHistory } from 'react-router';\nimport { Link } from \"react-router-dom\";\n\n\nconst JSchemaTask = () => {\n\tconst [formResponses, setFormResponses] = useState({})\n\tconst [taskForm, setTaskForm] = useState({})\n\tconst [mergedForm, setMergedForm] = useState({})\n\tconst [taskMetadata, setTaskMetadata] = useState({})\n\tconst [caseStages, setCaseStages] = useState({})\n\tconst [backgroundTasks, setBackgroundTasks] = useState({})\n\tconst [backgroundTaskForms, setBackgroundTaskForms] = useState({})\n\tconst [mergedBackgroundForms, setMergedBackgroundForms] = useState({})\n\tconst [backgroundResponses, setBackgroundResponses] = useState({})\n\tconst [currentFocus, setCurrentFocus] = useState(\"\")\n\tconst [gRef, setGRef] = useState(null)\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\n\n\tconst [questions, setQuestions] = useState([])\n\tconst [responses, setResponses] = useState([])\n\tconst [answers, setAnswers] = useState({})\n\tconst [forms, setForms] = useState([])\n\tconst [uploaded, setUploaded] = useState(false)\n\tconst [redirect, setRedirect] = useState(false)\n\tconst [userData, setUserData] = useState({})\n\tconst [lockButton, setLock] = useState(false)\n\tconst [caseTasks, setCaseTasks] = useState([])\n\tconst [dialogState, setDialog] = useState(false)\n\tconst [dialogType, setDialogType] = useState(null)\n\tconst [feedbackValue, setFeedback] = useState({})\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\n\tconst [files, setFiles] = useState({})\n\tconst [uploading, setUploading] = useState(false)\n\n\tconst { currentUser } = useContext(AuthContext);\n\tconst { id } = useParams();\n\tconst history = useHistory();\n\n\tconst handleCloseSnackbar = (event, reason) => {\n\t\tif (reason === 'clickaway') {\n\t\t\treturn;\n\t\t}\n\n\t\tsetOpenSnackbar(false);\n\t};\n\n\t// const uploadsRef = useRef();\n\n\tuseEffect(() => {\n\t\tif (currentUser && id) {\n\n\t\t\tconst ref = firebase\n\t\t\t\t.firestore()\n\t\t\t\t.collection(\"tasks\")\n\t\t\t\t.doc(id)\n\n\t\t\tsetGRef(ref)\n\n\t\t\tref.onSnapshot(doc => {\n\t\t\t\tsetTaskMetadata(doc.data())\n\t\t\t\tif (doc.data().is_complete) {\n\t\t\t\t\tsetFormStatus(\"sent\")\n\t\t\t\t}\n\n\t\t\t\tif (! doc.data().assigned_users.includes(currentUser.uid)) {\n\t\t\t\t\tsetFormStatus(\"released\")\n\t\t\t\t}\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\n\t\t\t});\n\n\t\t\tref.collection(\"responses\")\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tconst changes = {}\n\t\t\t\t\tconst deletes = []\n\t\t\t\t\tlet modifyResponses = false\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\n\t\t\t\t\t\t\tmodifyResponses = true\n\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\n\t\t\t\t\t\t\tmodifyResponses = true\n\t\t\t\t\t\t\t//}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (modifyResponses) {\n\t\t\t\t\t\tsetFormResponses(prevState => {\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\n\t\t\t\t\t\t\treturn newState\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\tref.collection(\"questions\")\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\n\t}, [id, currentUser])\n\n\tuseEffect( () => {\n\t\tif (Object.entries(taskMetadata).length > 0) {\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\n\t\t\tfirebase.firestore()\n\t\t\t\t.collection(\"schema\")\n\t\t\t\t.doc(\"structure\")\n\t\t\t\t.collection(\"cases\")\n\t\t\t\t.doc(taskMetadata.case_type)\n\t\t\t\t.collection(\"stages\")\n\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\n\t\t\t\t\t\t\t\treturn newState\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t}\n\t}, [taskMetadata.case_type])\n\n\tuseEffect(() => {\n\t\tconst mergedBgForms = {}\n\t\tconsole.log(\"Bg tasks: \", backgroundTasks)\n\t\tObject.keys(backgroundTasks).map(taskId => {\n\t\t\tconst stage = backgroundTasks[taskId].case_stage_id\n\t\t\tif (! mergedBgForms[stage]) {\n\t\t\t\tmergedBgForms[stage] = {}\n\t\t\t}\n\t\t\tmergedBgForms[stage][taskId] = mergeForm(backgroundTaskForms[taskId],\n\t\t\t\tcaseStages[stage])\n\t\t})\n\t\tconsole.log(\"Merged bg forms: \", mergedBgForms)\n\t\tsetMergedBackgroundForms(mergedBgForms)\n\t}, [backgroundTasks, backgroundTaskForms, caseStages])\n\n\tuseEffect(() => {\n\t\tif (Object.keys(mergedForm).length > 0 && formStatus === \"loading\") {\n\t\t\tsetFormStatus(\"ready\")\n\t\t}\n\t}, [formResponses, mergedForm])\n\n\tuseEffect(() => {\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\n\t}, [taskForm, taskMetadata, caseStages])\n\n\tuseEffect(() => {\n\n\t\tif (Object.keys(caseStages).length > 0 && Object.keys(taskMetadata).length > 0 && caseStages[taskMetadata.case_stage_id]) {\n\t\t\tconsole.log(\"caseStages: \", caseStages)\n\t\t\tconsole.log(\"taskMetadata: \", taskMetadata)\n\t\t\tconst backgroundTasksList = caseStages[taskMetadata.case_stage_id].backgroundStages\n\t\t\tif (backgroundTasksList && backgroundTasksList.length > 0) {\n\t\t\t\tconsole.log(\"backgroundTasksList: \", backgroundTasksList.length)\n\t\t\t\tfirebase.firestore()\n\t\t\t\t\t.collection(\"tasks\")\n\t\t\t\t\t.where(\"case_id\", \"==\", taskMetadata.case_id)\n\t\t\t\t\t.where(\"case_stage_id\", \"in\", backgroundTasksList)\n\t\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\t\tconsole.log(\"Background task: \", change.doc.data())\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\n\t\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\n\t\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\n\t\t\t\t\t\t\t\t\treturn newState\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, [caseStages, taskMetadata])\n\n\tuseEffect(() => {\n\t\tif (Object.entries(backgroundTasks).length > 0) {\n\t\t\tObject.keys(backgroundTasks).map(key => {\n\t\t\t\tfirebase.firestore()\n\t\t\t\t\t.collection(\"tasks\")\n\t\t\t\t\t.doc(key)\n\t\t\t\t\t.collection(\"questions\")\n\t\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\t\tsetBackgroundTaskForms(prevState => {\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data()\n\t\t\t\t\t\t\t\t\treturn newState\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\tfirebase.firestore()\n\t\t\t\t\t.collection(\"tasks\")\n\t\t\t\t\t.doc(key)\n\t\t\t\t\t.collection(\"responses\")\n\t\t\t\t\t.onSnapshot(snapshot => {\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\n\t\t\t\t\t\t\t\t\tif (! newState[key]) {\n\t\t\t\t\t\t\t\t\t\tnewState[key] = {}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data().contents\n\t\t\t\t\t\t\t\t\treturn newState\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\n\t\t\t\t\t\t\t\t\tdelete newState[key][change.doc.id]\n\t\t\t\t\t\t\t\t\treturn newState\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t\t}\n\t}, [backgroundTasks])\n\n\t// useEffect( () => {\n\t// \tsetMergedQuestions(mergeQuestions([caseStages[taskMetadata.case_stage_id]]))\n\t// }, [caseStages, taskQuestions])\n\n\t// useEffect(() => {\n\t// \tconst timer = setTimeout(() => {\n\t// \t\tif (formResponsesChanged) {\n\t// \t\t\tfirebase\n\t// \t\t\t\t.firestore()\n\t// \t\t\t\t.collection(\"tasks\")\n\t// \t\t\t\t.doc(id)\n\t// \t\t\t\t.collection(\"responses\")\n\t// \t\t\t\t.doc(\"form_responses\")\n\t// \t\t\t\t.set(formResponses)\n\t// \t\t\t\t.then(docRef => {\n\t// \t\t\t\t\tsetFormResponsesChanged(false);\n\t// \t\t\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\n\t// \t\t\t\t})\n\t// \t\t\t\t.catch(error => console.error(\"Error setting document: \", error));\n\t// \t\t}\n\t// \t}, AUTOSAVE_INTERVAL);\n\t// \treturn () => clearTimeout(timer);\n\t// }, [formResponsesChanged, formResponses]);\n\n\n\tconst handleFormChange = e => {\n\t\tsetFormResponses(e.formData)\n\t};\n\n\t// const handleBlur = e => {\n\t// \tif (gRef) {\n\t// \t\tconsole.log(\"Responses: \", formResponses)\n\t// \t\tconsole.log(\"That is what was blured\", e)\n\t// \t\tif (e === \"root\") {\n\t// \t\t\tconsole.log(\"e from first option when trigger is root\", e)\n\t// \t\t\tObject.keys(formResponses).map(k => {\n\t// \t\t\t\tgRef.collection(\"responses\")\n\t// \t\t\t\t\t.doc(k)\n\t// \t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\n\t// \t\t\t\t\t\t{merge: true})\n\t// \t\t\t})\n\t// \t\t} else {\n\t// \t\t\tconsole.log(\"e from second option when trigger is not root\", e)\n\t// \t\t\tconst docID = e.split(\"_\")[1]\n\t// \t\t\tgRef.collection(\"responses\")\n\t// \t\t\t\t.doc(docID)\n\t// \t\t\t\t.set({contents: formResponses[docID] ? formResponses[docID] : firebase.firestore.FieldValue.delete()},\n\t// \t\t\t\t\t{merge: true})\n\t// \t\t}\n\t// \t}\n\t// }\n\n\tconst handleBlur = e => {\n\t\tif (gRef) {\n\t\t\tconsole.log(\"Responses: \", formResponses)\n\t\t\tconsole.log(\"That is what was blured\", e)\n\n\t\t\tObject.keys(formResponses).map(k => {\n\t\t\t\tgRef.collection(\"responses\")\n\t\t\t\t\t.doc(k)\n\t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\n\t\t\t\t\t\t{merge: true})\n\t\t\t})\n\t\t}\n\t}\n\n\tconst mergeForm = (taskForm, caseForms) => {\n\t\tconst tForm = Object.assign({}, taskForm)\n\t\tconst cForms = Object.assign({}, caseForms)\n\n\t\tcForms.start = cForms.start ? cForms.start : {}\n\t\tcForms.end = cForms.end ? cForms.end : {}\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\n\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\n\n\n\t\tconst properties = {\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\n\t\t}\n\n\t\tconst definitions = {\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\n\t\t}\n\n\t\tlet title = \"\"\n\t\tif (tForm.form_questions.title) {\n\t\t\ttitle = tForm.form_questions.title\n\t\t} else if (cForms.end.title) {\n\t\t\ttitle = cForms.end.title\n\t\t} else if (cForms.start.title) {\n\t\t\ttitle = cForms.start.title}\n\n\t\tlet description = \"\"\n\t\tif (tForm.form_questions.description) {\n\t\t\tdescription = tForm.form_questions.description\n\t\t} else if (cForms.end.description) {\n\t\t\tdescription = cForms.end.description\n\t\t} else if (cForms.start.description) {\n\t\t\tdescription = cForms.start.description}\n\n\t\tconst required = [...new Set([\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\n\t\t\t...(cForms.start.required ? cForms.start.required : [])\n\t\t])]\n\n\t\tconst uiOrder = [...new Set([\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\n\t\t\t...(tForm.ui_schema[\"ui:order\"]\t ? tForm.ui_schema[\"ui:order\"] : []),\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\n\t\t])]\n\n\t\tlet uiSchema = {\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\n\t\t}\n\n\t\tuiSchema = {...uiSchema, ...{\"ui:order\": uiOrder}}\n\n\t\tconst form = {\n\t\t\tproperties: properties,\n\t\t\tdefinitions: definitions,\n\t\t\ttitle: title,\n\t\t\tdescription: description,\n\t\t\trequired: required\n\t\t}\n\t\treturn {form_questions: form, ui_schema: uiSchema}\n\n\t}\n\n\n\t// useEffect(() => {\n\t// \tconst getQuestions = async (taskID) => {\n\t// \t\tlet q = []\n\t//\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\n\t// \t\t\t.then((querySnapshot) => {\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\n\t// \t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\n\t// \t\t\t\t});\n\t// \t\t\t})\n\t// \t\t\t.catch((error) => {\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t// \t\t\t});\n\t//\n\t// \t\treturn q\n\t// \t}\n\t//\n\t//\n\t// \tconst getResponses = async (taskID) => {\n\t// \t\tlet r = []\n\t//\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\n\t// \t\t\t.then((querySnapshot) => {\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\n\t// \t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\n\t// \t\t\t\t});\n\t// \t\t\t})\n\t// \t\t\t.catch((error) => {\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\n\t// \t\t\t});\n\t//\n\t// \t\treturn r\n\t// \t}\n\t//\n\t//\n\t// \tconst getSameCaseTasks = async () => {\n\t// \t\tlet sameCaseTasks = []\n\t//\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\n\t// \t\t\treturn doc.data()\n\t// \t\t}).then(async data => {\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\n\t// \t\t\t\tsnap.forEach(doc => {\n\t// \t\t\t\t\tif (doc.id !== id) {\n\t// \t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\n\t// \t\t\t\t\t}\n\t// \t\t\t\t})\n\t// \t\t\t})\n\t// \t\t})\n\t// \t\treturn sameCaseTasks\n\t// \t}\n\t//\n\t// \tconst getForms = async () => {\n\t// \t\tlet f = []\n\t// \t\tlet locked = true\n\t//\n\t// \t\tsetForms(null)\n\t//\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\n\t// \t\t\tif (doc.data().status === 'complete') {\n\t// \t\t\t\tlocked = true\n\t// \t\t\t\tsetLock(true)\n\t// \t\t\t}\n\t// \t\t\telse {\n\t// \t\t\t\tlocked = false\n\t// \t\t\t}\n\t// \t\t})\n\t//\n\t// \t\tlet sq = []\n\t// \t\tlet sr = []\n\t//\n\t// \t\tlet sameCaseTasks = await getSameCaseTasks()\n\t// \t\tsetCaseTasks(sameCaseTasks)\n\t// \t\tif (sameCaseTasks.length > 0) {\n\t// \t\t\tlet ques = sameCaseTasks.map(t => {\n\t// \t\t\t\treturn getQuestions(t.id)\n\t// \t\t\t})\n\t// \t\t\tlet resp = sameCaseTasks.map(t => {\n\t// \t\t\t\treturn getResponses(t.id)\n\t// \t\t\t})\n\t// \t\t\tconsole.log(ques)\n\t// \t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\n\t// \t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\n\t//\n\t// \t\t\tconsole.log(sq)\n\t// \t\t\tconsole.log(sr)\n\t// \t\t}\n\t//\n\t// \t\tlet sf = sq.map((el, i) => {\n\t// \t\t\tlet response = null\n\t// \t\t\tsr.forEach((res) => {\n\t// \t\t\t\tif (el.questionId === res.responseId) {\n\t// \t\t\t\t\tresponse = res.data.answer\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\n\t// \t\t\t\t}\n\t// \t\t\t})\n\t// \t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\n\t// \t\t})\n\t//\n\t// \t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\n\t//\n\t//\n\t// \t\tlet q = await getQuestions(id)\n\t// \t\tlet r = await getResponses(id)\n\t//\n\t//\n\t// \t\tsetQuestions(q)\n\t// \t\tsetResponses(r)\n\t//\n\t//\n\t// \t\t// let newQ = sq.concat(q)\n\t// \t\t// let newR = sr.concat(r)\n\t//\n\t// \t\tf = q.map((el, i) => {\n\t// \t\t\tlet response = null\n\t// \t\t\tr.forEach((res) => {\n\t// \t\t\t\tif (el.questionId === res.responseId) {\n\t// \t\t\t\t\tresponse = res.data.answer\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\n\t// \t\t\t\t}\n\t// \t\t\t})\n\t// \t\t\treturn (\n\t// \t\t\t\t<Form\n\t// \t\t\t\t\tkey={el.questionId + '_' + i}\n\t// \t\t\t\t\tquestion={el.data}\n\t// \t\t\t\t\tindex={i}\n\t// \t\t\t\t\tresponse={response}\n\t// \t\t\t\t\treturnFile={returnFile}\n\t// \t\t\t\t\treturnAnswer={returnAnswer}\n\t// \t\t\t\t\tid={el.questionId}\n\t// \t\t\t\t\tlocked={locked}\n\t// \t\t\t\t\t// ref={uploadsRef}\n\t// \t\t\t\t\tuploadFilesData={uploadFilesData} />\n\t// \t\t\t)\n\t// \t\t})\n\t//\n\t// \t\tlet newF = sf.concat(f)\n\t// \t\tsetForms(newF)\n\t// \t}\n\t// \tif (currentUser) {\n\t// \t\tgetForms()\n\t// \t}\n\t// }, [currentUser, id, lockButton])\n\t//\n\t//\n\t// const returnAnswer = (answer, index) => {\n\t// \tconst tmp = answers\n\t// \ttmp[index] = answer\n\t// \tsetAnswers(tmp)\n\t// }\n\t//\n\t// const returnFile = (file, questionId) => {\n\t// \tlet arr = [...file]\n\t// \tlet tmp = files\n\t// \ttmp[questionId] = arr\n\t// \tsetFiles(tmp)\n\t// \tconsole.log([...file], questionId)\n\t// }\n\t//\n\t// const upload = async () => {\n\t// \t// uploadsRef.current.startUpload()\n\t// \tif (Object.keys(files).length > 0) {\n\t// \t\tconsole.log('files')\n\t// \t\tsetUploading(true)\n\t// \t\tfor (const [key, value] of Object.entries(files)) {\n\t// \t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\n\t// \t\t\tawait Promise.all(value.map(async v => {\n\t// \t\t\t\tlet snap = await ref.child(v.name).put(v)\n\t// \t\t\t\tlet url = await snap.ref.getDownloadURL()\n\t// \t\t\t\tlet url_wo_token = url.split(\"?\")[0]\n\t// \t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\n\t// \t\t\t}));\n\t// \t\t}\n\t// \t\tsetUploaded(true)\n\t// \t\tsetUploading(false)\n\t// \t}\n\t// }\n\t//\n\t// const saveQuestionFeedback = (data, questionId, previousTaskId) => {\n\t// \tif (previousTaskId) {\n\t// \t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\n\t// \t\t\t.add({\n\t// \t\t\t\tanswer: data.reason,\n\t// \t\t\t\ttext: data.text,\n\t// \t\t\t\tuser_id: currentUser.uid,\n\t// \t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\n\t// \t\t\t})\n\t// \t\t\t.then(() => setOpenSnackbar(true))\n\t// \t}\n\t// \telse {\n\t// \t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\n\t// \t}\n\t// }\n\t//\n\t// const saveToFirebase = async (lock) => {\n\t// \tawait upload()\n\t// \tquestions.forEach(async (q, i) => {\n\t// \t\tif (answers[i] || answers[i] === \"\") {\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\n\t// \t\t}\n\t// \t})\n\t//\n\t// \tif (lock) {\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\n\t// \t\tsetLock(true)\n\t// \t\tconsole.log(\"Task Locked\")\n\t// \t\tsetDialog(false)\n\t// \t}\n\t// }\n\t//\n\t// const uploadFilesData = async (filename, url, questionId) => {\n\t// \tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\n\t// \tconsole.log(\"Файл отправлен\")\n\t// \tif (filename && url) {\n\t// \t\trootRef.set(\n\t// \t\t\t{\n\t// \t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\n\t// \t\t\t}, { merge: true }\n\t// \t\t).then(() => console.log('super'))\n\t// \t}\n\t// };\n\t//\n\tconst handleDialogClose = () => {\n\t\tsetDialog(false);\n\t\t//setFeedback({})\n\t};\n\n\tconst handleOk = () => {\n\t\tsetDialog(false)\n\t\thistory.goBack()\n\t};\n\n\tconst handleDialogOpen = (type) => {\n\t\tconsole.log(\"Dialog open\")\n\t\tif (type === 'send') {\n\t\t\tsetDialogType('send')\n\t\t\tsetDialog(true)\n\t\t}\n\t\tif (type === 'release') {\n\t\t\tsetDialogType('release')\n\t\t\tsetDialog(true)\n\t\t}\n\t}\n\n\t// useEffect(() => {\n\t// \tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\n\t// \t\tsetReleaseFeedbackData(doc.data())\n\t// \t})\n\t// }, [])\n\t//\n\t// const releaseTask = () => {\n\t// \tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\n\t// \t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\n\t// \t\t\t.then(() => {\n\t// \t\t\t\tsetDialog(false)\n\t// \t\t\t\tsetLock(true)\n\t// \t\t\t}))\n\t// \t// alert(feedbackValue)\n\t// }\n\t//\n\t// const handleFeedbackSave = (value) => {\n\t// \tsetFeedback(value)\n\t// }\n\n\tconst changeTaskStatus = (status) => {\n\t\tfirebase.firestore()\n\t\t\t.collection(\"tasks\")\n\t\t\t.doc(id)\n\t\t\t.collection(\"user_editable\")\n\t\t\t.doc(\"user_editable\")\n\t\t\t.update({ status: status })\n\t}\n\n\treturn (\n\t\tcurrentUser ?\n\t\t\t<Grid style={{ padding: 30 }}>\n\t\t\t\t{dialogType === 'send' && <Dialog\n\t\t\t\t\tstate={dialogState}\n\t\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\t\thandleOk={handleOk}\n\t\t\t\t\tshowOk={formStatus === \"sent\"}\n\t\t\t\t\ttitle={formStatus === \"sent\" ? \"Форма успешно отправлена.\" : \"Отправить форму?\"}\n\t\t\t\t\tcontent={formStatus === \"sent\" ? \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\n\t\t\t\t\tdialogFunction={()=>{changeTaskStatus('complete')}} />}\n\n\t\t\t\t\t{dialogType === 'release' && <Dialog\n\t\t\t\t\tstate={dialogState}\n\t\t\t\t\thandleClose={handleDialogClose}\n\t\t\t\t\thandleOk={handleOk}\n\t\t\t\t\tshowOk={formStatus === \"released\"}\n\t\t\t\t\ttitle={formStatus === \"released\" ? \"Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.\" : \"Освободить форму?\"}\n\t\t\t\t\tcontent={formStatus === \"released\" ? \"Спасибо\" : \"Вы собираетесь ОСВОБОДИТЬ форму. Ваши изменения не сохранятся и форма будет передана другому пользователю.\"}\n\t\t\t\t\tdialogFunction={()=>{changeTaskStatus('released')}} />}\n\n\t\t\t\t{/*{dialogType === 'release' && <DialogFeedback*/}\n\t\t\t\t{/*\tstate={dialogState}*/}\n\t\t\t\t{/*\tfeedbackValue={feedbackValue}*/}\n\t\t\t\t{/*\thandleClose={handleDialogClose}*/}\n\t\t\t\t{/*\ttitle={releaseFeedbackData.title}*/}\n\t\t\t\t{/*\tdialogFunction={releaseTask}*/}\n\t\t\t\t{/*\tanswers={releaseFeedbackData.answers}*/}\n\t\t\t\t{/*\tdescription={releaseFeedbackData.description}*/}\n\t\t\t\t{/*\treturnFeedback={handleFeedbackSave} />}*/}\n\t\t\t\t{/*{redirect && <Redirect to=\"/tasks\" />}*/}\n\t\t\t\t{/*<Snackbar*/}\n\t\t\t\t{/*\tanchorOrigin={{*/}\n\t\t\t\t{/*\t\tvertical: 'bottom',*/}\n\t\t\t\t{/*\t\thorizontal: 'left',*/}\n\t\t\t\t{/*\t}}*/}\n\t\t\t\t{/*\topen={openSnackbar}*/}\n\t\t\t\t{/*\tautoHideDuration={6000}*/}\n\t\t\t\t{/*\tonClose={handleCloseSnackbar}*/}\n\t\t\t\t{/*\tmessage=\"Фидбек отправлен\"*/}\n\t\t\t\t{/*\taction={*/}\n\t\t\t\t{/*\t\t<React.Fragment>*/}\n\t\t\t\t{/*\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>*/}\n\t\t\t\t{/*\t\t\t\t<CloseIcon fontSize=\"small\" />*/}\n\t\t\t\t{/*\t\t\t</IconButton>*/}\n\t\t\t\t{/*\t\t</React.Fragment>*/}\n\t\t\t\t{/*\t}*/}\n\t\t\t\t{/*/>*/}\n\t\t\t\t{/*/!* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} *!/*/}\n\t\t\t\t{/*{forms}*/}\n\t\t\t\t{/*<Grid container style={{ padding: 20 }} justify=\"center\">*/}\n\t\t\t\t{/*\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>*/}\n\t\t\t\t{/*\t{!lockButton &&*/}\n\t\t\t\t{/*\t\t<div>*/}\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>*/}\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>*/}\n\t\t\t\t{/*\n\t\t\t\t{/*\t\t</div>}*/}\n\t\t\t\t{/*</Grid>*/}\n\n\t\t\t\t{/*{console.log(\"Case stages::: \", caseStages)}*/}\n\t\t\t\t{/*{console.log(\"Task metadata::: \", taskMetadata)}*/}\n\t\t\t\t{/*{console.log(\"Merged background forms::: \", mergedBackgroundForms)}*/}\n\n\t\t\t\t{(Object.keys(caseStages).length > 0 &&\n\t\t\t\t\tObject.keys(taskMetadata).length > 0 &&\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id] &&\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages &&\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages.length > 0 &&\n\t\t\t\t\tObject.keys(mergedBackgroundForms).length > 0) ?\n\t\t\t\t\t<Grid style={{padding: 30}}>\n\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].backgroundStages.map(stage => {\n\t\t\t\t\t\t\treturn <div key={stage}>\n\t\t\t\t\t\t\t\t{console.log(\"STAGE: \", stage)}\n\t\t\t\t\t\t\t\t{console.log(\"mergedBackgroundForms: \", mergedBackgroundForms)}\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmergedBackgroundForms[stage] ?\n\t\t\t\t\t\t\t\t\t\t(Object.keys(mergedBackgroundForms[stage]).map(taskId => (\n\t\t\t\t\t\t\t\t\t\t\t<Grid style={{padding: 30}} key={taskId}>\n\t\t\t\t\t\t\t\t\t\t\t\t<JSchemaForm\n\t\t\t\t\t\t\t\t\t\t\t\t\tschema={mergedBackgroundForms[stage][taskId].form_questions}\n\t\t\t\t\t\t\t\t\t\t\t\t\tuiSchema={mergedBackgroundForms[stage][taskId].ui_schema}\n\t\t\t\t\t\t\t\t\t\t\t\t\tformData={backgroundResponses[taskId]}\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields={{customFileUpload: a => CustomFileUpload({...a, ...{taskID: taskId}, ...{\"currentUserUid\": currentUser.uid}})}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\t\t\t\t\t\t\t> </JSchemaForm>\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t\t)))\n\t\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Grid>\n\t\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t\t}\n\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\n\t\t\t\t\t<JSchemaForm\n\t\t\t\t\t\tschema={mergedForm.form_questions}\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\n\t\t\t\t\t\tformData={formResponses}\n\t\t\t\t\t\tfields={{customFileUpload: a => CustomFileUpload({...a, ...{taskID: id}, ...{\"currentUserUid\": currentUser.uid}})}}\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\" }\n\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\thandleFormChange(e)\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonFocus={e => {\n\t\t\t\t\t\t\tconsole.log(\"That is what was focused\", e)\n\t\t\t\t\t\t\tsetCurrentFocus(e.split(\"_\")[1])\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonBlur={e => {\n\t\t\t\t\t\t\thandleBlur(e)\n\t\t\t\t\t\t}}>\n\t\t\t\t\t\t{formStatus === \"sent\" ?\n\t\t\t\t\t\t\t<div>Форма отправлена успешно</div>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\tnull}\n\n\t\t\t\t\t\t{formStatus === \"ready\" ? <div>\n\t\t\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].additionalButtons && caseStages[taskMetadata.case_stage_id].additionalButtons.includes(\"release\") ?\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"} style={{\n\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\t\t\t\t\tborderColor: \"#003366\",\n\t\t\t\t\t\t\t\t\t\tcolor: \"#003366\",\n\t\t\t\t\t\t\t\t\t\tmargin: 5\n\t\t\t\t\t\t\t\t\t}} onClick={() => handleDialogOpen('release')}>Освободить</Button>\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\tnull}\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\n\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\t\t\t\t\t\t\tborderColor: \"red\",\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\n\t\t\t\t\t\t\t\t\t\t\tmargin: 5}}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleDialogOpen('send')}>Отправить</Button>\n\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{formStatus === \"released\" ?\n\t\t\t\t\t\t\t<div>Вы освободили эту форму и больше не можете ее заполнять.</div>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\tnull}\n\t\t\t\t\t</JSchemaForm>\n\t\t\t\t\t\t:\n\t\t\t\t\tnull}\n\n\t\t\t</Grid>\n\t\t\t:\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\n\t\t\t\t<br />\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\n\t\t\t</Grid>\n\t)\n\n}\n\nexport default JSchemaTask","import React, { useState, useContext } from 'react'\nimport { AuthProvider } from \"./util/Auth\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport { AuthContext } from \"./util/Auth\";\n\nimport Grid from '@material-ui/core/Grid'\n\n// import Appbar from './Components/Appbar/Appbar'\n// import Appbar from './Components/Appbar/oldAppBar'\nimport Appbar from './Components/Appbar/newAppBar'\nimport Profile from './Components/Profile/Profile'\nimport Tasks from './Components/Tasks/Tasks'\nimport Task from './Components/Tasks/Task'\nimport Cases from './Components/Cases/Cases';\nimport Notifications from './Components/Notifications/Notifications'\nimport Home from './Components/Home/Home'\nimport TasksObserver from './Components/Moderator/TasksObserver'\nimport Signin from './Components/Auth/Signin';\nimport PrivateRoute from './util/PrivateRoute';\nimport FAQ from './Components/FAQ/FAQ';\nimport Page from \"./Components/Page/Page\";\nimport JSchemaTask from \"./Components/Tasks/JSchemaTask\";\n\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Grid container justify=\"center\">\n        <Appbar>\n          <Switch>\n            <Route exact path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/request\">\n              <Cases />\n            </Route>\n            <Route exact path=\"/tasks\">\n              <Tasks />\n            </Route>\n            <Route path=\"/tasks/:id\">\n              <Task />\n            </Route>\n            <Route path=\"/t/:id\">\n              <JSchemaTask />\n            </Route>\n            <Route exact path=\"/tasksObserver\">\n              <TasksObserver />\n            </Route>\n            <Route exact path=\"/notifications\">\n              <Notifications />\n            </Route>\n            <Route exact path=\"/signin\">\n              <Signin />\n            </Route>\n            <Route exact path=\"/faq\">\n              <FAQ />\n            </Route>\n            <Route path=\"/p/:id\">\n              <Page />\n            </Route>\n            <PrivateRoute path=\"/\" component={Home} />\n          </Switch>\n        </Appbar>\n      </Grid>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthProvider} from './util/Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}