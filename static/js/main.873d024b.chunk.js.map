{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/Appbar.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","background","boxShadow","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","color","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","small","height","formControl","margin","minWidth","withStyles","MuiMenuItem","PersistentDrawerLeft","props","useContext","classes","useTheme","open","setOpen","anchorEl","Boolean","moderator","setModerator","snap","forEach","id","catch","className","CssBaseline","AppBar","position","clsx","Toolbar","style","paddingLeft","paddingRight","IconButton","aria-label","onClick","edge","Grid","container","src","KloopLogo","alt","Button","borderColor","fontSize","variant","size","signOut","Drawer","anchor","paper","direction","Divider","to","BasicTextFields","setValue","index","response","locked","required","Typography","marginBottom","marginTop","title","TextField","label","onChange","event","target","returnAnswer","multiline","rows","disabled","fullWidth","SelectBox","FormControl","InputLabel","Select","labelId","onClose","onOpen","answers","indexOf","MenuItem","map","el","i","RadioButton","const","RadioGroup","name","FormControlLabel","control","Radio","flexWrap","textField","TimePickers","noValidate","type","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","state","setState","ready","setReady","a","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","data","JSON","stringify","key","question","tmp","justify","borderWidth","mergedAnswers","q","update","align","bullet","pos","TaskCard","status","description","language","cardColor","sendRequest","Card","CardContent","CardActions","Tasks","allTasks","setTasks","tasks","where","querySnapshot","push","error","task","Form","AlertDialog","Dialog","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","dialogFunction","autoFocus","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","useParams","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","sq","sr","length","sf","res","newF","concat","getForms","saveToFirebase","lock","handleDialogClose","handleDialogOpen","Case","caseId","reason","sort","b","parseInt","order","task_type","add","taskType","case_type","case_stage_id","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","Paper","border","Box","t","item","Cases","allCases","setCases","cases","c","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","undefined","assigned_users","users","find","getUserInfo","PaginatedTasks","page","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","Math","floor","start","end","slice","pagination","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Home","App","exact","path","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.873d024b.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MuiMenuItem from '@material-ui/core/MenuItem';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        background: 'white',\r\n        boxShadow: 'none',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: 'gray',\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    small: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n}));\r\n\r\nconst MenuItem = withStyles({\r\n    root: {\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})(MuiMenuItem);\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const menuOpen = Boolean(anchorEl);\r\n\r\n    const [moderator, setModerator] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection('editors').get().then((snap) => {\r\n            snap.forEach(doc => {\r\n                if (doc.id === currentUser.uid) {\r\n                    console.log('moderator')\r\n                    setModerator(true)\r\n                }\r\n            })\r\n        }).catch(() => setModerator(false))\r\n    }, [currentUser])\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n        console.log(currentUser)\r\n    }\r\n\r\n    //   const copyToClipboard = (text) => {\r\n    //     let data = JSON.stringify(text)\r\n    //     console.log(data)\r\n    //     navigator.clipboard.writeText(data)\r\n    //   }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar style={{ paddingLeft: 15, paddingRight: 15 }}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Grid container style={{ flexGrow: 1 }}>\r\n                        <img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n                        {/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n                        {/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n                    </Grid>\r\n                    {currentUser\r\n                        ?\r\n                        <div>\r\n                            <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} variant=\"outlined\" size=\"small\" onClick={() => firebase.auth().signOut()}>Выход</Button>\r\n                            {/* <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Avatar src={currentUser.photoURL} className={classes.small} />\r\n                            </IconButton> */}\r\n                            {/* <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={menuOpen}\r\n                                onClose={handleMenuClose}\r\n                            >\r\n                                <Grid container direction=\"column\" alignItems=\"center\" style={{ padding: 10 }}>\r\n                                    <Avatar src={currentUser.photoURL} style={{ marginBottom: 8 }} />\r\n                                    <Typography variant=\"body2\">{currentUser.displayName}</Typography>\r\n                                    <Typography variant=\"body2\">{currentUser.email}</Typography>\r\n                                    <Typography variant=\"body2\">ID: <Typography component=\"span\" variant=\"subtitle2\">{currentUser.uid}</Typography></Typography>\r\n                                </Grid>\r\n                                <MenuItem onClick={() => firebase.auth().signOut()}>Выход</MenuItem>\r\n                            </Menu> */}\r\n                        </div>\r\n                        : <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <Grid>\r\n                    <Button>Профиль</Button>\r\n                </Grid>\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/profile\">Профиль</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/tasks\">Задания</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/request\">Получить задание</Link>\r\n                        </li>\r\n                        {moderator ? <li>\r\n                            <Link to=\"/tasksObserver\">Модератор</Link>\r\n                        </li> : null}\r\n                    </ul>\r\n                </nav>\r\n            </Drawer>\r\n            <main style={{ padding: 0, height: '100%', background: 'transparent' }}\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\r\n\tconst {index, response, required, locked} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 10, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<TextField \r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, status, type, language, description, id, cardColor, sendRequest } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{background: cardColor}}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ? \r\n\t\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect } from 'react-router';\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport TaskCard from './Card'\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n\tconst [allTasks, setTasks] = useState(null)\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tlet tasks = []\r\n\t\t\tconsole.log(\"Fired\")\r\n\t\t\tfirebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tconsole.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\ttasks.push({ id: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetTasks(tasks)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n\t\t\t{/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\t\t\t<Typography variant=\"h4\">Задания</Typography>\r\n\r\n\t\t\t{allTasks && allTasks.map((task, i) => (\r\n\t\t\t\t<Grid key={i} style={{padding: 10}}>\r\n\t\t\t\t\t<TaskCard title={task.data.title} description={task.data.description} type={task.data.type} id={task.id} />\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React from 'react'\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport Text from \"../form/text\"\r\n\r\nconst Form = (props) => {\r\n\r\n    const {question, index, response, returnAnswer, locked} = props \r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title}/>\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tconsole.log(doc.id, '=>', doc.data())\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\r\n\t\t\tconsole.log(\"Fired\")\r\n\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\r\n\t\t\t\tsq = await getQuestions(sameCaseTasks[0].id)\r\n\t\t\t\tsr = await getResponses(sameCaseTasks[0].id)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait questions.forEach(async (q, i) => {\r\n\t\t\tconsole.log(q)\r\n\t\t\tconsole.log(answers[i])\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t\tsetUploaded(true)\r\n\t}\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released' })\r\n\t\tsetDialog(false)\r\n\t\tsetRedirect(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog state={dialogState} handleClose={handleDialogClose} title={\"Отправить задание?\"} content={\"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"} dialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <Dialog state={dialogState} handleClose={handleDialogClose} title={\"Освободить задание?\"} content={\"Вы собираетесь освободить задание. Это значит, что вы больше не сможете к нему вернуться.\"} dialogFunction={releaseTask} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t\t// <div>\r\n\t\t// \t{forms}\r\n\t\t// </div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        tasks.push({ id: doc.id, ...doc.data() })\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n\r\n    useEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tlet cases = []\r\n\t\t\tconsole.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n                console.log(cases)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c,i) => (\r\n                <Case key={i} title={c.title} description={c.description} caseId={c.id} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport Appbar from './Components/Appbar/Appbar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\n\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\n\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>;\r\n}\r\n\r\nconst App = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  return (\r\n      <Router>\r\n        <Grid container justify=\"center\">\r\n          <Appbar>\r\n            <Switch>\r\n              <Route exact path=\"/profile\">\r\n                <Profile />\r\n              </Route>\r\n              <Route exact path=\"/request\">\r\n                <Cases />\r\n              </Route>\r\n              <Route exact path=\"/tasks\">\r\n                <Tasks />\r\n              </Route>\r\n              <Route path=\"/tasks/:id\">\r\n                <Task />\r\n              </Route>\r\n              <Route exact path=\"/tasksObserver\">\r\n                <TasksObserver />\r\n              </Route>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n            </Switch>\r\n          </Appbar>\r\n        </Grid>\r\n      </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthProvider} from './util/Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}