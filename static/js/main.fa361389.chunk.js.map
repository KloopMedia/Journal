{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/LinearProgressWithLabel.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","Components/Tasks/JSchemaCard.js","Components/form/Loader.js","Components/form/CustomFileUpload.js","util/Utilities.js","Components/Page/Page.js","Components/Tasks/JSchemaTask.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","setNumOfMessages","messages","setMessages","userRanks","setUserRanks","userPages","setUserPages","snap","forEach","id","catch","onSnapshot","data","ranks","length","where","snapshot","docChanges","change","type","prevState","unsubscribe","size","m","count","push","sort","a","b","toDate","className","Divider","to","Object","keys","map","page","name","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","message","i","justify","Typography","flex","title","Button","update","shown","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","marginBottom","marginTop","paddingRight","formControl","maxWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","TabPanel","other","role","hidden","p","a11yProps","paddingTop","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","error","Paper","Tabs","newValue","centered","Tab","task","Form","uploadsRef","feedback_type","hideActions","showOk","handleOk","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","uploading","setUploading","useParams","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","storage","child","v","put","getDownloadURL","url","url_wo_token","split","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","CircularProgress","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","Case","caseId","disableCase","setDisable","setMessage","parseInt","order","task_type","taskType","case_type","case_stage_id","border","item","Cases","allCases","setCases","setRanks","getCasesFromFirebase","cases","c","hide","down","dt","setShown","date","opacity","paddingLeft","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","Notification","queryString","require","Home","token","setToken","tgId","setTgId","makeToken","uuid","Date","now","unsubscribeUser","unsubscribeUserPrivate","oldToken","tg_token","oldDate","substring","moment","diff","newToken","tg_id","urlString","parse","location","search","rank","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","assigned_users","users","find","getUserInfo","PaginatedTasks","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","floor","start","end","slice","pagination","TablePagination","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","taskId","select","FAQ","handleClickApplyFilters","tasklist","taskList","questionList","apply","JSchemaTaskCard","cardData","history","useHistory","cardType","stage","stageID","pCase","waiting","setWaiting","sendCallbackRequest","callback","callbackType","callbackName","uuidv4","FieldPath","documentId","showCard","Loader","fileBeingUploaded","setFileBeingUploaded","storageRef","progress","on","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","downloadURL","filesLinks","contents","newState","assign","CustomFileUpload","currentUserUid","connectingTelegram","setConnectingTelegram","telegramConnected","setTelegramConnected","pathToFolder","handleTgConnectClick","fileUpload","linksToFiles","formData","schema","path","complexStateFirebaseUpdate","setFunction","subState","simpleStateFirebaseUpdate","Page","pageData","setPageData","userCases","setUserCases","setAllCases","userTasks","setUserTasks","filteredStages","setFilteredStages","caseData","setCaseData","caseSelector","setCaseSelector","caseSelectorResponse","setCaseSelectorResponse","tabValue","setTabValue","availableStages","setAvailableStages","bgStages","setBgStages","filterFormData","setFilterFormData","availableTasks","setAvailableTasks","userRanksDescriptions","setUserRanksDescriptions","intersection","casesPath","caseWithSelectableTasks","limit","fs","stages","filters","emergency_form_filling","violationType","query","stageFilter","filterQuestion","newFilteredStages","cloneDeep","caseID","stageId","ranks_write","creatable","rank_limit_number","setIntersection","maxTasksPerStage","calculatemaxTasksPerStage","countTasksPerStage","occurrences","values","rArray","limits","largestLimit","arrA","arrB","setA","Set","setB","_intersection","elem","has","createCaseSelectorForm","displayTasks","caseType","properties","request","$ref","definitions","case","enum","default","dependencies","oneOf","k","includes","e","handleFormChange","formQuestions","formUI","endProps","uiSchema","showFilters","JSchemaTask","formResponses","setFormResponses","taskForm","setTaskForm","mergedForm","setMergedForm","taskMetadata","setTaskMetadata","caseStages","setCaseStages","backgroundTasks","setBackgroundTasks","backgroundTaskForms","setBackgroundTaskForms","mergedBackgroundForms","setMergedBackgroundForms","backgroundResponses","setBackgroundResponses","setCurrentFocus","gRef","setGRef","formStatus","setFormStatus","changes","deletes","modifyResponses","mergedBgForms","mergeForm","backgroundTasksList","backgroundStages","caseForms","tForm","cForms","start_ui_schema","end_ui_schema","form_questions","ui_schema","uiOrder","goBack","changeTaskStatus","reasons","extra","releaseFeedback_schema","releaseFeedback_ui","fields","customFileUpload","onFocus","onBlur","delete","handleBlur","additionalButtons","App","exact","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa361389.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n              console.log('User Exist')\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email,\r\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Badge } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: 'white',\r\n\t\tboxShadow: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor: 'black',\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\tconst { window } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst menuOpen = Boolean(anchorEl);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\r\n\tconst [moderator, setModerator] = useState(false)\r\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\r\n\tconst [messages, setMessages] = useState([])\r\n\tconst [userRanks, setUserRanks] = useState([])\r\n\tconst [userPages, setUserPages] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (doc.id === currentUser.uid) {\r\n\t\t\t\t\t\tconsole.log('moderator')\r\n\t\t\t\t\t\tsetModerator(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}).catch(() => setModerator(false))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.collection(\"user_private\")\r\n\t\t\t\t.doc(\"private\")\r\n\t\t\t\t.onSnapshot(doc => {\r\n\t\t\t\t\tif (doc.data()) {\r\n\t\t\t\t\t\tsetUserRanks(doc.data().ranks)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userRanks.length > 0) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", userRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log(\"User pages: \", change.doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [userRanks])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tlet unsubscribe = () => { }\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection('notifications')\r\n\t\t\t\t.where('user_id', 'array-contains', currentUser.uid)\r\n\t\t\t\t.where('shown', '!=', true)\r\n\t\t\t\t.onSnapshot(snap => {\r\n\t\t\t\t\tconsole.log(snap.size)\r\n\t\t\t\t\tlet m = []\r\n\t\t\t\t\tlet count = 0\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\tcount++\r\n\t\t\t\t\t})\r\n\t\t\t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n\t\t\t\t\tsetNumOfMessages(count)\r\n\t\t\t\t\tsetMessages(m)\r\n\t\t\t\t})\r\n\t\t}\r\n\t\treturn () => unsubscribe\r\n\t}, [currentUser])\r\n\r\n\tconst updateFirestoreStatus = (id, index) => {\r\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n\t}\r\n\r\n\tconst handleMenu = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null)\r\n\t}\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/tasks\">Задания</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/request\">Получить задание</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tObject.keys(userPages).map(page => {\r\n\t\t\t\t\t\t\treturn <li key={page}> <Link to={\"/p/\" + page}>\r\n\t\t\t\t\t\t\t\t{userPages[page].name}\r\n\t\t\t\t\t\t\t</Link> </li>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{currentUser &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\topen={menuOpen}\r\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\r\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container key={message.id} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t{currentUser\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span style={{ color: 'black', fontSize: 12, marginLeft: 7 }}>\r\n\t\t\t\t\t\t\t\t{currentUser.email}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\" size=\"small\"\r\n\t\t\t\t\t\t\t\tonClick={() => firebase.auth().signOut()}>\r\n\t\t\t\t\t\t\t\tВыход\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n\t/**\r\n\t * Injected by the documentation to work in an iframe.\r\n\t * You won't need it on your project.\r\n\t */\r\n\twindow: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props) => {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default LinearProgressWithLabel","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 100,\r\n\t\tmaxWidth: 300\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ?\r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, {useState, useEffect, useContext} from 'react'\r\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport TaskCard from './Card'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\n\r\nconst Tasks = (props) => {\r\n    const classes = useStyles()\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [submittedTasks, setSubmitted] = useState(null)\r\n    const [quickTasks, setQuickTasks] = useState(null)\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [value, setValue] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            let submitted = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        if (doc.data().is_complete) {\r\n                            submitted.push({id: doc.id, ...doc.data()})\r\n                        } else {\r\n                            tasks.push({id: doc.id, ...doc.data()})\r\n                        }\r\n\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    setTasks(tasks)\r\n                    setSubmitted(submitted)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n            {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\r\n            {/*<Typography variant=\"h4\">Задания</Typography>*/}\r\n            <div className={classes.root}>\r\n                <Paper position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                          aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\r\n                        <Tab label=\"Выполненные\" {...a11yProps(1)}/>\r\n                        {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                    </Tabs>\r\n                </Paper>\r\n            </div>\r\n            <TabPanel value={value} index={0}>\r\n                {allTasks && allTasks.map((task, i) => (\r\n                    <Grid key={'active_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                {submittedTasks && submittedTasks.map((task, i) => (\r\n                    <Grid key={'submitted_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n           {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n            attachMaterials={question.attachMaterials}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n          {props.hideActions ? \"\" :\r\n              props.showOk ?\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleOk} color=\"primary\">\r\n                          Ok\r\n                      </Button>\r\n                  </DialogActions>\r\n                  :\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleClose} color=\"primary\">\r\n                          Отмена\r\n                      </Button>\r\n                      <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n                          Подтвердить\r\n                      </Button>\r\n                  </DialogActions>}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = async () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tsetUploading(true)\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tawait Promise.all(value.map(async v => {\r\n\t\t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t\t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t\t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t\t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tsetUploaded(true)\r\n\t\t\tsetUploading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait upload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tconsole.log(\"Task Locked\")\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thideActions={uploading || uploaded}\r\n\t\t\t\t\ttitle={uploading ? \"Загрузка файлов\" : uploaded ? \"Файлы загружены\" : \"Отправить задание?\"}\r\n\t\t\t\t\tcontent={uploading ? <CircularProgress /> : uploaded ? \"Спасибо\" : \"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId, userRanks } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // before change\r\n                        //tasks.push({ id: doc.id, ...doc.data() }) \r\n\r\n                        //after change\r\n                        const ranks = doc.data().ranks\r\n                        console.log('RANKS')\r\n                        console.log(ranks)\r\n                        console.log(userRanks)\r\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        // }\r\n                        // else {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\r\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\r\n                        // }\r\n                        tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        \r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n                if (snap.size < 3) {\r\n                    console.log(\"SIZE\", snap.size)\r\n                    setDisable(false)\r\n                }\r\n                else {\r\n                    setDisable(true)\r\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser, disableCase, open])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 0px' }}>\r\n                        {message}\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n    const [userRanks, setRanks] = useState([])\r\n\r\n    // New\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\r\n\r\n                if (doc && doc.exists) {\r\n\r\n                    let ranks = doc.data().ranks\r\n                    console.log(ranks)\r\n                    setRanks(ranks)\r\n                    getCasesFromFirebase(ranks)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    // /////// Old ////////\r\n    // useEffect(() => {\r\n    //     if (currentUser) {\r\n    //         let cases = []\r\n    //         console.log(\"Fired\")\r\n    //         firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n    //             .then((querySnapshot) => {\r\n    //                 querySnapshot.forEach((doc) => {\r\n    //                     cases.push({ id: doc.id, ...doc.data() })\r\n    //                 });\r\n    //             })\r\n    //             .then(() => {\r\n    //                 setCases(cases)\r\n    //                 setReady(true)\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 console.log(\"Error getting documents: \", error);\r\n    //             });\r\n    //     }\r\n    // }, [currentUser])\r\n    // //////////////\r\n\r\n    const getCasesFromFirebase = (ranks) => {\r\n        let cases = []\r\n        console.log(\"Fired\")\r\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.data())\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c, i) => {\r\n                if (c.hide) {\r\n                    return null\r\n                }\r\n                else {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxWidth: 300\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, setShown, shown, date } = props\r\n\r\n\tconst getFormatDate = (dt) => {\r\n\t\t// let month = '' + (d.getMonth() + 1)\r\n\t\t// let day = '' + d.getDate()\r\n\t\t// let year = d.getFullYear()\r\n\r\n\t\t// if (month.length < 2)\r\n\t\t// \tmonth = '0' + month;\r\n\t\t// if (day.length < 2)\r\n\t\t// \tday = '0' + day;\r\n\t\tlet formatDate = `${\r\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\r\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\r\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\r\n\r\n\t\treturn formatDate\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                console.log(messages[0].created_date.toDate())\r\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [tgId, setTgId] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        let unsubscribeUser = () => {}\r\n        let unsubscribeUserPrivate = () => {}\r\n        if (currentUser) {\r\n            unsubscribeUser = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .onSnapshot(doc => {\r\n\r\n                    let oldToken;\r\n                    if (doc.exists && doc.data().tg_token) {\r\n                        oldToken = doc.data().tg_token\r\n                    } else {\r\n                        oldToken = false\r\n                    }\r\n\r\n                    console.log(oldToken)\r\n                    if (oldToken) {\r\n                        console.log(oldToken)\r\n                        let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                        let date = moment().diff(oldDate, 'hours')\r\n                        console.log(date)\r\n                        if (date > 0) {\r\n                            let newToken = makeToken()\r\n                            firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\r\n                            setToken(newToken)\r\n                        } else {\r\n                            setToken(oldToken)\r\n                        }\r\n                    } else {\r\n                        console.log('no token')\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\r\n                        setToken(newToken)\r\n                    }\r\n                })\r\n            unsubscribeUserPrivate = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    console.log(\"TGID: \", doc.data().tg_id)\r\n                    if (doc.exists && \"tg_id\" in doc.data()) {\r\n                        console.log(\"TGID: \", doc.data().tg_id)\r\n                        setTgId(doc.data().tg_id)\r\n                    }\r\n                })\r\n        }\r\n        return () => {\r\n            unsubscribeUser()\r\n            unsubscribeUserPrivate()\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let urlString = queryString.parse(window.location.search)\r\n            if (urlString.rank) {\r\n                console.log(urlString.rank)\r\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log('creating request')\r\n                        firebase.firestore().collection('rank_requests').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            user_id: currentUser.uid,\r\n                            processed: false,\r\n                            rank: doc.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('no rank')\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid>\r\n                <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                    <Link variant=\"h5\" align=\"center\"\r\n                          href={\"https://kloopmedia.github.io/Journal/#/p/elections_monitoring\"}>ФОРМЫ ДЛЯ НАБЛЮДЕНИЯ НА\r\n                        ВЫБОРАХ</Link>\r\n                </Grid>\r\n                {tgId === \"\" ?\r\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                        <Typography style={{paddingBottom: 10}} variant=\"h5\" align=\"center\">Вы можете связать свой\r\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\r\n                        {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на\r\n                                бот</Link>\r\n                            : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд,\r\n                                перезагрузите страницу</Typography>}\r\n                    </Grid>\r\n                    :\r\n                    null}\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{padding: 20}} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\r\n                <br/>\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью\r\n                    аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1', 'Задание № 2.2', 'Задание № 2.3', 'Задание 3.1', 'Задание 3.2', 'Задание 3.3']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useContext } from 'react'\r\nimport { signInWithGoogle } from '../../util/Firebase'\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Signin = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n            <br />\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px grey solid',\r\n        padding: '0px 10px',\r\n        margin: 10,\r\n        background: 'yellow',\r\n\t\twidth: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    button: {\r\n        background: 'orange',\r\n        margin: '10px 0'\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { title, sendAnswer, taskId, questionId } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\r\n            </Box>\r\n            <TextField\r\n                label=\"Мой ответ\"\r\n                value={value}\r\n                style={{ background: 'white' }}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from './Card'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: '20px 0',\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst FAQ = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const classes = useStyles();\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\r\n\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value);\r\n    };\r\n\r\n    const handleClickApplyFilters = async (event) => {\r\n        let tasklist = await getTasks()\r\n        getQuestions(tasklist)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\r\n\r\n        if (taskType !== 'ВСЕ') {\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n        console.log('fired')\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\r\n            setTasks(tasksList)\r\n        })\r\n        return tasksList\r\n    }\r\n\r\n    const getQuestions = async (taskList) => {\r\n        let questionList = await taskList.map(async task => {\r\n            let arr = []\r\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\r\n                })\r\n            })\r\n            return arr\r\n        })\r\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\r\n    }\r\n\r\n    const sendAnswer = (taskId, questionId, answer) => {\r\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\r\n        console.log(taskId, answer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <FormControl className={classes.select}>\r\n                    <NativeSelect\r\n                        value={taskType}\r\n                        onChange={setTaskTypeHandler}\r\n                        name=\"filterTaskType\"\r\n                    >\r\n                        {\r\n                            taskTypes.map((taskType, i) => (\r\n                                <option key={taskType} value={taskType}>{taskType}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" className={classes.select}>\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                {questions\r\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\r\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FAQ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport firebase from \"../../util/Firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst JSchemaTaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { complete, id, cardColor, cardType, stage, stageID, task, user, pCase } = props\r\n\r\n\tconst [waiting, setWaiting] = useState(false)\r\n\tconst [newTaskId, setNewTaskId] = useState(null)\r\n\r\n\tconst handleOpen = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequest()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/t/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOpenOld = () => {\r\n\t\thistory.push(\"/tasks/\" + id)\r\n\t}\r\n\r\n\tconst sendCallbackRequest = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/t/\" + change.doc.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst displayJSON = (cardData) => {\r\n\t\treturn Object.keys(cardData).map(stage => {\r\n\t\t\t// console.log(\"STAGE: \", stage)\r\n\t\t\treturn Object.keys(cardData[stage]).map(response => {\r\n\t\t\t\t// console.log(\"RESPONSE: \", response)\r\n\t\t\t\tif (response === \"attachedFiles\") {\r\n\t\t\t\t\t// console.log(\"FILES: \")\r\n\t\t\t\t\treturn <div key={stage + response}>Files</div>\r\n\t\t\t\t} else return (\r\n\t\t\t\t\t<typography variant=\"body2\" component=\"p\" key={stage + response}>\r\n\t\t\t\t\t\t{/* {console.log(\"TEXT: \", cardData[stage][response])} */}\r\n\t\t\t\t\t\t{JSON.stringify(cardData[stage][response], null, 2)}\r\n\t\t\t\t\t</typography>)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card key={id} className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{stage.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\tСдано\r\n\t\t\t\t\t</Typography>}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t#{id}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t{(task && task.cardData && (cardType === \"selectable\" || (stage && stage.showCard))) ?\r\n\t\t\t\t\t\tdisplayJSON(task.cardData)\r\n\t\t\t\t\t\t//JSON.stringify(task.cardData, null, 2)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\"Задание: \" + stage.description}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t{waiting ?\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>{(cardType === \"creatableUnlim\") ? \"СОЗДАТЬ НОВУЮ ФОРМУ\" : \"Открыть\"}</Button>\r\n\t\t\t\t\t\t{/* <Button size=\"small\" onClick={handleOpenOld}>Открыть (Old)</Button> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t}\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default JSchemaTaskCard","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport {cloneDeep} from \"lodash\";\r\n\r\n\r\nconst Loader = props => {\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState({})\r\n    //const [storedFiles, setStoredFiles] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     props.filesLinks.onSnapshot(doc => {\r\n    //         setStoredFiles(doc.data().contents)\r\n    //     });\r\n    // }, [props.filesLinks])\r\n\r\n\r\n    const upload = async files => {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = props.storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                    console.log('Upload is ' + progress + '% done');\r\n\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                }, error => {\r\n\r\n                    // A full list of error codes is available at\r\n                    // https://firebase.google.com/docs/storage/web/handle-errors\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n                            // User doesn't have permission to access the object\r\n                            break;\r\n\r\n                        case 'storage/canceled':\r\n                            // User canceled the upload\r\n                            break;\r\n\r\n                        default:\r\n                            // Unknown error occurred, inspect error.serverResponse\r\n                            break;\r\n                    }\r\n                }, () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(async downloadURL => {\r\n                        await props.filesLinks.set({contents: {[downloadURL]: {name: file.name, url: downloadURL}}},\r\n\t\t\t\t\t{merge: true})\r\n                        setFileBeingUploaded(prevState => {\r\n                            const newState = Object.assign({}, prevState)\r\n                            delete newState[file.name]\r\n                            return newState\r\n                        })\r\n                        console.log('File available at', downloadURL);\r\n                    });\r\n                });\r\n\r\n            // let url = await snap.ref.getDownloadURL()\r\n            // let url_wo_token = url.split(\"?\")[0]\r\n            // console.log(\"File uploaded: \", url)\r\n            // //await uploadFilesData(file.name, url_wo_token, key)\r\n        }));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files])\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                multiple\r\n            />\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <p>{filename}</p>\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>\r\n                </div>\r\n\r\n            )}\r\n            {/*{storedFiles ? <p>Сохраненные файлы</p> : <p></p>}*/}\r\n            {/*{Object.keys(storedFiles).map(fileUrl =>*/}\r\n            {/*    <div key={fileUrl}>*/}\r\n            {/*        <a href={fileUrl}>{storedFiles[fileUrl].name}</a>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader","import firebase from \"../../util/Firebase\";\r\nimport Loader from \"./Loader\";\r\nimport React, { useState } from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst CustomFileUpload = props => {\r\n\tconsole.log(\"All props: \", props)\r\n\tconsole.log(\"ID: \", props.taskID)\r\n\tconsole.log(\"Question ID: \", props.name)\r\n\tconsole.log(\"User UID: \", props.currentUserUid)\r\n\r\n\tconst [connectingTelegram, setConnectingTelegram] = useState(false)\r\n\tconst [telegramConnected, setTelegramConnected] = useState(false)\r\n\r\n\tlet pathToFolder = null\r\n\tlet handleTgConnectClick = null\r\n\tif (!props.disabled) {\r\n\t\tpathToFolder = firebase\r\n\t\t\t.storage()\r\n\t\t\t.ref(props.taskID)\r\n\t\t\t.child(props.name)\r\n\t\t\t.child(props.currentUserUid)\r\n\r\n\t\thandleTgConnectClick = async () => {\r\n\t\t\tsetConnectingTelegram(true)\r\n\t\t\tawait firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"users\")\r\n\t\t\t\t.doc(props.currentUserUid)\r\n\t\t\t\t.set({fileUpload: props.taskID + \"/\" + props.name }, {merge: true})\r\n\t\t\tsetConnectingTelegram(false)\r\n\t\t\tsetTelegramConnected(true)\r\n\r\n\t\t}\r\n\t}\r\n\tconst linksToFiles = firebase\r\n\t\t.firestore()\r\n\t\t.collection(\"tasks\")\r\n\t\t.doc(props.taskID)\r\n\t\t.collection(\"responses\")\r\n\t\t.doc(props.name)\r\n\r\n\tconsole.log(\"Props formData: \", props.formData)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.schema.title ? <div>{props.schema.title}</div> : <div></div>}\r\n\t\t\t{props.schema.description ? <div>{props.schema.description}</div> : <div></div>}\r\n\t\t\t{props.disabled ? null :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Loader storageRef={pathToFolder}\r\n\t\t\t\t\t\t\tfilesLinks={linksToFiles}/>\r\n\t\t\t\t\t{connectingTelegram ?\r\n\t\t\t\t\t\t<CircularProgress/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\ttelegramConnected ?\r\n\t\t\t\t\t\t\t<div>Вы можете начать загрузку файлов через бота. Все файлы, отправляемые боту, будут сохраняться здесь. После загрузки файлов через бот, не забудьте вернуться сюда и нажать \"ОТПРАВИТЬ\". <a href=\"https://t.me/journal_tg_bot\">Перейти в бот.</a></div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Вы так же можете загрузить сюда файлы через Телеграм-бота. Для этого нажмите кнопку ниже: </p>\r\n\t\t\t\t\t\t\t\t<button onClick={handleTgConnectClick}>Загрузка через бот</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{props.formData ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{Object.keys(props.formData).map(path =>\r\n\t\t\t\t\t\t<div key={path}>\r\n\t\t\t\t\t\t\t<a href={props.formData[path].url}>{props.formData[path].name}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div></div>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CustomFileUpload\r\n\r\n","const complexStateFirebaseUpdate = (snapshot, setFunction, subState) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                if (!newState[subState]) {\r\n                    newState[subState] = {}\r\n                }\r\n                newState[subState][change.doc.id] = change.doc.data()\r\n                // console.log(\"User stages: \", newState)\r\n                return newState\r\n            })\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[subState][change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst simpleStateFirebaseUpdate = (snapshot, setFunction) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => (\r\n                {...prevState, [change.doc.id]: change.doc.data()}\r\n            ))\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate}","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect, useParams } from 'react-router';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TaskCard from \"../Tasks/JSchemaCard\";\r\nimport { cloneDeep } from \"lodash\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport Case from '../Cases/Case'\r\n\r\nimport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate} from \"../../util/Utilities\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\nconst Page = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const { id } = useParams();\r\n\r\n    const classes = useStyles()\r\n\r\n    const [pageData, setPageData] = useState({})\r\n    const [userRanks, setUserRanks] = useState([])\r\n    const [userCases, setUserCases] = useState({})\r\n    const [allCases, setAllCases] = useState({})\r\n    const [userTasks, setUserTasks] = useState({})\r\n    const [filteredStages, setFilteredStages] = useState({})\r\n    const [caseData, setCaseData] = useState({})\r\n    const [caseSelector, setCaseSelector] = useState({})\r\n    const [caseSelectorResponse, setCaseSelectorResponse] = useState({})\r\n    //const [unlimStages, setUnlimStages] = useState({})\r\n    const [tabValue, setTabValue] = useState(0)\r\n    const [availableStages, setAvailableStages] = useState({})\r\n    const [bgStages, setBgStages] = useState({})\r\n    const [filterFormData, setFilterFormData] = useState({})\r\n    const [availableTasks, setAvailableTasks] = useState({})\r\n    const [userRanksDescriptions, setUserRanksDescriptions] = useState({})\r\n    const [filterSettings, setFilterSettings] = useState(() => { })\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Page id: \", id)\r\n        console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('pages')\r\n                .doc(id)\r\n                .onSnapshot(doc => {\r\n                    setPageData(doc.data())\r\n                    console.log(\"Page data: \", doc.data())\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id])\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Page id: \", id)\r\n        // console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser && pageData && pageData.ranks) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    setUserRanks(intersection(doc.data().ranks, pageData.ranks))\r\n                    // console.log(\"User ranks: \", doc.data().ranks)\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id, pageData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0) {\r\n            setUserCases({})\r\n            setUserTasks({})\r\n            setAllCases({})\r\n            setAvailableStages({})\r\n            setAvailableTasks({})\r\n            setBgStages({})\r\n            const casesPath = firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"cases\")\r\n\r\n            pageData.cases.map(pCase => {\r\n                console.log(\"PCASE\", pCase)\r\n                casesPath.doc(pCase).get().then(doc => {\r\n                    setCaseData(prevState => {\r\n                        const newState = Object.assign({}, prevState)\r\n                        newState[doc.id] = doc.data()\r\n                        return newState\r\n                    })\r\n                })\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_write\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setUserCases, pCase)\r\n                    })\r\n\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setAllCases, pCase)\r\n                    })\r\n            })\r\n            console.log(\"ALLCASES\", allCases)\r\n            firebase.firestore()\r\n                .collection(\"tasks\")\r\n                .where(\"assigned_users\", \"array-contains\", currentUser.uid)\r\n                .where(\"case_type\", \"in\", pageData.cases)\r\n                .onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setUserTasks)\r\n                })\r\n\r\n            if (pageData.caseWithSelectableTasks) {\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableStages)\r\n                    })\r\n\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setBgStages)\r\n                    })\r\n\r\n                firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n    }, [currentUser, pageData, userRanks, id])\r\n\r\n\r\n    useEffect(() => {\r\n        let fs = () => { }\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0 && pageData.caseWithSelectableTasks) {\r\n            console.log(\"filtersData\", filterFormData)\r\n            if (Object.keys(filterFormData).length !== 0) {\r\n                const stages = availableStages\r\n                const stageID = Object.keys(stages)[0]\r\n                const stage = stages[stageID]\r\n                const filters = stage.filters\r\n                filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n                filters.emergency_form_filling['violationTime'] = '=='\r\n                console.log(\"filters\", filters)\r\n                console.log(\"filtersData\", filterFormData)\r\n                setAvailableTasks({})\r\n                let collection = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                let query = collection.where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n\r\n                Object.keys(filters).forEach(stageFilter => {\r\n                    Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                        console.log(stageFilter, filterQuestion)\r\n                        if (filterFormData[filterQuestion] && filterFormData[filterQuestion][filterQuestion]) {\r\n                            console.log('filters3', filterFormData[filterQuestion][filterQuestion], filters[stageFilter][filterQuestion][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}.${filterQuestion}`, filters[stageFilter][filterQuestion][filterQuestion], filterFormData[filterQuestion][filterQuestion])\r\n                        }\r\n                        else if (filterFormData[filterQuestion] && Object.keys(filterFormData[filterQuestion]).length > 0 && !filterFormData[filterQuestion][filterQuestion]) {\r\n                            console.log('filters4', filterFormData[filterQuestion], filters[stageFilter][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}`, filters[stageFilter][filterQuestion], filterFormData[filterQuestion])\r\n                        }\r\n                    })\r\n                })\r\n                // query = query.where('cardData.emergency_form_filling.violationType.violationType', '==', 'Нарушения в ходе голосования / Добуш берүү убагындагы мыйзам бузуулар')\r\n                // query = query.where('cardData.emergency_form_filling.region.region', '==', 'г. Бишкек')\r\n                // query = query.where('cardData.emergency_form_filling.violationTime', '==', '12:00-13:00')\r\n\r\n                query = query.orderBy('created_date', 'desc').limit(25).onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                })\r\n                fs = query\r\n            } else {\r\n                setAvailableTasks({})\r\n                fs = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n        return (fs)\r\n    }, [currentUser, pageData, userRanks, id, filterFormData])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            const newFilteredStages = cloneDeep(userCases)\r\n            //let newUnlimStages = {}\r\n            Object.keys(userCases).map(caseID => {\r\n                Object.keys(userCases[caseID]).map(stageId => {\r\n                    const stage = userCases[caseID][stageId]\r\n                    if (stage.ranks_write &&\r\n                        Object.keys(stage.ranks_write).length > 0 &&\r\n                        intersection(stage.ranks_write, userRanks).length > 0 &&\r\n                        \"creatable\" in stage &&\r\n                        stage.creatable) {\r\n                        if (stage.rank_limit_number && Object.keys(stage.rank_limit_number).length > 0) {\r\n                            const setIntersection = intersection(Object.keys(stage.rank_limit_number), userRanks)\r\n                            if (setIntersection.length > 0) {\r\n                                const maxTasksPerStage = calculatemaxTasksPerStage(setIntersection, stage.rank_limit_number)\r\n                                const tasksPerStage = countTasksPerStage(stageId, userTasks)\r\n                                // console.log(\"caseID: \", caseID)\r\n                                // console.log(\"stageId: \", stageId)\r\n                                // console.log(\"maxTasksPerStage: \", maxTasksPerStage)\r\n                                // console.log(\"tasksPerStage: \", tasksPerStage)\r\n                                // if (tasksPerStage >= maxTasksPerStage) {\r\n                                //     console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                //     delete newFilteredStages[caseID][stageId]\r\n                                //     console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                // }\r\n                                if (tasksPerStage >= maxTasksPerStage) {\r\n                                    // console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                    delete newFilteredStages[caseID][stageId]\r\n                                    // console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                }\r\n                                // console.log(\"userCases: \", userCases)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        delete newFilteredStages[caseID][stageId]\r\n                    }\r\n                })\r\n            })\r\n            setFilteredStages(newFilteredStages)\r\n            //setUnlimStages(newUnlimStages)\r\n        }\r\n    }, [currentUser, userCases, userTasks, id])\r\n\r\n\r\n    const countTasksPerStage = (stage, tasks) => {\r\n        let occurrences = 0\r\n        Object.values(tasks).map(task => {\r\n            if (task.case_stage_id === stage) {\r\n                occurrences++\r\n            }\r\n        })\r\n        return occurrences\r\n    }\r\n\r\n    const calculatemaxTasksPerStage = (rArray, limits) => {\r\n        let largestLimit = 0\r\n        rArray.map(v => {\r\n            if (limits[v] > largestLimit) {\r\n                largestLimit = limits[v]\r\n            }\r\n        })\r\n        return largestLimit\r\n    }\r\n\r\n    const intersection = (arrA, arrB) => {\r\n        const setA = new Set(arrA)\r\n        const setB = new Set(arrB)\r\n        let _intersection = new Set()\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem)\r\n            }\r\n        }\r\n        return [..._intersection]\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userRanks.length > 0) {\r\n            firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"ranks\")\r\n                .where(firebase.firestore.FieldPath.documentId(), \"in\", userRanks)\r\n                .onSnapshot(snapshot => {\r\n                    snapshot.docChanges().forEach(change => {\r\n                        if (change.type === \"added\" || change.type === \"modified\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                return { ...prevState, [change.doc.id]: change.doc.data() }\r\n                            })\r\n                        }\r\n                        if (change.type === \"removed\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                const newState = Object.assign({}, prevState)\r\n                                delete newState[change.doc.id]\r\n                                return newState\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }, [userRanks])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            createCaseSelectorForm()\r\n        }\r\n        else {\r\n            setCaseSelector({})\r\n        }\r\n    }, [userCases])\r\n\r\n    const displayTasks = (tasks, stages, cases, cardType, complete) => {\r\n        const displayedTasks = Object.keys(tasks).map(taskId => {\r\n            const caseType = tasks[taskId].case_type\r\n            const stageId = tasks[taskId].case_stage_id\r\n\r\n            let stage = false\r\n\r\n            if (stages) {\r\n                if (stages[stageId]) {\r\n                    stage = stages[stageId]\r\n                }\r\n            } else if (cases && cases[caseType] && cases[caseType][stageId]) {\r\n                stage = cases[caseType][stageId]\r\n            }\r\n\r\n            if (stage && tasks[taskId].is_complete === complete) {\r\n                // console.log(\"TASKS: \", tasks[taskId])\r\n                // console.log(\"userStages: \", userCases)\r\n                return <Grid key={taskId} style={{ padding: 10 }}>\r\n                    <TaskCard\r\n                        stage={stage}\r\n                        stageID={stageId}\r\n                        cardType={cardType}\r\n                        task={tasks[taskId]}\r\n                        user={currentUser}\r\n                        pCase={caseType}\r\n                        id={taskId} />\r\n                </Grid>\r\n            }\r\n        })\r\n        return displayedTasks\r\n    }\r\n\r\n    const showFilters = (stages, bgStages, formData, handleFormChange) => {\r\n        if (Object.keys(stages).length === 1 &&\r\n            stages[Object.keys(stages)[0]] &&\r\n            stages[Object.keys(stages)[0]].filters &&\r\n            Object.keys(stages[Object.keys(stages)[0]].filters).length > 0 &&\r\n            Object.keys(bgStages).length > 0\r\n        ) {\r\n            const stageID = Object.keys(stages)[0]\r\n            const stage = stages[stageID]\r\n            const filters = stage.filters\r\n            filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n            filters.emergency_form_filling['violationTime'] = '=='\r\n            const formQuestions = { properties: {} }\r\n            let formUI = {}\r\n            Object.keys(filters).forEach(stageFilter => {\r\n                Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                    let endProps = bgStages[stageFilter].end.properties[filterQuestion]\r\n                    delete endProps.dependencies\r\n                    formQuestions.properties[filterQuestion] = endProps\r\n                    // console.log(\"bgStages: \", bgStages)\r\n                    formUI[filterQuestion] = { \"ui:widget\": \"select\" }\r\n\r\n                })\r\n            })\r\n            return (\r\n                <JSchemaForm\r\n                    schema={formQuestions}\r\n                    uiSchema={formUI}\r\n                    formData={formData}\r\n                    onChange={e => {\r\n                        handleFormChange(e)\r\n                    }}\r\n                > </JSchemaForm>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const handleFilterFormChange = (e) => {\r\n        setFilterFormData(e.formData)\r\n        // console.log(\"FilterFormChange: \", e.formData)\r\n    }\r\n\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n\r\n    const createCaseSelectorForm = () => {\r\n        let schema = {\r\n            type: \"object\",\r\n            properties: {\r\n                request: {\r\n                    title: \"Получить задание\",\r\n                    $ref: \"#/definitions/cases\"\r\n                }\r\n            },\r\n            definitions: {\r\n                cases: {\r\n                    type: \"object\",\r\n                    properties: {\r\n                        case: {\r\n                            type: \"string\",\r\n                            enum: [\"none\", ...Object.keys(userCases)],\r\n                            default: \"none\"\r\n                        }\r\n                    },\r\n                    required: ['case'],\r\n                    dependencies: {\r\n                        case: {\r\n                            oneOf: [\r\n                                {\r\n                                    properties: {\r\n                                        case: {\r\n                                            enum: [\r\n                                                \"none\"\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Object.keys(userCases).forEach((k, i) => {\r\n            let c = userCases[k]\r\n            console.log('cc', c)\r\n            if (pageData.cases.includes(k)) {\r\n                schema.definitions.cases.dependencies.case.oneOf.push(\r\n                    {\r\n                        properties: {\r\n                            case: {\r\n                                enum: [\r\n                                    k\r\n                                ]\r\n                            },\r\n                            task: {\r\n                                type: \"string\",\r\n                                enum: ['none', ...Object.keys(c)],\r\n                                default: 'none'\r\n                            }\r\n                        },\r\n                        required: [\r\n                            'task'\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        })\r\n\r\n        // console.log('schema', schema)\r\n        // console.log('schema', JSON.stringify(schema))\r\n        setCaseSelector(schema)\r\n    }\r\n\r\n    const handleFormChange = e => {\r\n        setCaseSelectorResponse(e.formData)\r\n    };\r\n\r\n    const requestTask = () => {\r\n\r\n        if (caseSelectorResponse.request.case !== 'none' && caseSelectorResponse.request.task !== 'none') {\r\n            console.log('rrrr', caseSelectorResponse)\r\n            firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n                status: \"pending\",\r\n                user: currentUser.uid,\r\n                case_type: caseSelectorResponse.request.case,\r\n                case_stage_id: caseSelectorResponse.request.task\r\n            })\r\n        }\r\n        else {\r\n            alert('Выберите case и task!')\r\n        }\r\n    }\r\n\r\n\r\n    return (<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        {console.log(\"pageData: \", pageData)}\r\n        {console.log(\"userRanks: \", userRanks)}\r\n        {console.log(\"userCases: \", userCases)}\r\n        {console.log(\"userTasks: \", userTasks)}\r\n        {console.log(\"filteredStages: \", filteredStages)}\r\n        {console.log(\"availableStages: \", availableStages)}\r\n        {console.log(\"availableTasks: \", availableTasks)}\r\n        {console.log(\"caseData\", caseData)}\r\n\r\n        <Grid style={{paddingBottom: 30}}>\r\n            <JSchemaForm\r\n                schema={caseSelector}\r\n                // uiSchema={formUI}\r\n                formData={caseSelectorResponse}\r\n                onChange={e => {\r\n                    handleFormChange(e)\r\n                }}\r\n            >\r\n                <button type=\"submit\" onClick={requestTask} className='btn btn-info'>Получить</button>\r\n            </JSchemaForm>\r\n        </Grid>\r\n\r\n        {/* <Grid>\r\n            {Object.keys(userCases).map((k, i) => {\r\n                let c = caseData[k]\r\n                console.log(c)\r\n                if (pageData.cases.includes(k) && c) {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={k} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </Grid> */}\r\n\r\n        {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n        {Object.keys(userRanksDescriptions).length > 0 ? userRanks.map(rank => {\r\n            if (userRanksDescriptions[rank] && userRanksDescriptions[rank].description) {\r\n                return (\r\n                    <Typography variant=\"h5\" key={rank}>{userRanksDescriptions[rank].description}</Typography>\r\n                )\r\n            }\r\n        })\r\n            : null}\r\n        <div className={classes.root}>\r\n            {/*{Object.keys(unlimStages).map(pCase => (*/}\r\n            {/*    Object.keys(unlimStages[pCase]).map(stage => (*/}\r\n            {/*        <Grid key={pCase + stage} style={{padding: 10}}>*/}\r\n            {/*            <TaskCard complete={false}*/}\r\n            {/*                      stage={unlimStages[pCase][stage]}*/}\r\n            {/*                      stageID={stage}*/}\r\n            {/*                      user={currentUser}*/}\r\n            {/*                      pCase={pCase}*/}\r\n            {/*                      cardType = \"creatableUnlim\"/>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    ))*/}\r\n            {/*))}*/}\r\n            <Paper position=\"static\" color=\"default\">\r\n\r\n                <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\" centered\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                    {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n                        <Tab label=\"Доступные\" {...a11yProps(2)} />\r\n                        :\r\n                        null}\r\n\r\n                    {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n            {Object.keys(filteredStages).map(pCase => (\r\n                Object.keys(filteredStages[pCase]).map(stage => (\r\n                    <Grid key={pCase + stage} style={{ padding: 10 }}>\r\n                        <TaskCard complete={false}\r\n                            stage={filteredStages[pCase][stage]}\r\n                            stageID={stage}\r\n                            user={currentUser}\r\n                            pCase={pCase}\r\n                            cardType=\"creatable\" />\r\n                    </Grid>\r\n                ))\r\n            ))}\r\n            {displayTasks(userTasks, false, allCases, \"selected\", false)}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n            {displayTasks(userTasks, false, allCases, \"selected\", true)}\r\n        </TabPanel>\r\n\r\n        {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n            <TabPanel value={tabValue} index={2}>\r\n                {/* {console.log(\"availableTasks: \", availableTasks)} */}\r\n                {showFilters(availableStages, bgStages, filterFormData, handleFilterFormChange)}\r\n                {displayTasks(availableTasks, availableStages, false, \"selectable\", false)}\r\n            </TabPanel>\r\n            :\r\n            null}\r\n        {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n    </Grid>)\r\n}\r\n\r\nexport default Page","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\n//import Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DefaultDialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\nimport { complexStateFirebaseUpdate, simpleStateFirebaseUpdate } from \"../../util/Utilities\"\r\n\r\nimport Loader from \"../form/Loader\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport { Button, DialogContentText, DialogTitle, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport { cloneDeep, isEqual } from 'lodash'\r\n\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst JSchemaTask = () => {\r\n\tconst [formResponses, setFormResponses] = useState({})\r\n\tconst [taskForm, setTaskForm] = useState({})\r\n\tconst [mergedForm, setMergedForm] = useState({})\r\n\tconst [taskMetadata, setTaskMetadata] = useState({})\r\n\tconst [caseStages, setCaseStages] = useState({})\r\n\tconst [backgroundTasks, setBackgroundTasks] = useState({})\r\n\tconst [backgroundTaskForms, setBackgroundTaskForms] = useState({})\r\n\tconst [mergedBackgroundForms, setMergedBackgroundForms] = useState({})\r\n\tconst [backgroundResponses, setBackgroundResponses] = useState({})\r\n\tconst [currentFocus, setCurrentFocus] = useState(\"\")\r\n\tconst [gRef, setGRef] = useState(null)\r\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\r\n\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser && id) {\r\n\r\n\t\t\tconst ref = firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.doc(id)\r\n\r\n\t\t\tsetGRef(ref)\r\n\r\n\t\t\tref.onSnapshot(doc => {\r\n\t\t\t\tsetTaskMetadata(doc.data())\r\n\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\tsetFormStatus(\"sent\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!doc.data().assigned_users.includes(currentUser.uid)) {\r\n\t\t\t\t\tsetFormStatus(\"released\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\r\n\t\t\t});\r\n\r\n\t\t\tref.collection(\"responses\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tconst changes = {}\r\n\t\t\t\t\tconst deletes = []\r\n\t\t\t\t\tlet modifyResponses = false\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\r\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\r\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\r\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (modifyResponses) {\r\n\t\t\t\t\t\tsetFormResponses(prevState => {\r\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\r\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\r\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\r\n\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tref.collection(\"questions\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}, [id, currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(taskMetadata).length > 0) {\r\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection(\"schema\")\r\n\t\t\t\t.doc(\"structure\")\r\n\t\t\t\t.collection(\"cases\")\r\n\t\t\t\t.doc(taskMetadata.case_type)\r\n\t\t\t\t.collection(\"stages\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t}, [taskMetadata.case_type])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst mergedBgForms = {}\r\n\t\tconsole.log(\"Bg tasks: \", backgroundTasks)\r\n\t\tObject.keys(backgroundTasks).map(taskId => {\r\n\t\t\tconst stage = backgroundTasks[taskId].case_stage_id\r\n\t\t\tif (!mergedBgForms[stage]) {\r\n\t\t\t\tmergedBgForms[stage] = {}\r\n\t\t\t}\r\n\t\t\tmergedBgForms[stage][taskId] = mergeForm(backgroundTaskForms[taskId],\r\n\t\t\t\tcaseStages[stage])\r\n\t\t})\r\n\t\tconsole.log(\"Merged bg forms: \", mergedBgForms)\r\n\t\tsetMergedBackgroundForms(mergedBgForms)\r\n\t}, [backgroundTasks, backgroundTaskForms, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.keys(mergedForm).length > 0 && formStatus === \"loading\") {\r\n\t\t\tsetFormStatus(\"ready\")\r\n\t\t}\r\n\t}, [formResponses, mergedForm])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\r\n\t}, [taskForm, taskMetadata, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (Object.keys(caseStages).length > 0 && Object.keys(taskMetadata).length > 0 && caseStages[taskMetadata.case_stage_id]) {\r\n\t\t\tconsole.log(\"caseStages: \", caseStages)\r\n\t\t\tconsole.log(\"taskMetadata: \", taskMetadata)\r\n\t\t\tconst backgroundTasksList = caseStages[taskMetadata.case_stage_id].backgroundStages\r\n\t\t\tif (backgroundTasksList && backgroundTasksList.length > 0) {\r\n\t\t\t\tconsole.log(\"backgroundTasksList: \", backgroundTasksList.length)\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"case_id\", \"==\", taskMetadata.case_id)\r\n\t\t\t\t\t.where(\"case_stage_id\", \"in\", backgroundTasksList)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Background task: \", change.doc.data())\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [caseStages, taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(backgroundTasks).length > 0) {\r\n\t\t\tObject.keys(backgroundTasks).map(key => {\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"questions\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tcomplexStateFirebaseUpdate(snapshot, setBackgroundTaskForms, key)\r\n\t\t\t\t\t})\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"responses\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tif (!newState[key]) {\r\n\t\t\t\t\t\t\t\t\t\tnewState[key] = {}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data().contents\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[key][change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, [backgroundTasks])\r\n\r\n\t// useEffect( () => {\r\n\t// \tsetMergedQuestions(mergeQuestions([caseStages[taskMetadata.case_stage_id]]))\r\n\t// }, [caseStages, taskQuestions])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst timer = setTimeout(() => {\r\n\t// \t\tif (formResponsesChanged) {\r\n\t// \t\t\tfirebase\r\n\t// \t\t\t\t.firestore()\r\n\t// \t\t\t\t.collection(\"tasks\")\r\n\t// \t\t\t\t.doc(id)\r\n\t// \t\t\t\t.collection(\"responses\")\r\n\t// \t\t\t\t.doc(\"form_responses\")\r\n\t// \t\t\t\t.set(formResponses)\r\n\t// \t\t\t\t.then(docRef => {\r\n\t// \t\t\t\t\tsetFormResponsesChanged(false);\r\n\t// \t\t\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n\t// \t\t\t\t})\r\n\t// \t\t\t\t.catch(error => console.error(\"Error setting document: \", error));\r\n\t// \t\t}\r\n\t// \t}, AUTOSAVE_INTERVAL);\r\n\t// \treturn () => clearTimeout(timer);\r\n\t// }, [formResponsesChanged, formResponses]);\r\n\r\n\r\n\tconst handleFormChange = e => {\r\n\t\tsetFormResponses(e.formData)\r\n\t};\r\n\r\n\t// const handleBlur = e => {\r\n\t// \tif (gRef) {\r\n\t// \t\tconsole.log(\"Responses: \", formResponses)\r\n\t// \t\tconsole.log(\"That is what was blured\", e)\r\n\t// \t\tif (e === \"root\") {\r\n\t// \t\t\tconsole.log(\"e from first option when trigger is root\", e)\r\n\t// \t\t\tObject.keys(formResponses).map(k => {\r\n\t// \t\t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t\t.doc(k)\r\n\t// \t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t\t{merge: true})\r\n\t// \t\t\t})\r\n\t// \t\t} else {\r\n\t// \t\t\tconsole.log(\"e from second option when trigger is not root\", e)\r\n\t// \t\t\tconst docID = e.split(\"_\")[1]\r\n\t// \t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t.doc(docID)\r\n\t// \t\t\t\t.set({contents: formResponses[docID] ? formResponses[docID] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t{merge: true})\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst handleBlur = e => {\r\n\t\tif (gRef) {\r\n\t\t\tconsole.log(\"Responses: \", formResponses)\r\n\t\t\tconsole.log(\"That is what was blured\", e)\r\n\r\n\t\t\tObject.keys(formResponses).map(k => {\r\n\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t.set({ contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete() },\r\n\t\t\t\t\t\t{ merge: true })\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst mergeForm = (taskForm, caseForms) => {\r\n\t\tconst tForm = Object.assign({}, taskForm)\r\n\t\tconst cForms = Object.assign({}, caseForms)\r\n\r\n\t\tcForms.start = cForms.start ? cForms.start : {}\r\n\t\tcForms.end = cForms.end ? cForms.end : {}\r\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\r\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\r\n\r\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\r\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\r\n\r\n\r\n\t\tconst properties = {\r\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\r\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\r\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\r\n\t\t}\r\n\r\n\t\tconst definitions = {\r\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\r\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\r\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\r\n\t\t}\r\n\r\n\t\tlet title = \"\"\r\n\t\tif (tForm.form_questions.title) {\r\n\t\t\ttitle = tForm.form_questions.title\r\n\t\t} else if (cForms.end.title) {\r\n\t\t\ttitle = cForms.end.title\r\n\t\t} else if (cForms.start.title) {\r\n\t\t\ttitle = cForms.start.title\r\n\t\t}\r\n\r\n\t\tlet description = \"\"\r\n\t\tif (tForm.form_questions.description) {\r\n\t\t\tdescription = tForm.form_questions.description\r\n\t\t} else if (cForms.end.description) {\r\n\t\t\tdescription = cForms.end.description\r\n\t\t} else if (cForms.start.description) {\r\n\t\t\tdescription = cForms.start.description\r\n\t\t}\r\n\r\n\t\tconst required = [...new Set([\r\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\r\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\r\n\t\t\t...(cForms.start.required ? cForms.start.required : [])\r\n\t\t])]\r\n\r\n\t\tconst uiOrder = [...new Set([\r\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(tForm.ui_schema[\"ui:order\"] ? tForm.ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\r\n\t\t])]\r\n\r\n\t\tlet uiSchema = {\r\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\r\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\r\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\r\n\t\t}\r\n\r\n\t\tuiSchema = { ...uiSchema, ...{ \"ui:order\": uiOrder } }\r\n\r\n\t\tconst form = {\r\n\t\t\tproperties: properties,\r\n\t\t\tdefinitions: definitions,\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\trequired: required\r\n\t\t}\r\n\t\treturn { form_questions: form, ui_schema: uiSchema }\r\n\r\n\t}\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst getQuestions = async (taskID) => {\r\n\t// \t\tlet q = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn q\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getResponses = async (taskID) => {\r\n\t// \t\tlet r = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn r\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getSameCaseTasks = async () => {\r\n\t// \t\tlet sameCaseTasks = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t// \t\t\treturn doc.data()\r\n\t// \t\t}).then(async data => {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t// \t\t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\t\tif (doc.id !== id) {\r\n\t// \t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t\treturn sameCaseTasks\r\n\t// \t}\r\n\t//\r\n\t// \tconst getForms = async () => {\r\n\t// \t\tlet f = []\r\n\t// \t\tlet locked = true\r\n\t//\r\n\t// \t\tsetForms(null)\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t// \t\t\tif (doc.data().status === 'complete') {\r\n\t// \t\t\t\tlocked = true\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}\r\n\t// \t\t\telse {\r\n\t// \t\t\t\tlocked = false\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet sq = []\r\n\t// \t\tlet sr = []\r\n\t//\r\n\t// \t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t// \t\tsetCaseTasks(sameCaseTasks)\r\n\t// \t\tif (sameCaseTasks.length > 0) {\r\n\t// \t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getQuestions(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getResponses(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tconsole.log(ques)\r\n\t// \t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t// \t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\t//\r\n\t// \t\t\tconsole.log(sq)\r\n\t// \t\t\tconsole.log(sr)\r\n\t// \t\t}\r\n\t//\r\n\t// \t\tlet sf = sq.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tsr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\t//\r\n\t//\r\n\t// \t\tlet q = await getQuestions(id)\r\n\t// \t\tlet r = await getResponses(id)\r\n\t//\r\n\t//\r\n\t// \t\tsetQuestions(q)\r\n\t// \t\tsetResponses(r)\r\n\t//\r\n\t//\r\n\t// \t\t// let newQ = sq.concat(q)\r\n\t// \t\t// let newR = sr.concat(r)\r\n\t//\r\n\t// \t\tf = q.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn (\r\n\t// \t\t\t\t<Form\r\n\t// \t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t// \t\t\t\t\tquestion={el.data}\r\n\t// \t\t\t\t\tindex={i}\r\n\t// \t\t\t\t\tresponse={response}\r\n\t// \t\t\t\t\treturnFile={returnFile}\r\n\t// \t\t\t\t\treturnAnswer={returnAnswer}\r\n\t// \t\t\t\t\tid={el.questionId}\r\n\t// \t\t\t\t\tlocked={locked}\r\n\t// \t\t\t\t\t// ref={uploadsRef}\r\n\t// \t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t// \t\t\t)\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet newF = sf.concat(f)\r\n\t// \t\tsetForms(newF)\r\n\t// \t}\r\n\t// \tif (currentUser) {\r\n\t// \t\tgetForms()\r\n\t// \t}\r\n\t// }, [currentUser, id, lockButton])\r\n\t//\r\n\t//\r\n\t// const returnAnswer = (answer, index) => {\r\n\t// \tconst tmp = answers\r\n\t// \ttmp[index] = answer\r\n\t// \tsetAnswers(tmp)\r\n\t// }\r\n\t//\r\n\t// const returnFile = (file, questionId) => {\r\n\t// \tlet arr = [...file]\r\n\t// \tlet tmp = files\r\n\t// \ttmp[questionId] = arr\r\n\t// \tsetFiles(tmp)\r\n\t// \tconsole.log([...file], questionId)\r\n\t// }\r\n\t//\r\n\t// const upload = async () => {\r\n\t// \t// uploadsRef.current.startUpload()\r\n\t// \tif (Object.keys(files).length > 0) {\r\n\t// \t\tconsole.log('files')\r\n\t// \t\tsetUploading(true)\r\n\t// \t\tfor (const [key, value] of Object.entries(files)) {\r\n\t// \t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t// \t\t\tawait Promise.all(value.map(async v => {\r\n\t// \t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t// \t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t// \t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t// \t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t// \t\t\t}));\r\n\t// \t\t}\r\n\t// \t\tsetUploaded(true)\r\n\t// \t\tsetUploading(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t// \tif (previousTaskId) {\r\n\t// \t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t// \t\t\t.add({\r\n\t// \t\t\t\tanswer: data.reason,\r\n\t// \t\t\t\ttext: data.text,\r\n\t// \t\t\t\tuser_id: currentUser.uid,\r\n\t// \t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t// \t\t\t})\r\n\t// \t\t\t.then(() => setOpenSnackbar(true))\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveToFirebase = async (lock) => {\r\n\t// \tawait upload()\r\n\t// \tquestions.forEach(async (q, i) => {\r\n\t// \t\tif (answers[i] || answers[i] === \"\") {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t// \t\t}\r\n\t// \t})\r\n\t//\r\n\t// \tif (lock) {\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t// \t\tsetLock(true)\r\n\t// \t\tconsole.log(\"Task Locked\")\r\n\t// \t\tsetDialog(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const uploadFilesData = async (filename, url, questionId) => {\r\n\t// \tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t// \tconsole.log(\"Файл отправлен\")\r\n\t// \tif (filename && url) {\r\n\t// \t\trootRef.set(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t// \t\t\t}, { merge: true }\r\n\t// \t\t).then(() => console.log('super'))\r\n\t// \t}\r\n\t// };\r\n\t//\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\t//setFeedback({})\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetDialog(false)\r\n\t\thistory.goBack()\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tconsole.log(\"Dialog open\")\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t// \t\tlet feedback = <Grid>\r\n\t// \t\t\t{/* <Typography>{doc.data().description}</Typography>\r\n\t// \t\t\t<Feedback answers={doc.data().answers} returnAnswer={handleFeedbackSave}/> */}\r\n\t// \t\t\t<JSchemaForm\r\n\t// \t\t\t\tschema={schm}\r\n\t// \t\t\t\tuiSchema={ui}\r\n\t// \t\t\t\tformData={testData}\r\n\t// \t\t\t> </JSchemaForm>\r\n\r\n\t// \t\t</Grid>\r\n\t// \t\tsetReleaseFeedbackData(feedback)\r\n\t// \t})\r\n\t// }, [])\r\n\t//\r\n\t// const releaseTask = () => {\r\n\t// \tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t// \t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t// \t\t\t.then(() => {\r\n\t// \t\t\t\tsetDialog(false)\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}))\r\n\t// \t// alert(feedbackValue)\r\n\t// }\r\n\t//\r\n\tconst handleFeedbackSave = (event) => {\r\n\t\tsetFeedback(event.formData)\r\n\t\tconsole.log('event', event.formData)\r\n\t}\r\n\r\n\tconst changeTaskStatus = (status) => {\r\n\t\tlet root = firebase.firestore()\r\n\t\t\t.collection(\"tasks\")\r\n\t\t\t.doc(id)\r\n\t\t\t.collection(\"user_editable\")\r\n\t\t\t.doc(\"user_editable\")\r\n\r\n\t\tif (status === 'released') {\r\n\t\t\tif (feedbackValue.reasons) {\r\n\t\t\t\tif (feedbackValue.extra) {\r\n\t\t\t\t\troot.update({ status: status, release_status: feedbackValue.reasons, release_description: feedbackValue.extra })\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\troot.update({ status: status, release_status: feedbackValue.reasons, release_description: \"\" })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\troot.update({ status: status })\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"sent\"}\r\n\t\t\t\t\ttitle={formStatus === \"sent\" ? \"Форма успешно отправлена.\" : \"Отправить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"sent\" ? \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => { changeTaskStatus('complete') }} />}\r\n\r\n\t\t\t\t{/* {dialogType === 'release' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"released\"}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tcontent={formStatus === \"released\" ? \"Спасибо\" : releaseFeedbackData}\r\n\t\t\t\t\ttitle={formStatus === \"released\" ? \"Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.\" : \"Освободить форму?\"}\r\n\t\t\t\t\tdialogFunction={() => { changeTaskStatus('released') }} />} */}\r\n\r\n\t\t\t\t{dialogType === 'release' && <DefaultDialog\r\n\t\t\t\t\topen={dialogState}\r\n\t\t\t\t\tonClose={handleDialogClose}\r\n\t\t\t\t>\r\n\t\t\t\t\t{formStatus === \"released\" &&\r\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.</DialogTitle>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<DialogContentText>Спасибо</DialogContentText>\r\n\t\t\t\t\t\t\t: <JSchemaForm\r\n\t\t\t\t\t\t\t\tschema={caseStages[taskMetadata.case_stage_id].releaseFeedback_schema}\r\n\t\t\t\t\t\t\t\tuiSchema={caseStages[taskMetadata.case_stage_id].releaseFeedback_ui}\r\n\t\t\t\t\t\t\t\tformData={feedbackValue}\r\n\t\t\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\t\t\thandleFeedbackSave(e)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={handleDialogClose} color=\"primary\">\r\n\t\t\t\t\t\t\t\t\t\tОтмена\r\n                      \t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" onClick={() => { changeTaskStatus('released') }} color=\"primary\" autoFocus>\r\n\t\t\t\t\t\t\t\t\t\tПодтвердить\r\n                      \t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t{formStatus === \"released\" && <DialogActions>\r\n\t\t\t\t\t\t<Button onClick={handleOk} color=\"primary\">\r\n\t\t\t\t\t\t\tOk\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</DialogActions>}\r\n\t\t\t\t</DefaultDialog>}\r\n\r\n\t\t\t\t{/*{dialogType === 'release' && <DialogFeedback*/}\r\n\t\t\t\t{/*\tstate={dialogState}*/}\r\n\t\t\t\t{/*\tfeedbackValue={feedbackValue}*/}\r\n\t\t\t\t{/*\thandleClose={handleDialogClose}*/}\r\n\t\t\t\t{/*\ttitle={releaseFeedbackData.title}*/}\r\n\t\t\t\t{/*\tdialogFunction={releaseTask}*/}\r\n\t\t\t\t{/*\tanswers={releaseFeedbackData.answers}*/}\r\n\t\t\t\t{/*\tdescription={releaseFeedbackData.description}*/}\r\n\t\t\t\t{/*\treturnFeedback={handleFeedbackSave} />}*/}\r\n\t\t\t\t{/*{redirect && <Redirect to=\"/tasks\" />}*/}\r\n\t\t\t\t{/*<Snackbar*/}\r\n\t\t\t\t{/*\tanchorOrigin={{*/}\r\n\t\t\t\t{/*\t\tvertical: 'bottom',*/}\r\n\t\t\t\t{/*\t\thorizontal: 'left',*/}\r\n\t\t\t\t{/*\t}}*/}\r\n\t\t\t\t{/*\topen={openSnackbar}*/}\r\n\t\t\t\t{/*\tautoHideDuration={6000}*/}\r\n\t\t\t\t{/*\tonClose={handleCloseSnackbar}*/}\r\n\t\t\t\t{/*\tmessage=\"Фидбек отправлен\"*/}\r\n\t\t\t\t{/*\taction={*/}\r\n\t\t\t\t{/*\t\t<React.Fragment>*/}\r\n\t\t\t\t{/*\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>*/}\r\n\t\t\t\t{/*\t\t\t\t<CloseIcon fontSize=\"small\" />*/}\r\n\t\t\t\t{/*\t\t\t</IconButton>*/}\r\n\t\t\t\t{/*\t\t</React.Fragment>*/}\r\n\t\t\t\t{/*\t}*/}\r\n\t\t\t\t{/*/>*/}\r\n\t\t\t\t{/*/!* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} *!/*/}\r\n\t\t\t\t{/*{forms}*/}\r\n\t\t\t\t{/*<Grid container style={{ padding: 20 }} justify=\"center\">*/}\r\n\t\t\t\t{/*\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>*/}\r\n\t\t\t\t{/*\t{!lockButton &&*/}\r\n\t\t\t\t{/*\t\t<div>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>*/}\r\n\t\t\t\t{/*\r\n\t\t\t\t{/*\t\t</div>}*/}\r\n\t\t\t\t{/*</Grid>*/}\r\n\r\n\t\t\t\t{/*{console.log(\"Case stages::: \", caseStages)}*/}\r\n\t\t\t\t{/*{console.log(\"Task metadata::: \", taskMetadata)}*/}\r\n\t\t\t\t{/*{console.log(\"Merged background forms::: \", mergedBackgroundForms)}*/}\r\n\r\n\t\t\t\t{(Object.keys(caseStages).length > 0 &&\r\n\t\t\t\t\tObject.keys(taskMetadata).length > 0 &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id] &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages.length > 0 &&\r\n\t\t\t\t\tObject.keys(mergedBackgroundForms).length > 0) ?\r\n\t\t\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].backgroundStages.map(stage => {\r\n\t\t\t\t\t\t\treturn <div key={stage}>\r\n\t\t\t\t\t\t\t\t{console.log(\"STAGE: \", stage)}\r\n\t\t\t\t\t\t\t\t{console.log(\"mergedBackgroundForms: \", mergedBackgroundForms)}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmergedBackgroundForms[stage] ?\r\n\t\t\t\t\t\t\t\t\t\t(Object.keys(mergedBackgroundForms[stage]).map(taskId => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid style={{ padding: 30 }} key={taskId}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tschema={mergedBackgroundForms[stage][taskId].form_questions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuiSchema={mergedBackgroundForms[stage][taskId].ui_schema}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tformData={backgroundResponses[taskId]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields={{ customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: taskId }, ...{ \"currentUserUid\": currentUser.uid } }) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t> </JSchemaForm>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\r\n\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\tschema={mergedForm.form_questions}\r\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\r\n\t\t\t\t\t\tformData={formResponses}\r\n\t\t\t\t\t\tfields={{ customFileUpload: a => CustomFileUpload({ ...a, ...{ taskID: id }, ...{ \"currentUserUid\": currentUser.uid } }) }}\r\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={e => {\r\n\t\t\t\t\t\t\tconsole.log(\"That is what was focused\", e)\r\n\t\t\t\t\t\t\tsetCurrentFocus(e.split(\"_\")[1])\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={e => {\r\n\t\t\t\t\t\t\thandleBlur(e)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{formStatus === \"sent\" ?\r\n\t\t\t\t\t\t\t<div>Форма отправлена успешно</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\r\n\t\t\t\t\t\t{formStatus === \"ready\" ? <div>\r\n\t\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].additionalButtons && caseStages[taskMetadata.case_stage_id].additionalButtons.includes(\"release\") ?\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"} style={{\r\n\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\tborderColor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t}} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<div>Вы освободили эту форму и больше не можете ее заполнять.</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull}\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default JSchemaTask","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\n// import Appbar from './Components/Appbar/oldAppBar'\r\nimport Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\nimport Signin from './Components/Auth/Signin';\r\nimport PrivateRoute from './util/PrivateRoute';\r\nimport FAQ from './Components/FAQ/FAQ';\r\nimport Page from \"./Components/Page/Page\";\r\nimport JSchemaTask from \"./Components/Tasks/JSchemaTask\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n          <Switch>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/request\">\r\n              <Cases />\r\n            </Route>\r\n            <Route exact path=\"/tasks\">\r\n              <Tasks />\r\n            </Route>\r\n            <Route path=\"/tasks/:id\">\r\n              <Task />\r\n            </Route>\r\n            <Route path=\"/t/:id\">\r\n              <JSchemaTask />\r\n            </Route>\r\n            <Route exact path=\"/tasksObserver\">\r\n              <TasksObserver />\r\n            </Route>\r\n            <Route exact path=\"/notifications\">\r\n              <Notifications />\r\n            </Route>\r\n            <Route exact path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n            <Route exact path=\"/faq\">\r\n              <FAQ />\r\n            </Route>\r\n            <Route path=\"/p/:id\">\r\n              <Page />\r\n            </Route>\r\n            <PrivateRoute path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from './util/Auth'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}