{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/Appbar.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Tasks/Task.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","background","boxShadow","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","color","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","small","height","formControl","margin","minWidth","withStyles","MuiMenuItem","PersistentDrawerLeft","props","useContext","classes","useTheme","open","setOpen","anchorEl","Boolean","className","CssBaseline","AppBar","position","clsx","Toolbar","style","paddingLeft","paddingRight","IconButton","aria-label","onClick","edge","Grid","container","src","KloopLogo","alt","Button","borderColor","fontSize","variant","size","signOut","Drawer","anchor","paper","direction","Divider","to","BasicTextFields","setValue","index","response","locked","required","Typography","marginBottom","marginTop","title","TextField","id","label","onChange","event","target","returnAnswer","multiline","rows","disabled","fullWidth","SelectBox","FormControl","InputLabel","Select","labelId","onClose","onOpen","answers","indexOf","MenuItem","map","el","i","RadioButton","const","RadioGroup","name","FormControlLabel","control","Radio","flexWrap","textField","TimePickers","noValidate","type","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","state","setState","ready","setReady","a","forEach","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","data","JSON","stringify","key","question","tmp","justify","borderWidth","mergedAnswers","q","update","align","bullet","pos","TaskCard","status","description","language","Card","CardContent","CardActions","Tasks","allTasks","setTasks","tasks","where","querySnapshot","push","catch","error","task","Form","setResponses","lockButton","setLock","useParams","r","f","questionId","responseId","res","getData","saveToFirebase","lock","Home","App","exact","path","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91d8916b.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MuiMenuItem from '@material-ui/core/MenuItem';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        background: 'white',\r\n        boxShadow: 'none',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: 'gray',\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    small: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    }\r\n}));\r\n\r\nconst MenuItem = withStyles({\r\n    root: {\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})(MuiMenuItem);\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const menuOpen = Boolean(anchorEl);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n        console.log(currentUser)\r\n    }\r\n\r\n    //   const copyToClipboard = (text) => {\r\n    //     let data = JSON.stringify(text)\r\n    //     console.log(data)\r\n    //     navigator.clipboard.writeText(data)\r\n    //   }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar style={{paddingLeft: 15, paddingRight: 15}}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Grid container style={{ flexGrow: 1 }}>\r\n                        <img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n                        {/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n                        {/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n                    </Grid>\r\n                    {currentUser\r\n                        ?\r\n                        <div>\r\n                        <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} variant=\"outlined\" size=\"small\" onClick={() => firebase.auth().signOut()}>Выход</Button>\r\n                            {/* <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Avatar src={currentUser.photoURL} className={classes.small} />\r\n                            </IconButton> */}\r\n                            {/* <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={menuOpen}\r\n                                onClose={handleMenuClose}\r\n                            >\r\n                                <Grid container direction=\"column\" alignItems=\"center\" style={{ padding: 10 }}>\r\n                                    <Avatar src={currentUser.photoURL} style={{ marginBottom: 8 }} />\r\n                                    <Typography variant=\"body2\">{currentUser.displayName}</Typography>\r\n                                    <Typography variant=\"body2\">{currentUser.email}</Typography>\r\n                                    <Typography variant=\"body2\">ID: <Typography component=\"span\" variant=\"subtitle2\">{currentUser.uid}</Typography></Typography>\r\n                                </Grid>\r\n                                <MenuItem onClick={() => firebase.auth().signOut()}>Выход</MenuItem>\r\n                            </Menu> */}\r\n                        </div>\r\n                        : <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <Grid>\r\n                    <Button>Профиль</Button>\r\n                </Grid>\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/profile\">Профиль</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/tasks\">Задания</Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </Drawer>\r\n            <main style={{ padding: 0, height: '100%', background: 'transparent' }}\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\r\n\tconst {index, response, required, locked} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 10, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<TextField \r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    const updateForm = () => {\r\n        let f = {\r\n            \"questions\": [\r\n              {\r\n                \"question\": \"Введите ваше имя\",\r\n                \"type\": \"input\",\r\n                \"required\": true,\r\n                \"key\": \"name\"\r\n              },\r\n              {\r\n                \"type\": \"input\",\r\n                \"key\": \"surname\",\r\n                \"required\": true,\r\n                \"question\": \"Введите вашу фамилию\"\r\n              },\r\n              {\r\n                \"type\": \"input\",\r\n                \"key\": \"phone\",\r\n                \"question\": \"Введите номер телефона\",\r\n                \"required\": true\r\n              },\r\n              {\r\n                \"answers\": [\r\n                  \"Русский\",\r\n                  \"Кыргызский\",\r\n                  \"Английский\"\r\n                ],\r\n                \"question\": \"На каких языках вы предпочитаете работать (например, писать, брать интервью)\",\r\n                \"required\": true,\r\n                \"type\": \"checkbox\",\r\n                \"key\": \"workingLanguage\"\r\n              },\r\n              {\r\n                \"type\": \"checkbox\",\r\n                \"question\": \"На каких языках вы можете общаться на бытовом уровне (например, дать интервью)\",\r\n                \"required\": true,\r\n                \"answers\": [\r\n                  \"Русский\",\r\n                  \"Кыргызский\",\r\n                  \"Английский\"\r\n                ],\r\n                \"key\": \"speakingLanguage\"\r\n              },\r\n              {\r\n                \"required\": true,\r\n                \"answers\": [\r\n                  \"г. Бишкек\",\r\n                  \"г. Ош\",\r\n                  \"Чуй\",\r\n                  \"Ош\",\r\n                  \"Иссык-Куль\",\r\n                  \"Нарын\",\r\n                  \"Талас\",\r\n                  \" Джалал-Абад\",\r\n                  \"Баткен\"\r\n                ],\r\n                \"question\": \"Выберите вашу область\",\r\n                \"type\": \"select\",\r\n                \"key\": \"region\"\r\n              },\r\n              {\r\n                \"required\": true,\r\n                \"type\": \"input\",\r\n                \"question\": \"Введите район\",\r\n                \"key\": \"district\"\r\n              }\r\n            ]\r\n          }\r\n\r\n        firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").set(f)\r\n    }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 275\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, status, type, language, description, id } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>Открыть</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect } from 'react-router';\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport TaskCard from './Card'\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n\tconst [allTasks, setTasks] = useState(null)\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\r\n\tconst requestTask = () => {\r\n\t\tfirebase.firestore().collection(\"requests\").add({\r\n\t\t\ttaskType: \"String\",\r\n\t\t\tstatus: \"fulfilled | pending | reject\",\r\n\t\t\tuser: currentUser.uid\r\n\t\t})\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tlet tasks = []\r\n\t\t\tconsole.log(\"Fired\")\r\n\t\t\tfirebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tconsole.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\ttasks.push({ id: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetTasks(tasks)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n\t\t\t{/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\t\t\t<Typography variant=\"h4\">Задания</Typography>\r\n\r\n\t\t\t{allTasks && allTasks.map((task, i) => (\r\n\t\t\t\t<Grid key={i} style={{padding: 10}}>\r\n\t\t\t\t\t<TaskCard title={task.data.title} description={task.data.description} type={task.data.type} id={task.id} />\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React from 'react'\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport Text from \"../form/text\"\r\n\r\nconst Form = (props) => {\r\n\r\n    const {question, index, response, returnAnswer, locked} = props \r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Form\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\n\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect, useParams } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = false\r\n\r\n\r\n\t\t\tconsole.log(\"Fired\")\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\tconsole.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait questions.forEach(async (q, i) => {\r\n\t\t\tconsole.log(q)\r\n\t\t\tconsole.log(answers[i])\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({status: 'complete'})\r\n\t\t\tsetLock(true)\r\n\t\t}\r\n\t\tsetUploaded(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton && \r\n\t\t\t\t\t<div><Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => saveToFirebase(true)}>Отправить</Button>\r\n\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t\t// <div>\r\n\t\t// \t{forms}\r\n\t\t// </div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState, useContext } from 'react'\nimport { AuthProvider } from \"./util/Auth\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport { AuthContext } from \"./util/Auth\";\n\nimport Grid from '@material-ui/core/Grid'\n\nimport Appbar from './Components/Appbar/Appbar'\nimport Profile from './Components/Profile/Profile'\nimport Tasks from './Components/Tasks/Tasks'\nimport Task from './Components/Tasks/Task'\n\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nconst App = () => {\n  const { currentUser } = useContext(AuthContext);\n\n  return (\n      <Router>\n        <Grid container justify=\"center\">\n          <Appbar>\n            <Switch>\n              <Route exact path=\"/profile\">\n                <Profile />\n              </Route>\n              <Route exact path=\"/tasks\">\n                <Tasks />\n              </Route>\n              <Route path=\"/tasks/:id\">\n                <Task />\n              </Route>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Appbar>\n        </Grid>\n      </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthProvider} from './util/Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}