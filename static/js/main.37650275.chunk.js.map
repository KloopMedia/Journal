{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/oldAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","background","boxShadow","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","color","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","small","height","formControl","margin","minWidth","message","breakpoints","down","maxWidth","withStyles","MuiMenuItem","PersistentDrawerLeft","props","useContext","classes","useTheme","open","setOpen","anchorEl","setAnchorEl","menuOpen","Boolean","moderator","setModerator","numOfMessages","setNumOfMessages","messages","setMessages","snap","forEach","id","catch","unsubscribe","where","onSnapshot","a","size","m","count","data","shown","push","className","CssBaseline","AppBar","position","clsx","Toolbar","style","paddingLeft","paddingRight","IconButton","aria-label","onClick","edge","Grid","container","src","KloopLogo","alt","aria-controls","aria-haspopup","event","currentTarget","Badge","badgeContent","overlap","fill","fontSize","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","direction","length","map","justify","Typography","flex","title","Button","update","align","borderColor","variant","signOut","Drawer","anchor","paper","Divider","to","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","name","onChange","target","reason","text","answers","el","i","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","type","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","uploadFilesData","handleDialogClose","Box","marginBottom","marginTop","SelectBox","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","mergedAnswers","q","bullet","pos","TaskCard","status","language","cardColor","sendRequest","Card","CardContent","CardActions","Tasks","allTasks","setTasks","tasks","querySnapshot","error","task","Form","uploadsRef","feedback_type","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","useParams","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","Object","keys","storage","child","v","put","getDownloadURL","url","entries","previousTaskId","add","user_id","timestamp","FieldValue","serverTimestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","Case","caseId","disableCase","setDisable","setMessage","sort","b","parseInt","order","empty","task_type","taskType","case_type","case_stage_id","Paper","border","item","Cases","allCases","setCases","cases","c","setShown","show","setShow","opacity","Notifications","cards","setCards","updateFirestoreStatus","Notification","Home","token","setToken","makeToken","uuid","toString","Date","now","oldToken","tg_token","oldDate","substring","date","moment","diff","newToken","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","undefined","assigned_users","users","find","getUserInfo","PaginatedTasks","page","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","Math","floor","start","end","slice","pagination","TablePagination","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","App","exact","path","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37650275.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme, withStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Badge, Card, CardActions, CardContent, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MuiMenuItem from '@material-ui/core/MenuItem';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        background: 'white',\r\n        boxShadow: 'none',\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        color: 'gray',\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    small: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    message: {\r\n\t\twidth: 350,\r\n\t\t[theme.breakpoints.down(\"sm\")] : {\r\n\t\t\tmaxWidth: '95%' \r\n\t\t}\r\n    }\r\n}));\r\n\r\nconst MenuItem = withStyles({\r\n    root: {\r\n        justifyContent: \"flex-end\"\r\n    }\r\n})(MuiMenuItem);\r\n\r\nexport default function PersistentDrawerLeft(props) {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const menuOpen = Boolean(anchorEl);\r\n\r\n    const [moderator, setModerator] = useState(false)\r\n    const [numOfMessages, setNumOfMessages] = useState(0)\r\n    const [messages, setMessages] = useState([])\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection('editors').get().then((snap) => {\r\n            snap.forEach(doc => {\r\n                if (doc.id === currentUser.uid) {\r\n                    console.log('moderator')\r\n                    setModerator(true)\r\n                }\r\n            })\r\n        }).catch(() => setModerator(false))\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', '==', currentUser.uid).onSnapshot(async snap => {\r\n                console.log(snap.size)\r\n                let m = []\r\n                let count = 0\r\n                snap.forEach(doc => {\r\n                    if (!doc.data().shown) {\r\n                        m.push({ id: doc.id, ...doc.data() })\r\n                        count++\r\n                    }\r\n                })\r\n                setNumOfMessages(count)\r\n                setMessages(m)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    const updateFirestoreStatus = (id, index) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleDialogOpen = () => {\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false);\r\n    };\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    //   const copyToClipboard = (text) => {\r\n    //     let data = JSON.stringify(text)\r\n    //     console.log(data)\r\n    //     navigator.clipboard.writeText(data)\r\n    //   }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar style={{ paddingLeft: 15, paddingRight: 15 }}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Grid container style={{ flexGrow: 1 }}>\r\n                        <img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n                        {/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n                        {/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n                    </Grid>\r\n                    {currentUser &&\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleMenu}\r\n                                color=\"inherit\"\r\n                                size=\"small\"\r\n                            >\r\n                                <Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n                                    <NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-appbar\"\r\n                                anchorEl={anchorEl}\r\n                                anchorOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                keepMounted\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                }}\r\n                                open={menuOpen}\r\n                                onClose={handleMenuClose}\r\n                            >\r\n                                <Grid container direction=\"column\" alignItems=\"center\" >\r\n                                    {messages.length > 0 ? messages.map(message => (\r\n                                        <Grid container className={classes.message} justify=\"flex-start\" style={{padding: 0}}>\r\n                                                <Typography style={{flex: 1, padding: 10}}>{message.title}</Typography>\r\n                                                <Button style={{padding: 10}} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n                                        </Grid>\r\n                                    )): <Typography className={classes.message} align=\"center\" style={{padding: 10}}>Нет новых уведомлений</Typography>}\r\n                                </Grid>\r\n                            </Menu>\r\n                        </div>}\r\n                    {currentUser\r\n                        ?\r\n                        <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} variant=\"outlined\" size=\"small\" onClick={() => firebase.auth().signOut()}>Выход</Button>\r\n                        : <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <nav>\r\n                    <ul>\r\n                        <li>\r\n                            <Link to=\"/\">Главная</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/profile\">Профиль</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/tasks\">Задания</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/request\">Получить задание</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/notifications\">Уведомления</Link>\r\n                        </li>\r\n                        {moderator ? <li>\r\n                            <Link to=\"/tasksObserver\">Модератор</Link>\r\n                        </li> : null}\r\n                    </ul>\r\n                </nav>\r\n            </Drawer>\r\n            <main style={{ padding: 0, height: '100%', background: 'transparent' }}\r\n                className={clsx(classes.content, {\r\n                    [classes.contentShift]: open,\r\n                })}\r\n            >\r\n                <div className={classes.drawerHeader} />\r\n                {props.children}\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{false && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, status, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{background: cardColor}}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ? \r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect } from 'react-router';\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport TaskCard from './Card'\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n\tconst [allTasks, setTasks] = useState(null)\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tlet tasks = []\r\n\t\t\tconsole.log(\"Fired\")\r\n\t\t\tfirebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tconsole.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\ttasks.push({ id: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetTasks(tasks)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n\t\t\t{/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\t\t\t<Typography variant=\"h4\">Задания</Typography>\r\n\r\n\t\t\t{allTasks && allTasks.map((task, i) => (\r\n\t\t\t\t<Grid key={i} style={{padding: 10}}>\r\n\t\t\t\t\t<TaskCard title={task.data.title} description={task.data.description} type={task.data.type} id={task.id} />\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tvalue.forEach(v => ref.child(v.name).put(v).then(snap => snap.ref.getDownloadURL().then(url => uploadFilesData(v.name, url, key))))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tupload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t\tsetUploaded(true)\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog state={dialogState} handleClose={handleDialogClose} title={\"Отправить задание?\"} content={\"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"} dialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        tasks.push({ id: doc.id, ...doc.data() })\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n            if (snap.empty) {\r\n                setDisable(false)\r\n                // firebase.firestore().collection('tasks').where('assigned_users', '==', []).get().then(docs => {\r\n                //     if (docs.empty) {\r\n                //         setAllow(false)\r\n                //         setMessage('Нет доступных тасков')\r\n                //     }\r\n                // })\r\n            }\r\n            else {\r\n                setDisable(true)\r\n                setMessage('У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.')\r\n            }\r\n        })\r\n    }, [currentUser, disableCase])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{padding: '10px 10px 0px'}}>\r\n                        <Typography color=\"error\">{message}</Typography>\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n\r\n    useEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tlet cases = []\r\n\t\t\tconsole.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n                console.log(cases)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c,i) => (\r\n                <Case key={i} title={c.title} description={c.description} caseId={c.id} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")] : {\r\n\t\t\tmaxWidth: 300 \r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, index, setShown, shown } = props\r\n\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tif (shown) {\r\n\t\t\tsetShow(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShow(false)\r\n\t\t}\r\n\t}, [shown])\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={show ? {background: 'grey', opacity: 0.25} : {background: 'lightblue'}} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{justifyContent:'flex-end'}}>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', '==', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        if (currentUser) {\r\n            firebase.firestore().collection('users').doc(currentUser.uid).get().then(doc => {\r\n                const oldToken = doc.data().tg_token\r\n                if (oldToken) {\r\n                    console.log(oldToken)\r\n                    let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                    let date = moment().diff(oldDate, 'hours')\r\n                    console.log(date)\r\n                    if (date > 0) {\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                        setToken(newToken)\r\n                    }\r\n                    else {\r\n                        setToken(oldToken)\r\n                    }\r\n                }\r\n                else {\r\n                    console.log('no token')\r\n                    let newToken = makeToken()\r\n                    firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                    setToken(newToken)\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Подключите аккаунт к Telegram боту (наблюдателям обязательно!)</Typography>\r\n                <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на бот</Link>\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\nimport Appbar from './Components/Appbar/oldAppBar'\r\n// import Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n          <Switch>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/request\">\r\n              <Cases />\r\n            </Route>\r\n            <Route exact path=\"/tasks\">\r\n              <Tasks />\r\n            </Route>\r\n            <Route path=\"/tasks/:id\">\r\n              <Task />\r\n            </Route>\r\n            <Route exact path=\"/tasksObserver\">\r\n              <TasksObserver />\r\n            </Route>\r\n            <Route exact path=\"/notifications\">\r\n              <Notifications />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthProvider} from './util/Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}