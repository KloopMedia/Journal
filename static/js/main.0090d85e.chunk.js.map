{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","setNumOfMessages","messages","setMessages","snap","forEach","id","catch","unsubscribe","where","onSnapshot","a","size","m","count","data","shown","push","sort","b","toDate","className","Divider","to","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","length","map","message","i","justify","Typography","flex","title","Button","update","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","name","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","type","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","Box","marginBottom","marginTop","paddingRight","formControl","minWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","error","task","Form","uploadsRef","feedback_type","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","useParams","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","Object","keys","storage","child","v","put","getDownloadURL","url","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","Case","caseId","userRanks","disableCase","setDisable","setMessage","parseInt","order","task_type","taskType","case_type","case_stage_id","Paper","border","item","Cases","allCases","setCases","cases","c","down","maxWidth","dt","setShown","date","opacity","paddingLeft","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","Notification","queryString","require","Home","token","setToken","makeToken","uuid","Date","now","oldToken","tg_token","oldDate","substring","moment","diff","newToken","urlString","parse","location","search","rank","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","assigned_users","users","find","getUserInfo","PaginatedTasks","page","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","Math","floor","start","end","slice","pagination","TablePagination","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","taskId","select","FAQ","handleClickApplyFilters","tasklist","taskList","questionList","apply","App","exact","path","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0090d85e.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n              console.log('User Exist')\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email,\r\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Badge } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: 'white',\r\n\t\tboxShadow: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor: 'black',\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\tconst { window } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst menuOpen = Boolean(anchorEl);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\r\n\tconst [moderator, setModerator] = useState(false)\r\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\r\n\tconst [messages, setMessages] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (doc.id === currentUser.uid) {\r\n\t\t\t\t\t\tconsole.log('moderator')\r\n\t\t\t\t\t\tsetModerator(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}).catch(() => setModerator(false))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tconst unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n\t\t\t\tconsole.log(snap.size)\r\n\t\t\t\tlet m = []\r\n\t\t\t\tlet count = 0\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (!doc.data().shown) {\r\n\t\t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\tcount++\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n\t\t\t\tsetNumOfMessages(count)\r\n\t\t\t\tsetMessages(m)\r\n\t\t\t})\r\n\t\t\treturn () => unsubscribe()\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tconst updateFirestoreStatus = (id, index) => {\r\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n\t}\r\n\r\n\tconst handleMenu = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null)\r\n\t}\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/tasks\">Задания</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/request\">Получить задание</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{currentUser &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\topen={menuOpen}\r\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\r\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container key={\"notification_\" + i} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t{currentUser\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} variant=\"outlined\" size=\"small\" onClick={() => firebase.auth().signOut()}>Выход</Button>\r\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n\t/**\r\n\t * Injected by the documentation to work in an iframe.\r\n\t * You won't need it on your project.\r\n\t */\r\n\twindow: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 120,\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ?\r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nimport TaskCard from './Card'\r\n\r\n\r\nconst Tasks = (props) => {\r\n\r\n\tconst [allTasks, setTasks] = useState(null)\r\n\tconst [submittedTasks, setSubmitted] = useState(null)\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tlet tasks = []\r\n\t\t\tlet submitted = []\r\n\t\t\tconsole.log(\"Fired\")\r\n\t\t\tfirebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tconsole.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\t\t\tsubmitted.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\ttasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetTasks(tasks)\r\n\t\t\t\t\tsetSubmitted(submitted)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n\t\t\t{/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\t\t\t<Typography variant=\"h4\">Задания</Typography>\r\n\r\n\t\t\t{allTasks && allTasks.map((task, i) => (\r\n\t\t\t\t<Grid key={'active_task_'+i} style={{ padding: 10 }}>\r\n\t\t\t\t\t<TaskCard title={task.title} complete={task.is_complete} description={task.description} type={task.type} id={task.id} />\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\t\t\t{submittedTasks && submittedTasks.map((task, i) => (\r\n\t\t\t\t<Grid key={'submitted_task_'+i} style={{ padding: 10 }}>\r\n\t\t\t\t\t<TaskCard title={task.title} complete={task.is_complete} description={task.description} type={task.type} id={task.id} />\r\n\t\t\t\t</Grid>\r\n\t\t\t))}\r\n\r\n\t\t</Grid>\r\n\t)\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n            attachMaterials={question.attachMaterials}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tvalue.forEach(v => ref.child(v.name).put(v).then(snap => snap.ref.getDownloadURL().then(url => uploadFilesData(v.name, url, key))))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tupload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t\tsetUploaded(true)\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog state={dialogState} handleClose={handleDialogClose} title={\"Отправить задание?\"} content={\"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"} dialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId, userRanks } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // before change\r\n                        tasks.push({ id: doc.id, ...doc.data() })\r\n\r\n                        // after change\r\n                        // const ranks = doc.data().ranks\r\n                        // console.log(userRanks)\r\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        // }\r\n                        // else {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\r\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\r\n                        // }\r\n                        \r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n                if (snap.size < 3) {\r\n                    console.log(\"SIZE\", snap.size)\r\n                    setDisable(false)\r\n                }\r\n                else {\r\n                    setDisable(true)\r\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser, disableCase, open])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 0px' }}>\r\n                        {message}\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n    const [userRanks, setRanks] = useState([])\r\n\r\n    // New\r\n    // useEffect(() => {\r\n    //     if (currentUser) {\r\n    //         firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\r\n    //             if (doc && doc.exists) {\r\n    //                 let ranks = doc.data().ranks\r\n    //                 console.log(ranks)\r\n    //                 setRanks(ranks)\r\n    //                 getCasesFromFirebase(ranks)\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }, [currentUser])\r\n\r\n\r\n    /////// Old ////////\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let cases = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        cases.push({ id: doc.id, ...doc.data() })\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    setCases(cases)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n    //////////////\r\n\r\n    const getCasesFromFirebase = (ranks) => {\r\n        let cases = []\r\n        console.log(\"Fired\")\r\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.data())\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c, i) => (\r\n                <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxWidth: 300\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, setShown, shown, date } = props\r\n\r\n\tconst getFormatDate = (dt) => {\r\n\t\t// let month = '' + (d.getMonth() + 1)\r\n\t\t// let day = '' + d.getDate()\r\n\t\t// let year = d.getFullYear()\r\n\r\n\t\t// if (month.length < 2)\r\n\t\t// \tmonth = '0' + month;\r\n\t\t// if (day.length < 2)\r\n\t\t// \tday = '0' + day;\r\n\t\tlet formatDate = `${\r\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\r\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\r\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\r\n\r\n\t\treturn formatDate\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                console.log(messages[0].created_date.toDate())\r\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('users').doc(currentUser.uid).onSnapshot(doc => {\r\n                let oldToken;\r\n                if (doc.exists && doc.data().tg_token) {\r\n                    oldToken = doc.data().tg_token\r\n                }\r\n                else {\r\n                    oldToken = false\r\n                }\r\n                \r\n                console.log(oldToken)\r\n                if (oldToken) {\r\n                    console.log(oldToken)\r\n                    let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                    let date = moment().diff(oldDate, 'hours')\r\n                    console.log(date)\r\n                    if (date > 0) {\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                        setToken(newToken)\r\n                    }\r\n                    else {\r\n                        setToken(oldToken)\r\n                    }\r\n                }\r\n                else {\r\n                    console.log('no token')\r\n                    let newToken = makeToken()\r\n                    firebase.firestore().collection('users').doc(currentUser.uid).update({ tg_token: newToken })\r\n                    setToken(newToken)\r\n                }\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let urlString = queryString.parse(window.location.search)\r\n            if (urlString.rank) {\r\n                console.log(urlString.rank)\r\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log('creating request')\r\n                        firebase.firestore().collection('rank_requests').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            user_id: currentUser.uid,\r\n                            processed: false,\r\n                            rank: doc.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('no rank')\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root} >\r\n                <Typography style={{ paddingBottom: 10 }} variant=\"h5\" align=\"center\">Вы почти зарегистрировались! Осталось нажать на ссылку ниже.</Typography>\r\n                {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на бот</Link> \r\n                : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд, перезагрузите страницу</Typography>}\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\r\n                <br />\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1', 'Задание № 2.2', 'Задание № 2.3', 'Задание 3.1', 'Задание 3.2', 'Задание 3.3']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useContext } from 'react'\r\nimport { signInWithGoogle } from '../../util/Firebase'\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Signin = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n            <br />\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px grey solid',\r\n        padding: '0px 10px',\r\n        margin: 10,\r\n        background: 'yellow',\r\n\t\twidth: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    button: {\r\n        background: 'orange',\r\n        margin: '10px 0'\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { title, sendAnswer, taskId, questionId } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\r\n            </Box>\r\n            <TextField\r\n                label=\"Мой ответ\"\r\n                value={value}\r\n                style={{ background: 'white' }}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from './Card'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: '20px 0',\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst FAQ = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const classes = useStyles();\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\r\n\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value);\r\n    };\r\n\r\n    const handleClickApplyFilters = async (event) => {\r\n        let tasklist = await getTasks()\r\n        getQuestions(tasklist)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\r\n\r\n        if (taskType !== 'ВСЕ') {\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n        console.log('fired')\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\r\n            setTasks(tasksList)\r\n        })\r\n        return tasksList\r\n    }\r\n\r\n    const getQuestions = async (taskList) => {\r\n        let questionList = await taskList.map(async task => {\r\n            let arr = []\r\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\r\n                })\r\n            })\r\n            return arr\r\n        })\r\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\r\n    }\r\n\r\n    const sendAnswer = (taskId, questionId, answer) => {\r\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\r\n        console.log(taskId, answer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <FormControl className={classes.select}>\r\n                    <NativeSelect\r\n                        value={taskType}\r\n                        onChange={setTaskTypeHandler}\r\n                        name=\"filterTaskType\"\r\n                    >\r\n                        {\r\n                            taskTypes.map((taskType, i) => (\r\n                                <option key={taskType} value={taskType}>{taskType}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" className={classes.select}>\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                {questions\r\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\r\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FAQ","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\n// import Appbar from './Components/Appbar/oldAppBar'\r\nimport Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\nimport Signin from './Components/Auth/Signin';\r\nimport PrivateRoute from './util/PrivateRoute';\r\nimport FAQ from './Components/FAQ/FAQ';\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n          <Switch>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/request\">\r\n              <Cases />\r\n            </Route>\r\n            <Route exact path=\"/tasks\">\r\n              <Tasks />\r\n            </Route>\r\n            <Route path=\"/tasks/:id\">\r\n              <Task />\r\n            </Route>\r\n            <Route exact path=\"/tasksObserver\">\r\n              <TasksObserver />\r\n            </Route>\r\n            <Route exact path=\"/notifications\">\r\n              <Notifications />\r\n            </Route>\r\n            <Route exact path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n            <Route exact path=\"/faq\">\r\n              <FAQ />\r\n            </Route>\r\n            <PrivateRoute path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AuthProvider} from './util/Auth'\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}