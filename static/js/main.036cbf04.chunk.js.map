{"version":3,"sources":["util/Firebase.js","util/Auth.js","kloop_transparent_site.png","Components/Appbar/newAppBar.js","Components/form/feedback.js","Components/Dialog/FeedbackDialog.js","Components/form/LinearProgressWithLabel.js","Components/form/file.js","Components/form/textInput.js","Components/form/selectBox.js","Components/form/radiobutton.js","Components/form/timePickers.js","Components/form/checkbox.js","Components/Profile/Profile.js","Components/Tasks/Card.js","Components/Tasks/Tasks.js","Components/form/text.js","Components/form/form.js","Components/Dialog/Dialog.js","Components/Tasks/Task.js","Components/Cases/Case.js","Components/Cases/Cases.js","Components/Notifications/Notification.js","Components/Notifications/Notifications.js","Components/Home/Home.js","Components/Moderator/UserCard.js","Components/Moderator/ModeratedTask.js","Components/Moderator/PaginatedTasks.js","Components/Moderator/TasksObserver.js","Components/Auth/Signin.js","util/PrivateRoute.js","Components/FAQ/Card.js","Components/FAQ/FAQ.js","Components/Tasks/JSchemaCard.js","Components/form/Loader.js","Components/form/CustomFileUpload.js","util/Utilities.js","Components/Page/Page.js","Components/Tasks/JSchemaTask.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","setPending","useEffect","onAuthStateChanged","user","rootRef","firestore","collection","userRef","doc","uid","get","then","exists","console","log","set","username","displayName","email","created_date","FieldValue","serverTimestamp","Provider","value","drawerWidth","useStyles","makeStyles","theme","root","display","drawer","breakpoints","up","width","flexShrink","appBar","background","boxShadow","marginLeft","menuButton","color","marginRight","spacing","toolbar","mixins","drawerPaper","content","flexGrow","padding","ResponsiveDrawer","props","window","classes","useTheme","mobileOpen","setMobileOpen","useContext","anchorEl","setAnchorEl","menuOpen","Boolean","handleDrawerToggle","moderator","setModerator","numOfMessages","messages","userRanks","setUserRanks","userPages","setUserPages","snap","forEach","id","catch","onSnapshot","data","ranks","length","where","snapshot","docChanges","change","type","prevState","className","Divider","to","Object","keys","map","page","name","container","undefined","document","body","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","onClick","Grid","style","src","KloopLogo","alt","height","aria-controls","aria-haspopup","event","currentTarget","size","Badge","badgeContent","overlap","fill","fontSize","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","direction","alignItems","message","i","justify","Typography","flex","title","Button","update","shown","align","borderColor","variant","signOut","Hidden","smUp","implementation","Drawer","anchor","paper","ModalProps","xsDown","Feedback","setValue","textValue","setTextValue","returnAnswer","FormControl","const","paddingBottom","RadioGroup","onChange","target","reason","text","answers","el","FormControlLabel","control","Radio","label","disabled","locked","TextField","multiline","rows","fullWidth","AlertDialog","Dialog","state","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","description","returnFeedback","DialogActions","dialogFunction","feedbackValue","autoFocus","LinearProgressWithLabel","Box","mr","LinearProgress","minWidth","Math","round","File","setFormData","setShowFeedback","returnFile","feedbackType","askFeedback","saveQuestionFeedback","prevTaskId","files","multiple","BasicTextFields","forwardRef","ref","dialogOpen","setDialogOpen","setFeedback","feedbackFormData","showFeedback","index","response","attachMaterials","uploadFilesData","handleDialogClose","marginBottom","marginTop","paddingRight","formControl","maxWidth","SelectBox","setOpen","required","InputLabel","Select","labelId","onOpen","indexOf","MenuItem","RadioButton","flexWrap","textField","TimePickers","noValidate","InputLabelProps","shrink","InputProps","disableUnderline","CheckboxesGroup","setState","ready","setReady","a","answer","handleChange","checked","component","FormLabel","FormGroup","Checkbox","Profile","questions","setQuestions","setAnswers","forms","setForms","uploaded","setUploaded","redirect","setRedirect","setUserData","JSON","stringify","key","question","tmp","borderWidth","margin","mergedAnswers","q","bullet","pos","TaskCard","complete","language","cardColor","sendRequest","Card","CardContent","justifyContent","CardActions","TabPanel","other","role","hidden","p","a11yProps","paddingTop","Tasks","allTasks","setTasks","submittedTasks","setSubmitted","tasks","submitted","querySnapshot","is_complete","push","error","Paper","Tabs","newValue","centered","Tab","task","Form","uploadsRef","feedback_type","hideActions","showOk","handleOk","setResponses","lockButton","setLock","setCaseTasks","dialogState","setDialog","dialogType","setDialogType","releaseFeedbackData","setReleaseFeedbackData","openSnackbar","setOpenSnackbar","setFiles","uploading","setUploading","useParams","handleCloseSnackbar","getQuestions","taskID","questionId","getResponses","r","responseId","getSameCaseTasks","sameCaseTasks","case_id","f","status","sq","sr","ques","t","resp","Promise","all","d","sf","res","newF","concat","getForms","file","arr","upload","storage","child","v","put","getDownloadURL","url","url_wo_token","split","entries","previousTaskId","add","user_id","timestamp","alert","saveToFirebase","lock","merge","filename","arrayUnion","public_url","handleDialogOpen","CircularProgress","release_status","release_description","Snackbar","autoHideDuration","action","Fragment","Case","caseId","disableCase","setDisable","setMessage","sort","b","parseInt","order","task_type","taskType","case_type","case_stage_id","border","item","Cases","allCases","setCases","setRanks","getCasesFromFirebase","cases","c","hide","down","dt","setShown","date","opacity","paddingLeft","toDate","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","getSeconds","Notifications","cards","setCards","updateFirestoreStatus","unsubscribe","Notification","queryString","require","Home","token","setToken","tgId","setTgId","makeToken","uuid","Date","now","unsubscribeUser","unsubscribeUserPrivate","oldToken","tg_token","oldDate","substring","moment","diff","newToken","tg_id","urlString","parse","location","search","rank","processed","Link","href","transform","UserCard","userInfo","gutterBottom","surname","district","phone","ModeratedTask","taskInfo","setTaskInfo","pending","passed","setPassed","notPassed","setNotPassed","verified","setVerified","notVerified","setNotVerified","getReviewStatus","review_status","getData","updateReviewStatus","assigned_users","users","find","getUserInfo","PaginatedTasks","setPage","rowsPerPage","dataSlice","setDataSlice","calculateSlice","pageNumber","rowsPage","iData","List","numberOfPages","floor","start","end","slice","pagination","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","labelRowsPerPage","isAllowedToRenderTask","minHeight","xs","TasksObserver","taskTypes","taskTitles","taskReviewStatuses","setUser","setUsers","setTaskType","taskTitle","setTaskTitle","taskReviewStatus","setTaskReviewStatus","getUsers","usersList","usersRef","orderBy","docs","getTasks","tasksList","tasksRef","NativeSelect","FormHelperText","startIcon","Signin","PrivateRoute","RouteComponent","rest","render","routeProps","button","sendAnswer","taskId","select","FAQ","handleClickApplyFilters","tasklist","taskList","questionList","apply","JSchemaTaskCard","cardData","history","useHistory","cardType","stage","stageID","pCase","waiting","setWaiting","sendCallbackRequest","callback","callbackType","callbackName","uuidv4","FieldPath","documentId","showCard","Loader","fileBeingUploaded","setFileBeingUploaded","storageRef","progress","on","TaskEvent","STATE_CHANGED","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","downloadURL","filesLinks","contents","newState","assign","CustomFileUpload","currentUserUid","connectingTelegram","setConnectingTelegram","telegramConnected","setTelegramConnected","pathToFolder","handleTgConnectClick","fileUpload","linksToFiles","formData","schema","path","complexStateFirebaseUpdate","setFunction","subState","simpleStateFirebaseUpdate","Page","pageData","setPageData","userCases","setUserCases","setAllCases","userTasks","setUserTasks","filteredStages","setFilteredStages","caseData","setCaseData","caseSelector","setCaseSelector","caseSelectorResponse","setCaseSelectorResponse","tabValue","setTabValue","availableStages","setAvailableStages","bgStages","setBgStages","filterFormData","setFilterFormData","availableTasks","setAvailableTasks","userRanksDescriptions","setUserRanksDescriptions","intersection","casesPath","caseWithSelectableTasks","limit","fs","stages","filters","emergency_form_filling","violationType","query","stageFilter","filterQuestion","newFilteredStages","cloneDeep","caseID","stageId","ranks_write","creatable","rank_limit_number","setIntersection","maxTasksPerStage","calculatemaxTasksPerStage","countTasksPerStage","occurrences","values","rArray","limits","largestLimit","arrA","arrB","setA","Set","setB","_intersection","elem","has","createCaseSelectorForm","displayTasks","caseType","properties","request","$ref","definitions","case","enum","default","dependencies","oneOf","k","includes","e","handleFormChange","formQuestions","formUI","endProps","uiSchema","showFilters","JSchemaTask","formResponses","setFormResponses","taskForm","setTaskForm","mergedForm","setMergedForm","taskMetadata","setTaskMetadata","caseStages","setCaseStages","backgroundTasks","setBackgroundTasks","backgroundTaskForms","setBackgroundTaskForms","mergedBackgroundForms","setMergedBackgroundForms","backgroundResponses","setBackgroundResponses","setCurrentFocus","gRef","setGRef","formStatus","setFormStatus","changes","deletes","modifyResponses","mergedBgForms","mergeForm","backgroundTasksList","backgroundStages","caseForms","tForm","cForms","start_ui_schema","end_ui_schema","form_questions","ui_schema","uiOrder","goBack","changeTaskStatus","fields","customFileUpload","onFocus","onBlur","delete","handleBlur","additionalButtons","App","exact","Task","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.036cbf04.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBfzhQOCtbcUk_tWjPDnjYtHwoouCEkclg\",\r\n    authDomain: \"journal-bb5e3.firebaseapp.com\",\r\n    databaseURL: \"https://journal-bb5e3.firebaseio.com\",\r\n    projectId: \"journal-bb5e3\",\r\n    storageBucket: \"journal-bb5e3.appspot.com\",\r\n    messagingSenderId: \"918752509407\",\r\n    appId: \"1:918752509407:web:77670a68ff906f13e5d86a\"\r\n};\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  export const signInWithGoogle = () => {\r\n    firebase.auth().signInWithPopup(provider);\r\n  };\r\n\r\nexport default firebase;","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"./Firebase\";\r\n\r\nexport const AuthContext = React.createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user)\r\n      setPending(false)\r\n      let rootRef = firebase.firestore().collection(\"users\")\r\n      if (user) {\r\n        let userRef = rootRef.doc(user.uid)\r\n        userRef.get().then(doc => {\r\n          if (doc && doc.exists) {\r\n              // pass\r\n              console.log('User Exist')\r\n          }\r\n          else {\r\n            console.log(\"Creating user\")\r\n            userRef.set(\r\n              {\r\n                username: user.displayName,\r\n                email: user.email,\r\n                created_date: firebase.firestore.FieldValue.serverTimestamp()\r\n              }\r\n            )\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // if(pending){\r\n  //   return <>Loading...</>\r\n  // }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/kloop_transparent_site.f6fb098e.png\";","import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport KloopLogo from '../../kloop_transparent_site.png'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport { Badge } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport {\r\n\tLink\r\n} from \"react-router-dom\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\tdisplay: 'flex',\r\n\t},\r\n\tdrawer: {\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t},\r\n\tappBar: {\r\n\t\tbackground: 'white',\r\n\t\tboxShadow: 'none',\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\twidth: `calc(100% - ${drawerWidth}px)`,\r\n\t\t\tmarginLeft: drawerWidth,\r\n\t\t},\r\n\t},\r\n\tmenuButton: {\r\n\t\tcolor: 'black',\r\n\t\tmarginRight: theme.spacing(2),\r\n\t\t[theme.breakpoints.up('sm')]: {\r\n\t\t\tdisplay: 'none',\r\n\t\t},\r\n\t},\r\n\t// necessary for content to be below app bar\r\n\ttoolbar: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: drawerWidth,\r\n\t},\r\n\tcontent: {\r\n\t\tflexGrow: 1,\r\n\t\tpadding: theme.spacing(3),\r\n\t},\r\n}));\r\n\r\nfunction ResponsiveDrawer(props) {\r\n\tconst { window } = props;\r\n\tconst classes = useStyles();\r\n\tconst theme = useTheme();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(false);\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst [anchorEl, setAnchorEl] = React.useState(null);\r\n\tconst menuOpen = Boolean(anchorEl);\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\r\n\tconst [moderator, setModerator] = useState(false)\r\n\tconst [numOfMessages, setNumOfMessages] = useState(0)\r\n\tconst [messages, setMessages] = useState([])\r\n\tconst [userRanks, setUserRanks] = useState([])\r\n\tconst [userPages, setUserPages] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase.firestore().collection('editors').get().then((snap) => {\r\n\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\tif (doc.id === currentUser.uid) {\r\n\t\t\t\t\t\tconsole.log('moderator')\r\n\t\t\t\t\t\tsetModerator(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}).catch(() => setModerator(false))\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('users')\r\n\t\t\t\t.doc(currentUser.uid)\r\n\t\t\t\t.collection(\"user_private\")\r\n\t\t\t\t.doc(\"private\")\r\n\t\t\t\t.onSnapshot(doc => {\r\n\t\t\t\t\tif (doc.data()) {\r\n\t\t\t\t\t\tsetUserRanks(doc.data().ranks)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [currentUser])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userRanks.length > 0) {\r\n\t\t\tfirebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection('pages')\r\n\t\t\t\t.where(\"ranks\", \"array-contains-any\", userRanks)\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetUserPages(prevState => {\r\n\t\t\t\t\t\t\t\treturn { ...prevState, [change.doc.id]: change.doc.data() }\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tconsole.log(\"User pages: \", change.doc.id)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\t}, [userRanks])\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \t//let unsubscribe = () => {}\r\n\t// \tif (currentUser) {\r\n\t// \t\tfirebase.firestore()\r\n\t// \t\t\t.collection('notifications')\r\n\t// \t\t\t.where('user_id', 'array-contains', currentUser.uid)\r\n\t// \t\t\t.onSnapshot(snap => {\r\n\t// \t\t\tconsole.log(snap.size)\r\n\t// \t\t\tlet m = []\r\n\t// \t\t\tlet count = 0\r\n\t// \t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\tif (!doc.data().shown) {\r\n\t// \t\t\t\t\tm.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\tcount++\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\tm.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n\t// \t\t\tsetNumOfMessages(count)\r\n\t// \t\t\tsetMessages(m)\r\n\t// \t\t})\r\n\t// \t}\r\n\t// \t//return () => unsubscribe\r\n\t// }, [currentUser])\r\n\r\n\tconst updateFirestoreStatus = (id, index) => {\r\n\t\tfirebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n\t}\r\n\r\n\tconst handleMenu = (event) => {\r\n\t\tsetAnchorEl(event.currentTarget);\r\n\t};\r\n\r\n\tconst handleMenuClose = () => {\r\n\t\tsetAnchorEl(null)\r\n\t}\r\n\r\n\tconst drawer = (\r\n\t\t<div>\r\n\t\t\t<div className={classes.toolbar} />\r\n\t\t\t<Divider />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/\">Главная</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/profile\">Профиль</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/tasks\">Задания</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/request\">Получить задание</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to=\"/notifications\">Уведомления</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/tasksObserver\">Модератор</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t\t{moderator ? <li>\r\n\t\t\t\t\t\t<Link to=\"/faq\">FAQ для модераторов</Link>\r\n\t\t\t\t\t</li> : null}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tObject.keys(userPages).map(page => {\r\n\t\t\t\t\t\t\t\treturn <li key={page}> <Link to={\"/p/\" + page}>\r\n\t\t\t\t\t\t\t\t\t{userPages[page].name}\r\n\t\t\t\t\t\t\t\t</Link> </li>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t</div>\r\n\t);\r\n\r\n\tconst container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<CssBaseline />\r\n\t\t\t<AppBar position=\"fixed\" className={classes.appBar}>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\tclassName={classes.menuButton}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t<Grid container style={{ flexGrow: 1 }}>\r\n\t\t\t\t\t\t<img src={KloopLogo} alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} />\r\n\t\t\t\t\t\t{/* <img src=\"https://kloop.kg/wp-content/uploads/2017/01/kloop_transparent_site.png\" alt=\"Kloop.kg - Новости Кыргызстана\" style={{ width: 150, height: 'auto' }} /> */}\r\n\t\t\t\t\t\t{/* <Typography variant=\"h5\" style={{ color: \"black\" }}>Journal</Typography> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t{currentUser &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\taria-label=\"account of current user\"\r\n\t\t\t\t\t\t\t\taria-controls=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\taria-haspopup=\"true\"\r\n\t\t\t\t\t\t\t\tonClick={handleMenu}\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Badge badgeContent={numOfMessages} color=\"secondary\" overlap=\"circle\" >\r\n\t\t\t\t\t\t\t\t\t<NotificationsIcon style={{ fill: 'grey', fontSize: '28px' }} />\r\n\t\t\t\t\t\t\t\t</Badge>\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Menu\r\n\t\t\t\t\t\t\t\tid=\"menu-appbar\"\r\n\t\t\t\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tkeepMounted\r\n\t\t\t\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\t\t\t\thorizontal: 'right',\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\topen={menuOpen}\r\n\t\t\t\t\t\t\t\tonClose={handleMenuClose}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container direction=\"column\" alignItems=\"center\" >\r\n\t\t\t\t\t\t\t\t\t{messages.length > 0 ? messages.map((message, i) => (\r\n\t\t\t\t\t\t\t\t\t\t<Grid container key={message.id} className={classes.message} justify=\"flex-start\" style={{ padding: 0 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography style={{ flex: 1, padding: 10 }}>{message.title}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button style={{ padding: 10 }} onClick={() => updateFirestoreStatus(message.id)} size=\"small\">скрыть</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t)) : <Typography className={classes.message} align=\"center\" style={{ padding: 10 }}>Нет новых уведомлений</Typography>}\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Menu>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t{currentUser\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span style={{ color: 'black', fontSize: 12, marginLeft: 7 }}>\r\n\t\t\t\t\t\t\t\t{currentUser.email}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\" size=\"small\"\r\n\t\t\t\t\t\t\t\tonClick={() => firebase.auth().signOut()}>\r\n\t\t\t\t\t\t\t\tВыход\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t: <Button style={{ borderColor: \"black\", color: 'black', marginLeft: 10, fontSize: 12 }} size=\"small\" variant=\"outlined\" onClick={signInWithGoogle}>вход</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n\t\t\t\t{/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n\t\t\t\t<Hidden smUp implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tcontainer={container}\r\n\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\tanchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t\t<Hidden xsDown implementation=\"css\">\r\n\t\t\t\t\t<Drawer\r\n\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\topen\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{drawer}\r\n\t\t\t\t\t</Drawer>\r\n\t\t\t\t</Hidden>\r\n\t\t\t</nav>\r\n\t\t\t<main className={classes.content}>\r\n\t\t\t\t<div className={classes.toolbar} />\r\n\t\t\t\t{props.children}\r\n\t\t\t</main>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n\t/**\r\n\t * Injected by the documentation to work in an iframe.\r\n\t * You won't need it on your project.\r\n\t */\r\n\twindow: PropTypes.func,\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React, { useState } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst Feedback = (props) => {\r\n\r\n    const [value, setValue] = useState(null)\r\n    const [textValue, setTextValue] = useState('')\r\n    const { returnAnswer } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n        returnAnswer({reason: event.target.value, text: textValue})\r\n    };\r\n\r\n    const handleTextChange = (event) => {\r\n        setTextValue(event.target.value)\r\n        returnAnswer({reason: value, text: event.target.value})\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h4>{props.title}</h4>\r\n            <FormControl const='fieldset' style={{paddingBottom: 15}}>\r\n                <RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n                    {props.answers.map((el, i) => <FormControlLabel\r\n                        key={i}\r\n                        value={el}\r\n                        control={<Radio color=\"primary\" />}\r\n                        label={el}\r\n                        disabled={props.locked ? true : false} />)}\r\n                </RadioGroup>\r\n            </FormControl>\r\n            <TextField\r\n                id={\"feedback_input\"}\r\n                label=\"Примечание\"\r\n                value={textValue}\r\n                onChange={handleTextChange}\r\n                // required={required}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Feedback from '../form/feedback'\r\n\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <Typography>{props.description}</Typography>\r\n            <Feedback answers={props.answers} returnAnswer={props.returnFeedback} />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.handleClose} color=\"primary\">\r\n            Отмена\r\n          </Button>\r\n          <Button onClick={props.dialogFunction} disabled={!props.feedbackValue.reason} color=\"primary\" autoFocus>\r\n            Подтвердить\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react'\r\nimport LinearProgress from '@material-ui/core/LinearProgress'\r\nimport Box from '@material-ui/core/Box'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\nconst LinearProgressWithLabel = (props) => {\r\n    return (\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <Box width=\"100%\" mr={1}>\r\n          <LinearProgress variant=\"determinate\" {...props} />\r\n        </Box>\r\n        <Box minWidth={35}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n            props.value,\r\n          )}%`}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\nexport default LinearProgressWithLabel","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box, Button, Snackbar } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            width: '40ch',\r\n        },\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst File = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [feedbackValue, setFeedback] = useState({})\r\n    const [feedbackFormData, setFormData] = useState({})\r\n    const [showFeedback, setShowFeedback] = useState(false)\r\n\r\n    const { returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId } = props\r\n\r\n    useEffect(() => {\r\n        console.log(feedbackType)\r\n        if (feedbackType && askFeedback) {\r\n            console.log(feedbackType)\r\n            firebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n                setFormData(doc.data())\r\n            })\r\n            setShowFeedback(true)\r\n        }\r\n        else {\r\n            setShowFeedback(false)\r\n        }\r\n    }, [feedbackType])\r\n\r\n    const handleChange = (event) => {\r\n        returnFile(event.target.files, id)\r\n    };\r\n\r\n    const sendFeedback = () => {\r\n        saveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n        handleDialogClose()\r\n    }\r\n\r\n    const returnFeedback = (value) => {\r\n        setFeedback(value)\r\n    }\r\n\r\n\r\n    const handleDialogClose = () => {\r\n        setDialogOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <FeedbackDialog\r\n                title={feedbackFormData.title}\r\n                dialogFunction={sendFeedback}\r\n                state={dialogOpen}\r\n                handleClose={handleDialogClose}\r\n                feedbackValue={feedbackValue}\r\n                answers={feedbackFormData.answers}\r\n                description={feedbackFormData.description}\r\n                returnFeedback={returnFeedback}\r\n            />\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n                {showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n            </Box> */}\r\n            <input\r\n                    type=\"file\"\r\n                    onChange={handleChange}\r\n                    multiple\r\n                />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default File","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, IconButton, Box } from '@material-ui/core';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport FeedbackDialog from '../Dialog/FeedbackDialog'\r\nimport Feedback from './feedback'\r\nimport FirebaseFileUploader from './FirebaseFileUploader'\r\nimport File from './file'\r\n\r\nimport firebase from '../../util/Firebase'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\troot: {\r\n\t\t'& > *': {\r\n\t\t\twidth: '40ch',\r\n\t\t},\r\n\t},\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [dialogOpen, setDialogOpen] = useState(false)\r\n\tconst [answer, setAnswer] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [feedbackFormData, setFormData] = useState({})\r\n\tconst [showFeedback, setShowFeedback] = useState(false)\r\n\r\n\tconst { index, response, returnFile, locked, id, feedbackType, askFeedback, saveQuestionFeedback, prevTaskId, uploadFilesData, attachMaterials } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (feedbackType && askFeedback) {\r\n\t\t\tconsole.log(feedbackType)\r\n\t\t\tfirebase.firestore().collection('schema').doc('structure').collection('feedbacks').doc(feedbackType).get().then(doc => {\r\n\t\t\t\tsetFormData(doc.data())\r\n\t\t\t})\r\n\t\t\tsetShowFeedback(true)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetShowFeedback(false)\r\n\t\t}\r\n\t}, [feedbackType])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, props.index)\r\n\t};\r\n\r\n\tconst sendFeedback = () => {\r\n\t\tsaveQuestionFeedback(feedbackValue, id, prevTaskId)\r\n\t\thandleDialogClose()\r\n\t}\r\n\r\n\tconst returnFeedback = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialogOpen(false)\r\n\t}\r\n\r\n\tconst handleFilesUpload = (filename, downloadURL) => {\r\n\t\tuploadFilesData(filename, downloadURL, id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<FeedbackDialog\r\n\t\t\t\ttitle={feedbackFormData.title}\r\n\t\t\t\tdialogFunction={sendFeedback}\r\n\t\t\t\tstate={dialogOpen}\r\n\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\tanswers={feedbackFormData.answers}\r\n\t\t\t\tdescription={feedbackFormData.description}\r\n\t\t\t\treturnFeedback={returnFeedback}\r\n\t\t\t/>\r\n\t\t\t<Box display=\"flex\" style={{ marginBottom: 10, marginTop: 20 }}>\r\n\t\t\t\t<Typography variant=\"h6\" style={{ paddingRight: 8 }}>{props.title}</Typography>\r\n\t\t\t\t{showFeedback && <IconButton size=\"small\" onClick={() => setDialogOpen(true)}><FeedbackIcon color=\"primary\" /></IconButton>}\r\n\t\t\t</Box>\r\n\t\t\t<TextField\r\n\t\t\t\tid={\"inputBox\" + index}\r\n\t\t\t\tlabel=\"Мой ответ\"\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\t// required={required}\r\n\t\t\t\tmultiline\r\n\t\t\t\trows={5}\r\n\t\t\t\tdisabled={locked}\r\n\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\tfullWidth\r\n\t\t\t/>\r\n\t\t\t{!locked && attachMaterials && <File returnFile={returnFile} locked={locked} id={id} />}\r\n\t\t\t{/* <FirebaseFileUploader\r\n                ref={ref}\r\n                title={\"\"}\r\n                index={index}\r\n                uploadFilesData={handleFilesUpload}\r\n            /> */}\r\n\t\t</div>\r\n\t);\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tformControl: {\r\n\t\tminWidth: 100,\r\n\t\tmaxWidth: 300\r\n\t},\r\n}));\r\n\r\nexport default function SelectBox(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst {index, response, required, locked } = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\t// console.log(props.answers[response])\r\n\t\t\t// setValue(props.answers[response])\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value);\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index)\r\n\t};\r\n\r\n\tconst handleClose = (event) => {\r\n\t\tsetOpen(false)\r\n\t};\r\n\r\n\tconst handleOpen = (event) => {\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 5, marginTop: 20}}>{props.title}</Typography>\r\n\t\t\t<FormControl className={classes.formControl} disabled={locked}>\r\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\r\n\t\t\t\t<Select\r\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\r\n\t\t\t\t\tid={\"select\" + index}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={handleClose}\r\n\t\t\t\t\tonOpen={handleOpen}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}>\r\n\t\t\t\t\t<MenuItem value={\"\"}><em>None</em></MenuItem>\r\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem key={i} value={el}>{el}</MenuItem>)}\r\n\t\t\t\t</Select>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\r\n}","import React, { useEffect } from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nexport default function RadioButton(props) {\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tlet id = props.answers.indexOf(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, id)\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<FormControl const='fieldset'>\r\n\t\t\t\t<RadioGroup aria-label={props.title} name={props.title} value={value} onChange={handleChange}>\r\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={<Radio color=\"primary\" />} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={el} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={props.locked ? true : false} />)}\r\n\t\t\t\t</RadioGroup>\r\n\t\t\t</FormControl>\r\n\t\t</div>\r\n\t)\r\n\t\t;\r\n}","import React, { useEffect } from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttextField: {\r\n\t\tmarginLeft: theme.spacing(1),\r\n\t\tmarginRight: theme.spacing(1),\r\n\t\twidth: 'auto',\r\n\t},\r\n}));\r\n\r\nexport default function TimePickers(props) {\r\n\tconst classes = useStyles();\r\n\tconst [value, setValue] = React.useState('');\r\n\tconst {index, response} = props\r\n\r\n\tuseEffect(() => {\r\n\t\tif (response) {\r\n\t\t\tsetValue(response)\r\n\t\t}\r\n\t}, [index, response])\r\n\r\n\tconst handleChange = (event) => {\r\n\t\tsetValue(event.target.value)\r\n\t\tprops.returnAnswer(event.target.value, index, event.target.value)\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h4>{props.title}</h4>\r\n\t\t\t<form className={classes.container} noValidate>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tid={\"time\" + index}\r\n\t\t\t\t\tlabel=\"Время\"\r\n\t\t\t\t\ttype=\"time\"\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tclassName={classes.textField}\r\n\t\t\t\t\tInputLabelProps={{\r\n\t\t\t\t\t\tshrink: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tInputProps={{disableUnderline: true}}\r\n\t\t\t\t\tdisabled={props.locked ? true : false}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}","import React, {useEffect, useState} from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\nexport default function CheckboxesGroup(props) {\r\n    const [state, setState] = React.useState({});\r\n    const [ready, setReady] = useState(false)\r\n    const {index, answers, required, response, locked} = props\r\n\r\n    useEffect(() => {\r\n\t\tif (response) {\r\n            setState(response)\r\n            let a = {}\r\n            answers.forEach((answer, i) => {\r\n                if (response[answer]) {\r\n                    a[answer] = response[answer]\r\n                }\r\n                else {\r\n                    a[answer] = false\r\n                }\r\n            })\r\n            setState(a)\r\n            props.returnAnswer(a, index)\r\n        }\r\n        else {\r\n            let a = {}\r\n            answers.forEach((answer, i) => a[answer] = false)\r\n            props.returnAnswer(a, index)\r\n            \r\n        }\r\n        setReady(true)\r\n        console.log(state)\r\n    }, [response, answers])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.returnAnswer({...state, [event.target.name]: event.target.checked}, index)\r\n    };\r\n\r\n    return (\r\n        ready ?\r\n        <div>\r\n            <Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{props.title}</Typography>\r\n            <FormControl component=\"fieldset\" disabled={locked}>\r\n                <FormLabel component=\"legend\">Выберите один или несколько вариантов</FormLabel>\r\n                <FormGroup>\r\n                    {answers.map((el, i) => (\r\n                        <FormControlLabel\r\n                            key={i}\r\n                            control={<Checkbox checked={state[el]} onChange={handleChange} name={el} />}\r\n                            label={el}\r\n                        />\r\n                    ))}\r\n                </FormGroup>\r\n            </FormControl>\r\n        </div> : null\r\n    );\r\n}\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport TextInput from \"../form/textInput\";\r\nimport SelectBox from \"../form/selectBox\";\r\nimport RadioButton from \"../form/radiobutton\";\r\nimport TimePickers from \"../form/timePickers\";\r\nimport Checkbox from \"../form/checkbox\"\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Profile = () => {\r\n    const [questions, setQuestions] = useState([])\r\n    const [answers, setAnswers] = useState({})\r\n    const [forms, setForms] = useState([])\r\n    const [uploaded, setUploaded] = useState(false)\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [userData, setUserData] = useState({})\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        let user = {}\r\n        if (currentUser) {\r\n            firebase.firestore().collection(\"users\").doc(currentUser.uid).get().then(doc => {\r\n                setUserData(doc.data())\r\n                user = doc.data()\r\n            }).then(() => {\r\n                firebase.firestore().collection(\"profileTemplate\").doc(\"Template\").get().then(doc => {\r\n                    console.log(JSON.stringify(doc.data()))\r\n                    setQuestions(doc.data().questions)\r\n                    console.log(doc.data().questions)\r\n                    const forms = doc.data().questions.map((el, i) => {\r\n                        let response = null\r\n                        if (user[el.key]) {\r\n                            console.log(user[el.key])\r\n                            response = user[el.key]\r\n                        }\r\n                        if (el.type === 'input') {\r\n                            return <TextInput key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'select') {\r\n                            return <SelectBox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'radio') {\r\n                            return <RadioButton key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'time') {\r\n                            return <TimePickers key={\"profile_\" + i} index={i} title={el.question} response={response} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else if (el.type === 'checkbox') {\r\n                            return <Checkbox key={\"profile_\" + i} index={i} title={el.question} response={response} answers={el.answers} returnAnswer={returnAnswer} required={el.required} />\r\n                        }\r\n                        else {\r\n                            return null\r\n                        }\r\n                    })\r\n                    setForms(forms)\r\n                })\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    const returnAnswer = (answer, index) => {\r\n        const tmp = answers\r\n        tmp[index] = answer\r\n        setAnswers(tmp)\r\n        console.log(answers)\r\n    }\r\n\r\n    const saveToFirebase = () => {\r\n        let mergedAnswers = {}\r\n        questions.forEach((q, i) => {\r\n            if (answers[i]) {\r\n                mergedAnswers[q.key] = answers[i]\r\n            }\r\n        })\r\n\r\n        firebase.firestore().collection(\"users\").doc(currentUser.uid).update({\r\n            // profileAnswers: answers,\r\n            ...mergedAnswers\r\n        }).then(() => setUploaded(true))\r\n    }\r\n\r\n    // const addCaseId = () => {\r\n    //     firebase.firestore().collection(\"tasks\").where(\"type\", \"==\", \"Поиск контактных данных\").get().then(snap => {\r\n    //         snap.forEach( async doc => {\r\n    //             await firebase.firestore().collection(\"tasks\").doc(doc.id).update({case_id: doc.id})\r\n    //             console.log(doc.id)\r\n    //         })\r\n    //     })\r\n    // }\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid style={{ padding: 30 }}>\r\n                {redirect && <Redirect to=\"/\" />}\r\n                {forms}\r\n                <Grid container style={{ padding: 20 }} justify=\"center\">\r\n                    <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 10 }} onClick={saveToFirebase}>Отправить</Button>\r\n                    {uploaded && <Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 10 }} onClick={() => setRedirect(true)} >На главную</Button>}\r\n                </Grid>\r\n\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n                <br />\r\n                <Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, complete, type, language, description, id, cardColor, sendRequest, disabled } = props\r\n\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{redirect && <Redirect to={\"/tasks/\" + id} />}\r\n\t\t\t<Card className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\t\tСдано\r\n\t\t\t\t\t\t</Typography>}\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t\t#{type}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\tЗадание: {description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions>\r\n\t\t\t\t\t{sendRequest ?\r\n\t\t\t\t\t\t<Button variant=\"contained\" disabled={disabled} color=\"primary\" size=\"small\" onClick={() => sendRequest(type, id)}>{\"Получить задание\"}</Button>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={() => setRedirect(true)}>{\"Открыть\"}</Button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import React, {useState, useEffect, useContext} from 'react'\r\nimport firebase, {signInWithGoogle} from '../../util/Firebase'\r\nimport {AuthContext} from \"../../util/Auth\";\r\nimport {Grid, Typography} from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport TaskCard from './Card'\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TabPanel(props) {\r\n    const {children, value, index, ...other} = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\n\r\nconst Tasks = (props) => {\r\n    const classes = useStyles()\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [submittedTasks, setSubmitted] = useState(null)\r\n    const [quickTasks, setQuickTasks] = useState(null)\r\n    const {currentUser} = useContext(AuthContext);\r\n    const [value, setValue] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            let submitted = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"tasks\").where(\"assigned_users\", \"array-contains\", currentUser.uid).get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        console.log(doc.id, \" => \", doc.data());\r\n                        if (doc.data().is_complete) {\r\n                            submitted.push({id: doc.id, ...doc.data()})\r\n                        } else {\r\n                            tasks.push({id: doc.id, ...doc.data()})\r\n                        }\r\n\r\n                    });\r\n                })\r\n                .then(() => {\r\n                    setTasks(tasks)\r\n                    setSubmitted(submitted)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n            {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n\r\n            {/*<Typography variant=\"h4\">Задания</Typography>*/}\r\n            <div className={classes.root}>\r\n                <Paper position=\"static\" color=\"default\">\r\n                    <Tabs value={value} onChange={handleChange} variant=\"fullWidth\" centered\r\n                          aria-label=\"simple tabs example\">\r\n                        <Tab label=\"Невыполненные\" {...a11yProps(0)}/>\r\n                        <Tab label=\"Выполненные\" {...a11yProps(1)}/>\r\n                        {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                    </Tabs>\r\n                </Paper>\r\n            </div>\r\n            <TabPanel value={value} index={0}>\r\n                {allTasks && allTasks.map((task, i) => (\r\n                    <Grid key={'active_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n\r\n            <TabPanel value={value} index={1}>\r\n                {submittedTasks && submittedTasks.map((task, i) => (\r\n                    <Grid key={'submitted_task_' + i} style={{padding: 10}}>\r\n                        <TaskCard title={task.title} complete={task.is_complete} description={task.description}\r\n                                  type={task.type} id={task.id}/>\r\n                    </Grid>\r\n                ))}\r\n            </TabPanel>\r\n           {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Tasks","import React, { useEffect } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\n\r\nfunction BasicTextFields(props) {\r\n\r\n\tconst {title} = props\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Typography variant=\"h6\" style={{marginBottom: 0, marginTop: 20}}>{title}</Typography>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default BasicTextFields","import React, { forwardRef } from 'react'\r\n\r\nimport TextInput from \"./textInput\";\r\nimport SelectBox from \"./selectBox\";\r\nimport RadioButton from \"./radiobutton\";\r\nimport TimePickers from \"./timePickers\";\r\nimport Checkbox from \"./checkbox\"\r\nimport Text from \"./text\"\r\nimport File from \"./file\"\r\n\r\nconst Form = forwardRef((props, ref) => {\r\n\r\n    const { question, index, response, uploadsRef, returnAnswer, locked, askFeedback, saveQuestionFeedback, id, prevTaskId, returnFile, uploadFilesData } = props\r\n\r\n    if (question.type === 'input') {\r\n        return <TextInput\r\n            key={index}\r\n            // ref={ref}\r\n            index={index}\r\n            title={question.title}\r\n            response={response}\r\n            returnAnswer={returnAnswer}\r\n            required={question.required}\r\n            locked={locked}\r\n            askFeedback={askFeedback}\r\n            feedbackType={question.feedback_type}\r\n            saveQuestionFeedback={saveQuestionFeedback}\r\n            id={id}\r\n            prevTaskId={prevTaskId}\r\n            uploadFilesData={uploadFilesData}\r\n            uploadsRef={uploadsRef}\r\n            returnFile={returnFile}\r\n            attachMaterials={question.attachMaterials}\r\n        />\r\n    }\r\n    else if (question.type === 'select') {\r\n        return <SelectBox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'radio') {\r\n        return <RadioButton key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'time') {\r\n        return <TimePickers key={index} index={index} title={question.title} response={response} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'checkbox') {\r\n        return <Checkbox key={index} index={index} title={question.title} response={response} answers={question.answers} returnAnswer={returnAnswer} required={question.required} locked={locked} />\r\n    }\r\n    else if (question.type === 'text') {\r\n        return <Text key={index} title={question.title} />\r\n    }\r\n    else if (question.type === 'file') {\r\n        return <File key={index} index={index} id={id} title={question.title} returnFile={returnFile} locked={locked} askFeedback={askFeedback} feedbackType={question.feedback_type} saveQuestionFeedback={saveQuestionFeedback} prevTaskId={prevTaskId} />\r\n    }\r\n    else {\r\n        return null\r\n    }\r\n\r\n})\r\n\r\n\r\nexport default Form\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default function AlertDialog(props) {\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={props.state}\r\n        onClose={props.handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.content}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n          {props.hideActions ? \"\" :\r\n              props.showOk ?\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleOk} color=\"primary\">\r\n                          Ok\r\n                      </Button>\r\n                  </DialogActions>\r\n                  :\r\n                  <DialogActions>\r\n                      <Button onClick={props.handleClose} color=\"primary\">\r\n                          Отмена\r\n                      </Button>\r\n                      <Button onClick={props.dialogFunction} color=\"primary\" autoFocus>\r\n                          Подтвердить\r\n                      </Button>\r\n                  </DialogActions>}\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\n\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst Tasks = () => {\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst getQuestions = async (taskID) => {\r\n\t\t\tlet q = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn q\r\n\t\t}\r\n\r\n\r\n\t\tconst getResponses = async (taskID) => {\r\n\t\t\tlet r = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\treturn r\r\n\t\t}\r\n\r\n\r\n\t\tconst getSameCaseTasks = async () => {\r\n\t\t\tlet sameCaseTasks = []\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t\t\t\treturn doc.data()\r\n\t\t\t}).then(async data => {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t\t\t\t\tsnap.forEach(doc => {\r\n\t\t\t\t\t\tif (doc.id !== id) {\r\n\t\t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn sameCaseTasks\r\n\t\t}\r\n\r\n\t\tconst getForms = async () => {\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\t\t\tsetForms(null)\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t\t\t\tif (doc.data().status === 'complete') {\r\n\t\t\t\t\tlocked = true\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlocked = false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet sq = []\r\n\t\t\tlet sr = []\r\n\r\n\t\t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t\t\tsetCaseTasks(sameCaseTasks)\r\n\t\t\tif (sameCaseTasks.length > 0) {\r\n\t\t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getQuestions(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t\t\t\t\treturn getResponses(t.id)\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log(ques)\r\n\t\t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t\t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\r\n\t\t\t\tconsole.log(sq)\r\n\t\t\t\tconsole.log(sr)\r\n\t\t\t}\r\n\r\n\t\t\tlet sf = sq.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tsr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t\t\t})\r\n\r\n\t\t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\r\n\r\n\t\t\tlet q = await getQuestions(id)\r\n\t\t\tlet r = await getResponses(id)\r\n\r\n\r\n\t\t\tsetQuestions(q)\r\n\t\t\tsetResponses(r)\r\n\r\n\r\n\t\t\t// let newQ = sq.concat(q)\r\n\t\t\t// let newR = sr.concat(r)\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t\t\t\t\t\tquestion={el.data}\r\n\t\t\t\t\t\tindex={i}\r\n\t\t\t\t\t\tresponse={response}\r\n\t\t\t\t\t\treturnFile={returnFile}\r\n\t\t\t\t\t\treturnAnswer={returnAnswer}\r\n\t\t\t\t\t\tid={el.questionId}\r\n\t\t\t\t\t\tlocked={locked}\r\n\t\t\t\t\t\t// ref={uploadsRef}\r\n\t\t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\tlet newF = sf.concat(f)\r\n\t\t\tsetForms(newF)\r\n\t\t}\r\n\t\tif (currentUser) {\r\n\t\t\tgetForms()\r\n\t\t}\r\n\t}, [currentUser, id, lockButton])\r\n\r\n\r\n\tconst returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t}\r\n\r\n\tconst returnFile = (file, questionId) => {\r\n\t\tlet arr = [...file]\r\n\t\tlet tmp = files\r\n\t\ttmp[questionId] = arr\r\n\t\tsetFiles(tmp)\r\n\t\tconsole.log([...file], questionId)\r\n\t}\r\n\r\n\tconst upload = async () => {\r\n\t\t// uploadsRef.current.startUpload()\r\n\t\tif (Object.keys(files).length > 0) {\r\n\t\t\tconsole.log('files')\r\n\t\t\tsetUploading(true)\r\n\t\t\tfor (const [key, value] of Object.entries(files)) {\r\n\t\t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t\t\t\tawait Promise.all(value.map(async v => {\r\n\t\t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t\t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t\t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t\t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\tsetUploaded(true)\r\n\t\t\tsetUploading(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t\tif (previousTaskId) {\r\n\t\t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t\t\t\t.add({\r\n\t\t\t\t\tanswer: data.reason,\r\n\t\t\t\t\ttext: data.text,\r\n\t\t\t\t\tuser_id: currentUser.uid,\r\n\t\t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => setOpenSnackbar(true))\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t\t}\r\n\t}\r\n\r\n\tconst saveToFirebase = async (lock) => {\r\n\t\tawait upload()\r\n\t\tquestions.forEach(async (q, i) => {\r\n\t\t\tif (answers[i] || answers[i] === \"\") {\r\n\t\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (lock) {\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t\t\tsetLock(true)\r\n\t\t\tconsole.log(\"Task Locked\")\r\n\t\t\tsetDialog(false)\r\n\t\t}\r\n\t}\r\n\r\n\tconst uploadFilesData = async (filename, url, questionId) => {\r\n\t\tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t\tconsole.log(\"Файл отправлен\")\r\n\t\tif (filename && url) {\r\n\t\t\trootRef.set(\r\n\t\t\t\t{\r\n\t\t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t\t\t\t}, { merge: true }\r\n\t\t\t).then(() => console.log('super'))\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\tsetFeedback({})\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t\t\tsetReleaseFeedbackData(doc.data())\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst releaseTask = () => {\r\n\t\tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t\t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetDialog(false)\r\n\t\t\t\t\tsetLock(true)\r\n\t\t\t\t}))\r\n\t\t// alert(feedbackValue)\r\n\t}\r\n\r\n\tconst handleFeedbackSave = (value) => {\r\n\t\tsetFeedback(value)\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thideActions={uploading || uploaded}\r\n\t\t\t\t\ttitle={uploading ? \"Загрузка файлов\" : uploaded ? \"Файлы загружены\" : \"Отправить задание?\"}\r\n\t\t\t\t\tcontent={uploading ? <CircularProgress /> : uploaded ? \"Спасибо\" : \"Вы собираетесь отправить задание. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={() => saveToFirebase(true)} />}\r\n\t\t\t\t{dialogType === 'release' && <DialogFeedback\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\tfeedbackValue={feedbackValue}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\ttitle={releaseFeedbackData.title}\r\n\t\t\t\t\tdialogFunction={releaseTask}\r\n\t\t\t\t\tanswers={releaseFeedbackData.answers}\r\n\t\t\t\t\tdescription={releaseFeedbackData.description}\r\n\t\t\t\t\treturnFeedback={handleFeedbackSave} />}\r\n\t\t\t\t{redirect && <Redirect to=\"/tasks\" />}\r\n\t\t\t\t<Snackbar\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'left',\r\n\t\t\t\t\t}}\r\n\t\t\t\t\topen={openSnackbar}\r\n\t\t\t\t\tautoHideDuration={6000}\r\n\t\t\t\t\tonClose={handleCloseSnackbar}\r\n\t\t\t\t\tmessage=\"Фидбек отправлен\"\r\n\t\t\t\t\taction={\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>\r\n\t\t\t\t\t\t\t\t<CloseIcon fontSize=\"small\" />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} */}\r\n\t\t\t\t{forms}\r\n\t\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>\r\n\t\t\t\t\t{!lockButton &&\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t</div>}\r\n\t\t\t\t</Grid>\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default Tasks","import React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Card from '../Tasks/Card'\r\nimport { Box, Grid, Typography } from '@material-ui/core'\r\nimport { set } from 'immutable';\r\n\r\n\r\nconst Case = (props) => {\r\n    const { caseId, userRanks } = props\r\n    const [allTasks, setTasks] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [disableCase, setDisable] = useState(false)\r\n    const [message, setMessage] = useState('')\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let tasks = []\r\n            console.log(\"Fired\")\r\n            firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").doc(caseId).collection(\"stages\").get()\r\n                .then((querySnapshot) => {\r\n                    querySnapshot.forEach((doc) => {\r\n                        // before change\r\n                        //tasks.push({ id: doc.id, ...doc.data() }) \r\n\r\n                        //after change\r\n                        const ranks = doc.data().ranks\r\n                        console.log('RANKS')\r\n                        console.log(ranks)\r\n                        console.log(userRanks)\r\n                        // if (ranks && userRanks.some(userRank => ranks.includes(userRank))) {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        // }\r\n                        // else {\r\n                        //     tasks.push({ id: doc.id, ...doc.data(), disabled: true })\r\n                        //     setMessage(<Typography color=\"error\" display=\"block\">Получите достижение <Typography component=\"span\" display=\"inline\" color=\"primary\" align=\"justify\">Первопроходец Battle For Azeroth</Typography> чтобы активировать следующее задание</Typography>)\r\n                        // }\r\n                        tasks.push({ id: doc.id, ...doc.data(), disabled: false })\r\n                        \r\n                    });\r\n                })\r\n                .then(() => {\r\n                    tasks.sort((a, b) => parseInt(a.order) - parseInt(b.order))\r\n                    setTasks(tasks)\r\n                    setReady(true)\r\n                })\r\n                .catch((error) => {\r\n                    console.log(\"Error getting documents: \", error);\r\n                });\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('tasks').where('assigned_users', 'array-contains', currentUser.uid).where('is_complete', '==', false).get().then(snap => {\r\n                if (snap.size < 3) {\r\n                    console.log(\"SIZE\", snap.size)\r\n                    setDisable(false)\r\n                }\r\n                else {\r\n                    setDisable(true)\r\n                    setMessage(<Typography color=\"error\">У вас есть активные задания. Сдайте или освободите их, чтобы получить новые.</Typography>)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser, disableCase, open])\r\n\r\n    const sendRequest = (type, task_type) => {\r\n        firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n            taskType: type,\r\n            status: \"pending\",\r\n            user: currentUser.uid,\r\n            case_type: caseId,\r\n            case_stage_id: task_type\r\n        }).then((doc) => {\r\n            setOpen(true)\r\n            console.log('sending request')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n                open={open}\r\n                autoHideDuration={6000}\r\n                onClose={handleClose}\r\n                message=\"Запрос отправлен\"\r\n                action={\r\n                    <React.Fragment>\r\n                        <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n\r\n            <Paper style={{ margin: '20px 5px', border: '1px grey solid' }}>\r\n                <Box style={{ padding: '10px 20px 0px' }}>\r\n                    <Box style={{ padding: '5px 10px 10px' }}>\r\n                        <Typography variant=\"h6\">{props.title}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 5px' }}>\r\n                        <Typography variant=\"body2\">{props.description}</Typography>\r\n                    </Box>\r\n                    <Box style={{ padding: '10px 10px 0px' }}>\r\n                        {message}\r\n                    </Box>\r\n                </Box>\r\n\r\n                <Grid container justify=\"center\" style={{ padding: 10 }}>\r\n                    {ready && allTasks.map((t, i) => (\r\n                        <Grid item key={i} style={{ padding: 10 }}>\r\n                            <Card title={t.title} description={t.description} type={t.type} id={t.id} cardColor=\"#F5F5F5\" sendRequest={sendRequest} disabled={disableCase || t.disabled} />\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Case","import React, { useState, useEffect, useContext } from 'react'\r\nimport firebase from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\nimport Case from './Case'\r\n\r\n\r\nconst Cases = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [allCases, setCases] = useState([])\r\n    const [ready, setReady] = useState(false)\r\n    const [userRanks, setRanks] = useState([])\r\n\r\n    // New\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            firebase.firestore().collection('users').doc(currentUser.uid).collection('user_private').doc('private').get().then(doc => {\r\n\r\n                if (doc && doc.exists) {\r\n\r\n                    let ranks = doc.data().ranks\r\n                    console.log(ranks)\r\n                    setRanks(ranks)\r\n                    getCasesFromFirebase(ranks)\r\n                }\r\n            })\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    // /////// Old ////////\r\n    // useEffect(() => {\r\n    //     if (currentUser) {\r\n    //         let cases = []\r\n    //         console.log(\"Fired\")\r\n    //         firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").get()\r\n    //             .then((querySnapshot) => {\r\n    //                 querySnapshot.forEach((doc) => {\r\n    //                     cases.push({ id: doc.id, ...doc.data() })\r\n    //                 });\r\n    //             })\r\n    //             .then(() => {\r\n    //                 setCases(cases)\r\n    //                 setReady(true)\r\n    //             })\r\n    //             .catch((error) => {\r\n    //                 console.log(\"Error getting documents: \", error);\r\n    //             });\r\n    //     }\r\n    // }, [currentUser])\r\n    // //////////////\r\n\r\n    const getCasesFromFirebase = (ranks) => {\r\n        let cases = []\r\n        console.log(\"Fired\")\r\n        firebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"cases\").where('ranks', 'array-contains-any', ranks).get()\r\n            .then((querySnapshot) => {\r\n                querySnapshot.forEach((doc) => {\r\n                    console.log(doc.data())\r\n                    cases.push({ id: doc.id, ...doc.data() })\r\n                });\r\n            })\r\n            .then(() => {\r\n                setCases(cases)\r\n                setReady(true)\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error getting documents: \", error);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {ready && allCases.map((c, i) => {\r\n                if (c.hide) {\r\n                    return null\r\n                }\r\n                else {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={c.id} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cases","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect } from 'react-router';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\troot: {\r\n\t\tmargin: 20,\r\n\t\twidth: 500,\r\n\t\t[theme.breakpoints.down(\"sm\")]: {\r\n\t\t\tmaxWidth: 300\r\n\t\t}\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n}));\r\n\r\nconst TaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst { title, description, id, setShown, shown, date } = props\r\n\r\n\tconst getFormatDate = (dt) => {\r\n\t\t// let month = '' + (d.getMonth() + 1)\r\n\t\t// let day = '' + d.getDate()\r\n\t\t// let year = d.getFullYear()\r\n\r\n\t\t// if (month.length < 2)\r\n\t\t// \tmonth = '0' + month;\r\n\t\t// if (day.length < 2)\r\n\t\t// \tday = '0' + day;\r\n\t\tlet formatDate = `${\r\n\t\t\tdt.getDate().toString().padStart(2, '0')}/${\r\n\t\t\t(dt.getMonth()+1).toString().padStart(2, '0')}/${\r\n\t\t\tdt.getFullYear().toString().padStart(4, '0')} ${\r\n\t\t\tdt.getHours().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getMinutes().toString().padStart(2, '0')}:${\r\n\t\t\tdt.getSeconds().toString().padStart(2, '0')}`\r\n\r\n\t\treturn formatDate\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Grid container justify=\"center\">\r\n\t\t\t<Card className={classes.root} style={shown ? { background: 'grey', opacity: 0.25 } : { background: 'lightblue' }} >\r\n\t\t\t\t<CardContent>\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</CardContent>\r\n\t\t\t\t<CardActions style={{ justifyContent: 'space-between' }}>\r\n\t\t\t\t\t<Typography style={{paddingLeft: 8}} variant=\"subtitle2\">{getFormatDate(date.toDate())}</Typography>\r\n\t\t\t\t\t<Button size=\"small\" onClick={() => setShown(id)}>{\"Просмотрено\"}</Button>\r\n\t\t\t\t</CardActions>\r\n\t\t\t</Card>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default TaskCard","import { Button, Grid, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Notification from './Notification'\r\n\r\n\r\nconst Notifications = () => {\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [cards, setCards] = useState([])\r\n\r\n    const updateFirestoreStatus = (id) => {\r\n        firebase.firestore().collection('notifications').doc(id).update({ shown: true })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            const unsubscribe = firebase.firestore().collection('notifications').where('user_id', 'array-contains', currentUser.uid).onSnapshot(async snap => {\r\n                let messages = []\r\n                snap.forEach((doc, i) => {\r\n                    messages.push({ id: doc.id, ...doc.data() })\r\n                })\r\n                console.log(messages[0].created_date.toDate())\r\n                messages.sort((a, b) => b.created_date.toDate() - a.created_date.toDate())\r\n                setCards(messages)\r\n            })\r\n            return () => unsubscribe()\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        <div>\r\n            <Typography variant=\"h5\" align=\"center\">Уведомления</Typography>\r\n            {cards.map((doc, i) => <Notification key={i} id={doc.id} index={i} date={doc.created_date} title={doc.title} setShown={updateFirestoreStatus} shown={doc.shown} description={doc.description} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Notifications","import React, { useContext, useEffect, useState } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport moment from 'moment';\r\nimport { v1 as uuid } from 'uuid'\r\nimport { Button, Grid, Link, makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst queryString = require('query-string');\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        marginTop: 20,\r\n        background: 'lightgreen',\r\n        height: 200,\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    }\r\n}));\r\n\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    const [token, setToken] = useState(null)\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [tgId, setTgId] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const makeToken = () => {\r\n            return uuid().toString() + '_' + Date.now()\r\n        }\r\n        let unsubscribeUser = () => {}\r\n        let unsubscribeUserPrivate = () => {}\r\n        if (currentUser) {\r\n            unsubscribeUser = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .onSnapshot(doc => {\r\n\r\n                    let oldToken;\r\n                    if (doc.exists && doc.data().tg_token) {\r\n                        oldToken = doc.data().tg_token\r\n                    } else {\r\n                        oldToken = false\r\n                    }\r\n\r\n                    console.log(oldToken)\r\n                    if (oldToken) {\r\n                        console.log(oldToken)\r\n                        let oldDate = parseInt(oldToken.substring(oldToken.indexOf('_') + 1))\r\n                        let date = moment().diff(oldDate, 'hours')\r\n                        console.log(date)\r\n                        if (date > 0) {\r\n                            let newToken = makeToken()\r\n                            firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\r\n                            setToken(newToken)\r\n                        } else {\r\n                            setToken(oldToken)\r\n                        }\r\n                    } else {\r\n                        console.log('no token')\r\n                        let newToken = makeToken()\r\n                        firebase.firestore().collection('users').doc(currentUser.uid).update({tg_token: newToken})\r\n                        setToken(newToken)\r\n                    }\r\n                })\r\n            unsubscribeUserPrivate = firebase.firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    console.log(\"TGID: \", doc.data().tg_id)\r\n                    if (doc.exists && \"tg_id\" in doc.data()) {\r\n                        console.log(\"TGID: \", doc.data().tg_id)\r\n                        setTgId(doc.data().tg_id)\r\n                    }\r\n                })\r\n        }\r\n        return () => {\r\n            unsubscribeUser()\r\n            unsubscribeUserPrivate()\r\n        }\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        if (currentUser) {\r\n            let urlString = queryString.parse(window.location.search)\r\n            if (urlString.rank) {\r\n                console.log(urlString.rank)\r\n                firebase.firestore().collection('schema').doc('structure').collection('ranks').doc(urlString.rank).get().then(doc => {\r\n                    if (doc.exists) {\r\n                        console.log('creating request')\r\n                        firebase.firestore().collection('rank_requests').add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            user_id: currentUser.uid,\r\n                            processed: false,\r\n                            rank: doc.id\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('no rank')\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }, [currentUser])\r\n\r\n    return (\r\n        currentUser ?\r\n            <Grid>\r\n                <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                    <Link variant=\"h5\" align=\"center\"\r\n                          href={\"https://kloopmedia.github.io/Journal/#/p/elections_monitoring\"}>ФОРМЫ ДЛЯ НАБЛЮДЕНИЯ НА\r\n                        ВЫБОРАХ</Link>\r\n                </Grid>\r\n                {tgId === \"\" ?\r\n                    <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\" className={classes.root}>\r\n                        <Typography style={{paddingBottom: 10}} variant=\"h5\" align=\"center\">Вы можете связать свой\r\n                            аккаунт с нашим Телеграм-ботом. Для этого нажмите на ссылку ниже.</Typography>\r\n                        {token ? <Link variant=\"h5\" href={\"https://telegram.me/journal_tg_bot?start=\" + token}>Ссылка на\r\n                                бот</Link>\r\n                            : <Typography variant=\"body2\" align=\"center\">Если ссылка не создалась в течение 5 секунд,\r\n                                перезагрузите страницу</Typography>}\r\n                    </Grid>\r\n                    :\r\n                    null}\r\n            </Grid>\r\n            :\r\n            <Grid container direction=\"column\" style={{padding: 20}} justify=\"center\">\r\n                <Typography align=\"center\" variant=\"h3\">Регистрация</Typography>\r\n                <br/>\r\n                <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью\r\n                    аккаунта Google</Button>\r\n            </Grid>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function UserCard(props) {\r\n  const classes = useStyles();\r\n\r\n  console.log('TEST CARD')\r\n  console.log(props)\r\n\r\n  if(props.userInfo == {}){\r\n    return (<div></div>)\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n          id: {props.userInfo.id}\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n        {props.userInfo.surname} {props.userInfo.name}\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          Регион: {props.userInfo.district}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.phone}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.userInfo.email}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport UserCard from '../Moderator/UserCard'\r\n\r\n\r\nconst ModeratedTask = (props) => {\r\n\r\n\tconst [tasks, setTasks] = React.useState([]);\r\n\tconst [taskInfo, setTaskInfo] = useState({})  \r\n\t\r\n\tlet userInfo = {}\r\n\r\n    const [questions, setQuestions] = useState([])    \r\n    const [responses, setResponses] = useState([])    \r\n    const [answers, setAnswers] = useState({})    \r\n    const [forms, setForms] = useState(<div></div>)\r\n    \r\n\tconst [pending, setPending] = useState(false)\r\n\tconst [passed, setPassed] = useState(false)\r\n\tconst [notPassed, setNotPassed] = useState(false)\r\n\tconst [verified, setVerified] = useState(false)\r\n\tconst [notVerified, setNotVerified] = useState(false)\r\n\r\n\tconst getReviewStatus = async () => {\r\n        firebase.firestore().collection(\"tasks\").doc(props.task.id).get().then(doc => {\r\n\t\t\t\t\r\n\t\t\tlet review_status = doc.data().review_status\r\n\t\t\t\r\n\t\t\tsetPending(review_status === 'pending')\r\n\t\t\tsetPassed(review_status === 'passed')\r\n\t\t\tsetNotPassed(review_status === 'not passed')\r\n\t\t\tsetVerified(review_status === 'verified')\r\n\t\t\tsetNotVerified(review_status === 'not verified')\t\t\t\r\n        })\r\n\t}\r\n\t\r\n\tconst getUserInfo = () => {\r\n\r\n\t\tif (taskInfo.assigned_users !== undefined && taskInfo.assigned_users.length > 0){\r\n\t\t\r\n\t\t\tlet item = props.users.find(item => item.id === taskInfo.assigned_users[0])\r\n\t\t\tif (item !== undefined){\r\n\t\t\t\tuserInfo = item\r\n\t\t\t}\t\t\t\t\r\n\t\t\telse{\r\n\t\t\t\tuserInfo = {}\r\n\t\t\t}\r\n\t\t}\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n\t\tconst getData = async () => {\r\n\t\t\tlet q = []\r\n\t\t\tlet r = []\r\n\t\t\tlet f = []\r\n\t\t\tlet locked = true\r\n\r\n\r\n\t\t\tconsole.log(\"HOOK\")\r\n\t\t\tgetReviewStatus()\t\t\r\n\t\t\t\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).get()\r\n\t\t\t\t.then(doc => {\t\t\t\t\r\n\t\t\t\t\tsetTaskInfo(doc.data())\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"questions\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetQuestions(q)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\r\n\t\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).collection(\"responses\").get()\r\n\t\t\t\t.then((querySnapshot) => {\r\n\t\t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t\t\t\t\t\t// console.log(doc.id, \" => \", doc.data());\r\n\t\t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.then(() => {\r\n\t\t\t\t\tsetResponses(r)\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t\t\t\t});\r\n\t\t\r\n\r\n\t\t\t//ЗАЛИПУХА!!!\r\n\t\t\tsetForms(<div></div>)\t\r\n\r\n\t\t\tf = q.map((el, i) => {\r\n\t\t\t\tlet response = null\r\n\t\t\t\t// console.log(i)\r\n\t\t\t\tr.forEach((res) => {\r\n\t\t\t\t\tif (el.questionId === res.responseId) {\r\n\t\t\t\t\t\tresponse = res.data.answer\r\n\t\t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t\t\t\t\t\t// console.log(res.data)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\treturn <Form key={i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={locked} />\r\n\t\t\t})\r\n\t\t\tsetForms(f)\r\n\t\t}\r\n\t\tif (props.task.id) {\r\n\t\t\tgetData()\r\n\t\t}\r\n\t}, [props.task.id])\r\n    \r\n    const returnAnswer = (answer, index) => {\r\n\t\tconst tmp = answers\r\n\t\ttmp[index] = answer\r\n\t\tsetAnswers(tmp)\r\n\t\t// console.log(answers)\r\n\t}\r\n\r\n\tconst handlePending = () => {\r\n\t\tupdateReviewStatus('pending')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handlePassed = () => {\r\n\t\tupdateReviewStatus('passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotPassed = () => {\r\n\t\tupdateReviewStatus('not passed')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleVerified = () => {\r\n\t\tupdateReviewStatus('verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\r\n\tconst handleNotVerified = () => {\r\n\t\tupdateReviewStatus('not verified')\r\n\t\tgetReviewStatus()\r\n\t}\r\n\t\r\n\tconst updateReviewStatus = async (review_status) => {\r\n\t\tawait firebase.firestore().collection(\"tasks\").doc(props.task.id).update({ review_status: review_status })\r\n\t}\r\n    \r\n    // console.log('TEST')\r\n    // console.log(tasks)\r\n\r\n\tgetUserInfo()\r\n\treturn (\r\n\t\t<Grid style={{ padding: 30 }}>\r\n\r\n\t\t\t<Grid container style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Button variant=\"contained\" color={pending ? \"secondary\" : '{}'} onClick={handlePending}>\r\n\t\t\t\t\tPENDING\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={passed ? \"secondary\" : '{}'} onClick={handlePassed}>\r\n\t\t\t\t\tPASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notPassed ? \"secondary\" : '{}'} onClick={handleNotPassed}>\r\n\t\t\t\t\tNOT PASSED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={verified ? \"secondary\" : '{}'} onClick={handleVerified}>\r\n\t\t\t\t\tVERIFIED\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button variant=\"contained\" color={notVerified ? \"secondary\" : '{}'} onClick={handleNotVerified}>\r\n\t\t\t\t\tNOT VERIFIED\r\n\t\t\t\t</Button>\r\n            </Grid>\r\n\r\n\t\t\t<Grid container justify = \"center\">\r\n                <UserCard userInfo={userInfo}> </UserCard>\r\n            </Grid>\r\n\r\n            {forms}\r\n            \r\n\r\n\t\t\t</Grid>\r\n\t);\r\n}\r\n\r\nexport default ModeratedTask","import React, {useState, useEffect} from 'react'\r\nimport ModeratedTask from './ModeratedTask'\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport {List} from \"immutable\"\r\n\r\nconst rowsPP = 1;\r\n\r\nconst PaginatedTasks= props => {\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(rowsPP);\r\n    const [dataSlice, setDataSlice] = useState([]);\r\n\r\n    const calculateSlice = (pageNumber, rowsPage, data) => {\r\n        const iData = List(data)\r\n        const numberOfPages = Math.floor(iData.size / rowsPage);\r\n        console.log(\"numberOfPages\", numberOfPages);\r\n        const start = pageNumber * rowsPage;\r\n        let end = iData.size\r\n        if (pageNumber !== numberOfPages - 1) {\r\n            end = (pageNumber + 1) * rowsPage;\r\n        }\r\n        console.log(\"Start\", start);\r\n        console.log(\"End\", end);\r\n        return data.slice(start, end)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setDataSlice(calculateSlice(newPage, rowsPerPage, props.data));\r\n        setPage(newPage);\r\n    };\r\n    const handleChangeRowsPerPage = (event) => {\r\n        // setPage(0);\r\n        // setRowsPerPage(event.target.value);\r\n        // setDataSlice(calculateSlice(0, event.target.value, props.data));\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Update the document title using the browser API\r\n        setPage(0)\r\n        setDataSlice(calculateSlice(0, rowsPP, props.data));\r\n    }, [props.data]);\r\n\r\n\r\n    const pagination = props.data.length > 0 && (\r\n        <Grid container justify = \"center\">\r\n        <TablePagination\r\n            justify=\"center\"\r\n            component=\"div\"\r\n            count={props.data.length}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            rowsPerPage={rowsPerPage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            labelRowsPerPage = 'По одной задаче на страницу!'\r\n        /></Grid>)\r\n\r\n\r\n    // console.log('PAGINATION')\r\n    // console.log(dataSlice)\r\n\r\n    const isAllowedToRenderTask = dataSlice[0] !== undefined\r\n    return (\r\n        <div>\r\n            {pagination}\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n                style={{minHeight: '100vh'}}>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container justify=\"center\" direction='column' spacing={1}>\r\n                       \r\n                            {isAllowedToRenderTask\r\n                                ? <Grid item>\r\n                                    <ModeratedTask \r\n                                        task={dataSlice[0]}\r\n                                        users={props.users}                                      \r\n                                    ></ModeratedTask>\r\n                                </Grid>\r\n                                : 'Выберите и примените фильтры!'\r\n                            }\r\n\r\n\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n            {pagination}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PaginatedTasks","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport Form from '../form/form'\r\nimport { Button, Grid, Typography } from '@material-ui/core';\r\n\r\nimport PaginatedTasks from '../Moderator/PaginatedTasks'\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst TasksObserver = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']   \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskTitles = ['ВСЕ', 'Задание № 1.1', 'Задание № 1.2', 'Задание № 1.3', 'Задание № 2.1', 'Задание № 2.2', 'Задание № 2.3', 'Задание 3.1', 'Задание 3.2', 'Задание 3.3']  \r\n\r\n    //TODO load from SCHEMA        \r\n    const taskReviewStatuses = ['ВСЕ', 'pending', 'passed', 'not passed', 'verified', 'not verified']\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [user, setUser] = React.useState('ВСЕ');\r\n    const [users, setUsers] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [taskTitle, setTaskTitle] = React.useState(taskTitles[0]);\r\n    const [taskReviewStatus, setTaskReviewStatus] = React.useState(taskReviewStatuses[0]);\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value); \r\n    };\r\n\r\n    const setTaskTitleHandler = (event) => {\r\n        setTaskTitle(event.target.value); \r\n    };\r\n\r\n    const setUserHandler = (event) => {\r\n        setUser(event.target.value); \r\n    };\r\n\r\n    const setTaskReviewStatusHandler = (event) => {\r\n        setTaskReviewStatus(event.target.value); \r\n    };    \r\n\r\n    const handleClickApplyFilters = (event) => {\r\n\r\n        getTasks()\r\n\r\n      }\r\n\r\n    \r\n    const getUsers = async () => {\r\n        let usersList = [{id: 'ВСЕ', name: 'ВСЕ', surname: ''}]\r\n        let usersRef = firebase.firestore().collection('users').orderBy(\"surname\")\r\n        await usersRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                usersList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setUsers(usersList)\r\n        })\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks')\r\n\r\n        // console.log('USER ID')\r\n        // console.log(user)\r\n\r\n        if(user != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"assigned_users\", \"array-contains\", user)\r\n        }\r\n\r\n        if(taskTitle != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"title\", \"==\", taskTitle)\r\n        }\r\n\r\n        if(taskType != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n\r\n        if(taskReviewStatus != 'ВСЕ'){\r\n            tasksRef = tasksRef.where(\"review_status\", \"==\", taskReviewStatus)\r\n        }\r\n\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({id: doc.id, ...doc.data()})\r\n            })\r\n\r\n            setTasks(tasksList)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {        \r\n        getUsers()        \r\n    }, [])   \r\n    \r\n    // console.log('USERS')\r\n    // console.log(users)\r\n\r\n\treturn (\r\n        <div>\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={user.value}\r\n                    onChange={setUserHandler}\r\n                    name=\"filterUser\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        users.map(userInfo => (\r\n                        <option value={userInfo.id}> {userInfo.surname} {userInfo.name}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по users</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskTitle}\r\n                    onChange={setTaskTitleHandler}\r\n                    name=\"filterTaskTitle\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTitles.map(taskTitle => (\r\n                        <option value={taskTitle}>{taskTitle}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по наименованию задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskType}\r\n                    onChange={setTaskTypeHandler}\r\n                    name=\"filterTaskType\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskTypes.map(taskType => (\r\n                        <option value={taskType}>{taskType}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <FormControl style={{width:'350px'}}>\r\n                <NativeSelect\r\n                    value={taskReviewStatus}\r\n                    onChange={setTaskReviewStatusHandler}\r\n                    name=\"filterReviewStatus\"\r\n                    //inputProps={{ 'aria-label': 'filterViolation' }}\r\n                >\r\n                    {\r\n                        taskReviewStatuses.map(taskReviewStatus => (\r\n                        <option value={taskReviewStatus}>{taskReviewStatus}</option>\r\n                    ))\r\n                    }\r\n                </NativeSelect>\r\n                 <FormHelperText>Выберите фильтр по review_status</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <Button\r\n                    style={{width:'350px'}}\r\n                    type ='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color= 'primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify = \"center\">\r\n                <PaginatedTasks data={tasks} users={users}></PaginatedTasks>\r\n            </Grid>\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default TasksObserver","import React, { useContext } from 'react'\r\nimport { signInWithGoogle } from '../../util/Firebase'\r\nimport { Button, Grid, Typography } from '@material-ui/core'\r\nimport { AuthContext } from '../../util/Auth';\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst Signin = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    if (currentUser) {\r\n        return <Redirect to={'/'} />;\r\n    }\r\n    return (\r\n        <Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n            <Typography align=\"center\" variant=\"h4\">Регистрация</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Нажмите на кнопку (Вход или Регистрация).</Typography>\r\n            <Typography variant=\"body1\" align=\"center\">Если у вас нет аккаунта Google, то создайте его.</Typography>\r\n            <br />\r\n            <Button size=\"large\" color=\"primary\" variant=\"contained\" onClick={signInWithGoogle}>Регистрация</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Signin","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const {currentUser} = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={routeProps =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/signin\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\n\r\nexport default PrivateRoute","import React, { forwardRef, useEffect, useRef, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Typography, Box, Button, Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        border: '2px grey solid',\r\n        padding: '0px 10px',\r\n        margin: 10,\r\n        background: 'yellow',\r\n\t\twidth: 700,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n    button: {\r\n        background: 'orange',\r\n        margin: '10px 0'\r\n    }\r\n\r\n}));\r\n\r\n\r\nconst BasicTextFields = forwardRef((props, ref) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('');\r\n\r\n    const { title, sendAnswer, taskId, questionId } = props\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Box display=\"flex\" style={{ marginBottom: 10, marginTop: 10 }}>\r\n                <Typography variant=\"h6\" style={{ paddingRight: 8 }}>{title}</Typography>\r\n            </Box>\r\n            <TextField\r\n                label=\"Мой ответ\"\r\n                value={value}\r\n                style={{ background: 'white' }}\r\n                onChange={handleChange}\r\n                multiline\r\n                rows={5}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n            />\r\n            <Grid container justify=\"flex-end\">\r\n                <Button className={classes.button} onClick={() => sendAnswer(taskId, questionId, value)}>Отправить</Button>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default BasicTextFields","import React, { useEffect, useState, useContext } from 'react';\r\nimport firebase from '../../util/Firebase'\r\n\r\nimport { Button, Grid, makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Card from './Card'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    select: {\r\n        margin: '20px 0',\r\n        width: 500,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            maxWidth: 300\r\n        }\r\n    },\r\n\r\n}));\r\n\r\nconst FAQ = (props) => {\r\n\r\n    // console.log('TEST FUNCT')\r\n    // console.log(props)\r\n\r\n    //TODO load from SCHEMA\r\n    const classes = useStyles();\r\n    const taskTypes = ['ВСЕ', 'Поиск контактных данных', 'interview']\r\n\r\n\r\n    const [tasks, setTasks] = React.useState([]);\r\n    const [taskType, setTaskType] = React.useState(taskTypes[0]);\r\n    const [questions, setQuestions] = useState([])\r\n\r\n    const setTaskTypeHandler = (event) => {\r\n        setTaskType(event.target.value);\r\n    };\r\n\r\n    const handleClickApplyFilters = async (event) => {\r\n        let tasklist = await getTasks()\r\n        getQuestions(tasklist)\r\n    }\r\n\r\n    const getTasks = async () => {\r\n        let tasksList = []\r\n        let tasksRef = firebase.firestore().collection('tasks').where('case_type', '==', 'FAQ').where('is_complete', '==', false)\r\n\r\n        if (taskType !== 'ВСЕ') {\r\n            tasksRef = tasksRef.where(\"type\", \"==\", taskType)\r\n        }\r\n        console.log('fired')\r\n        await tasksRef.get().then(docs => {\r\n            docs.forEach(doc => {\r\n                tasksList.push({ id: doc.id, ...doc.data() })\r\n            })\r\n            tasksList.sort((a, b) => b.timestamp.toDate() - a.timestamp.toDate())\r\n            setTasks(tasksList)\r\n        })\r\n        return tasksList\r\n    }\r\n\r\n    const getQuestions = async (taskList) => {\r\n        let questionList = await taskList.map(async task => {\r\n            let arr = []\r\n            await firebase.firestore().collection('tasks').doc(task.id).collection('questions').get().then(snap => {\r\n                snap.forEach(doc => {\r\n                    arr.push({ taskId: task.id, questionId: doc.id, timestamp: task.timestamp.toDate(), ...doc.data() })\r\n                })\r\n            })\r\n            return arr\r\n        })\r\n        Promise.all(questionList).then(q => setQuestions([].concat.apply([], q)))\r\n    }\r\n\r\n    const sendAnswer = (taskId, questionId, answer) => {\r\n        firebase.firestore().collection('tasks').doc(taskId).collection('responses').doc(questionId).set({ answer: answer })\r\n        console.log(taskId, answer)\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid container justify=\"center\">\r\n                <FormControl className={classes.select}>\r\n                    <NativeSelect\r\n                        value={taskType}\r\n                        onChange={setTaskTypeHandler}\r\n                        name=\"filterTaskType\"\r\n                    >\r\n                        {\r\n                            taskTypes.map((taskType, i) => (\r\n                                <option key={taskType} value={taskType}>{taskType}</option>\r\n                            ))\r\n                        }\r\n                    </NativeSelect>\r\n                    <FormHelperText>Выберите фильтр по типу задачи</FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\" className={classes.select}>\r\n                <Button\r\n                    style={{ width: '350px' }}\r\n                    type='number'\r\n                    variant=\"contained\"\r\n                    onClick={handleClickApplyFilters}\r\n                    color='primary'\r\n                    //className={classes.button}\r\n                    startIcon={<SearchIcon />}\r\n                >\r\n                    Применить фильтры\r\n                </Button>\r\n            </Grid>\r\n\r\n            <Grid container justify=\"center\">\r\n                {questions\r\n                    ? questions.map((task, i) => <Card key={'task_' + i} taskId={task.taskId} questionId={task.questionId} title={task.title} sendAnswer={sendAnswer} />)\r\n                    : <Typography style={{ padding: 30 }}>Нет новых вопросов</Typography>}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FAQ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { Redirect, useHistory } from 'react-router';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport firebase from \"../../util/Firebase\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\tminWidth: 250\r\n\t},\r\n\tbullet: {\r\n\t\tdisplay: 'inline-block',\r\n\t\tmargin: '0 2px',\r\n\t},\r\n\ttitle: {\r\n\t\tfontSize: 14,\r\n\t},\r\n\tpos: {\r\n\t\tmarginBottom: 12,\r\n\t},\r\n});\r\n\r\nconst JSchemaTaskCard = (props) => {\r\n\tconst classes = useStyles();\r\n\tconst history = useHistory();\r\n\tconst { complete, id, cardColor, cardType, stage, stageID, task, user, pCase } = props\r\n\r\n\tconst [waiting, setWaiting] = useState(false)\r\n\tconst [newTaskId, setNewTaskId] = useState(null)\r\n\r\n\tconst handleOpen = () => {\r\n\t\tif (cardType === \"creatable\" || cardType === \"selectable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tsendCallbackRequest()\r\n\t\t} else {\r\n\t\t\thistory.push(\"/t/\" + id)\r\n\t\t\t//setRedirect(true)\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleOpenOld = () => {\r\n\t\thistory.push(\"/tasks/\" + id)\r\n\t}\r\n\r\n\tconst sendCallbackRequest = () => {\r\n\t\tsetWaiting(true)\r\n\t\tlet callback = \"\"\r\n\t\tlet callbackType = \"\"\r\n\t\tlet callbackName = \"\"\r\n\t\tif (cardType === \"creatable\" || cardType === \"creatableUnlim\") {\r\n\t\t\tcallback = uuidv4()\r\n\t\t\tcallbackType = \"callbackId\"\r\n\t\t\tcallbackName = \"callbackId\"\r\n\t\t} else if (cardType === \"selectable\") {\r\n\t\t\tcallback = id\r\n\t\t\tcallbackName = \"taskId\"\r\n\t\t\tcallbackType = firebase.firestore.FieldPath.documentId()\r\n\t\t}\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"task_requests\")\r\n\t\t\t.doc(user.uid)\r\n\t\t\t.collection(\"requests\")\r\n\t\t\t.add({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\tuser: user.uid,\r\n\t\t\t\tcase_type: pCase,\r\n\t\t\t\tcase_stage_id: stageID,\r\n\t\t\t\t[callbackName]: callback\r\n\t\t\t}).then((doc) => {\r\n\t\t\t\tconst unsubscribe = firebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"assigned_users\", \"array-contains\", user.uid)\r\n\t\t\t\t\t.where(callbackType, \"==\", callback)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\") {\r\n\t\t\t\t\t\t\t\tif (change.doc.id) {\r\n\t\t\t\t\t\t\t\t\t//setNewTaskId(change.doc.id)\r\n\t\t\t\t\t\t\t\t\t//setRedirect(true)\r\n\t\t\t\t\t\t\t\t\tunsubscribe()\r\n\t\t\t\t\t\t\t\t\thistory.push(\"/t/\" + change.doc.id)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\r\n\t\t\t})\r\n\t}\r\n\r\n\tconst displayJSON = (cardData) => {\r\n\t\treturn Object.keys(cardData).map(stage => {\r\n\t\t\t// console.log(\"STAGE: \", stage)\r\n\t\t\treturn Object.keys(cardData[stage]).map(response => {\r\n\t\t\t\t// console.log(\"RESPONSE: \", response)\r\n\t\t\t\tif (response === \"attachedFiles\") {\r\n\t\t\t\t\t// console.log(\"FILES: \")\r\n\t\t\t\t\treturn <div key={stage + response}>Files</div>\r\n\t\t\t\t} else return (\r\n\t\t\t\t\t<typography variant=\"body2\" component=\"p\" key={stage + response}>\r\n\t\t\t\t\t\t{/* {console.log(\"TEXT: \", cardData[stage][response])} */}\r\n\t\t\t\t\t\t{JSON.stringify(cardData[stage][response], null, 2)}\r\n\t\t\t\t\t</typography>)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card key={id} className={classes.root} style={{ background: cardColor }}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n\t\t\t\t\t<Typography variant=\"h6\">\r\n\t\t\t\t\t\t{stage.title}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{complete && <Typography color=\"error\">\r\n\t\t\t\t\t\tСдано\r\n\t\t\t\t\t</Typography>}\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Typography variant=\"subtitle1\" className={classes.pos} color=\"textSecondary\">\r\n\t\t\t\t\t#{id}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"body2\" component=\"p\">\r\n\t\t\t\t\t{(task && task.cardData && (cardType === \"selectable\" || (stage && stage.showCard))) ?\r\n\t\t\t\t\t\tdisplayJSON(task.cardData)\r\n\t\t\t\t\t\t//JSON.stringify(task.cardData, null, 2)\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\"Задание: \" + stage.description}\r\n\t\t\t\t</Typography>\r\n\t\t\t</CardContent>\r\n\t\t\t<CardActions>\r\n\t\t\t\t{waiting ?\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<Grid>\r\n\t\t\t\t\t\t<Button size=\"small\" onClick={handleOpen}>{(cardType === \"creatableUnlim\") ? \"СОЗДАТЬ НОВУЮ ФОРМУ\" : \"Открыть\"}</Button>\r\n\t\t\t\t\t\t{/* <Button size=\"small\" onClick={handleOpenOld}>Открыть (Old)</Button> */}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t}\r\n\t\t\t</CardActions>\r\n\t\t</Card>\r\n\t);\r\n}\r\n\r\nexport default JSchemaTaskCard","import React, {useEffect, useState} from \"react\";\r\nimport firebase from \"firebase\";\r\nimport LinearProgressWithLabel from \"./LinearProgressWithLabel\";\r\nimport {cloneDeep} from \"lodash\";\r\n\r\n\r\nconst Loader = props => {\r\n    const [fileBeingUploaded, setFileBeingUploaded] = useState({})\r\n    //const [storedFiles, setStoredFiles] = useState({})\r\n\r\n    // useEffect(() => {\r\n    //     props.filesLinks.onSnapshot(doc => {\r\n    //         setStoredFiles(doc.data().contents)\r\n    //     });\r\n    // }, [props.filesLinks])\r\n\r\n\r\n    const upload = async files => {\r\n        await Promise.all(files.map(async file => {\r\n            const snap = props.storageRef.child(file.name).put(file)\r\n            setFileBeingUploaded(prevState => {\r\n                const update = {[file.name]: {status: \"loading\", progress: 0}}\r\n                return prevState ? {...prevState, ...update} : update\r\n            })\r\n\r\n            // Listen for state changes, errors, and completion of the upload.\r\n            snap.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\r\n                snapshot => {\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    setFileBeingUploaded(prevState => {\r\n                        const update = {[file.name]: {status: \"loading\", progress: progress}}\r\n                        return prevState ? {...prevState, ...update} : update\r\n                    })\r\n                    console.log('Upload is ' + progress + '% done');\r\n\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                }, error => {\r\n\r\n                    // A full list of error codes is available at\r\n                    // https://firebase.google.com/docs/storage/web/handle-errors\r\n                    switch (error.code) {\r\n                        case 'storage/unauthorized':\r\n                            // User doesn't have permission to access the object\r\n                            break;\r\n\r\n                        case 'storage/canceled':\r\n                            // User canceled the upload\r\n                            break;\r\n\r\n                        default:\r\n                            // Unknown error occurred, inspect error.serverResponse\r\n                            break;\r\n                    }\r\n                }, () => {\r\n                    // Upload completed successfully, now we can get the download URL\r\n                    snap.snapshot.ref.getDownloadURL().then(async downloadURL => {\r\n                        await props.filesLinks.set({contents: {[downloadURL]: {name: file.name, url: downloadURL}}},\r\n\t\t\t\t\t{merge: true})\r\n                        setFileBeingUploaded(prevState => {\r\n                            const newState = Object.assign({}, prevState)\r\n                            delete newState[file.name]\r\n                            return newState\r\n                        })\r\n                        console.log('File available at', downloadURL);\r\n                    });\r\n                });\r\n\r\n            // let url = await snap.ref.getDownloadURL()\r\n            // let url_wo_token = url.split(\"?\")[0]\r\n            // console.log(\"File uploaded: \", url)\r\n            // //await uploadFilesData(file.name, url_wo_token, key)\r\n        }));\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        console.log(\"Files selected: \", [...event.target.files,])\r\n        upload([...event.target.files])\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"file\"\r\n                onChange={handleChange}\r\n                multiple\r\n            />\r\n            {Object.keys(fileBeingUploaded).map(filename =>\r\n                <div key={filename}>\r\n                    <p>{filename}</p>\r\n                    <LinearProgressWithLabel value={fileBeingUploaded[filename].progress}/>\r\n                </div>\r\n\r\n            )}\r\n            {/*{storedFiles ? <p>Сохраненные файлы</p> : <p></p>}*/}\r\n            {/*{Object.keys(storedFiles).map(fileUrl =>*/}\r\n            {/*    <div key={fileUrl}>*/}\r\n            {/*        <a href={fileUrl}>{storedFiles[fileUrl].name}</a>*/}\r\n            {/*    </div>*/}\r\n            {/*)}*/}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader","import firebase from \"../../util/Firebase\";\r\nimport Loader from \"./Loader\";\r\nimport React, { useState } from \"react\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst CustomFileUpload = props => {\r\n\tconsole.log(\"All props: \", props)\r\n\tconsole.log(\"ID: \", props.taskID)\r\n\tconsole.log(\"Question ID: \", props.name)\r\n\tconsole.log(\"User UID: \", props.currentUserUid)\r\n\r\n\tconst [connectingTelegram, setConnectingTelegram] = useState(false)\r\n\tconst [telegramConnected, setTelegramConnected] = useState(false)\r\n\r\n\tlet pathToFolder = null\r\n\tlet handleTgConnectClick = null\r\n\tif (!props.disabled) {\r\n\t\tpathToFolder = firebase\r\n\t\t\t.storage()\r\n\t\t\t.ref(props.taskID)\r\n\t\t\t.child(props.name)\r\n\t\t\t.child(props.currentUserUid)\r\n\r\n\t\thandleTgConnectClick = async () => {\r\n\t\t\tsetConnectingTelegram(true)\r\n\t\t\tawait firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"users\")\r\n\t\t\t\t.doc(props.currentUserUid)\r\n\t\t\t\t.set({fileUpload: props.taskID + \"/\" + props.name }, {merge: true})\r\n\t\t\tsetConnectingTelegram(false)\r\n\t\t\tsetTelegramConnected(true)\r\n\r\n\t\t}\r\n\t}\r\n\tconst linksToFiles = firebase\r\n\t\t.firestore()\r\n\t\t.collection(\"tasks\")\r\n\t\t.doc(props.taskID)\r\n\t\t.collection(\"responses\")\r\n\t\t.doc(props.name)\r\n\r\n\tconsole.log(\"Props formData: \", props.formData)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{props.schema.title ? <div>{props.schema.title}</div> : <div></div>}\r\n\t\t\t{props.schema.description ? <div>{props.schema.description}</div> : <div></div>}\r\n\t\t\t{props.disabled ? null :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Loader storageRef={pathToFolder}\r\n\t\t\t\t\t\t\tfilesLinks={linksToFiles}/>\r\n\t\t\t\t\t{connectingTelegram ?\r\n\t\t\t\t\t\t<CircularProgress/>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\ttelegramConnected ?\r\n\t\t\t\t\t\t\t<div>Вы можете начать загрузку файлов через бота. Все файлы, отправляемые боту, будут сохраняться здесь. После загрузки файлов через бот, не забудьте вернуться сюда и нажать \"ОТПРАВИТЬ\". <a href=\"https://t.me/journal_tg_bot\">Перейти в бот.</a></div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<p>Вы так же можете загрузить сюда файлы через Телеграм-бота. Для этого нажмите кнопку ниже: </p>\r\n\t\t\t\t\t\t\t\t<button onClick={handleTgConnectClick}>Загрузка через бот</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{props.formData ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{Object.keys(props.formData).map(path =>\r\n\t\t\t\t\t\t<div key={path}>\r\n\t\t\t\t\t\t\t<a href={props.formData[path].url}>{props.formData[path].name}</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div></div>\r\n\t\t\t}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CustomFileUpload\r\n\r\n","const complexStateFirebaseUpdate = (snapshot, setFunction, subState) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                if (!newState[subState]) {\r\n                    newState[subState] = {}\r\n                }\r\n                newState[subState][change.doc.id] = change.doc.data()\r\n                // console.log(\"User stages: \", newState)\r\n                return newState\r\n            })\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[subState][change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nconst simpleStateFirebaseUpdate = (snapshot, setFunction) => {\r\n    snapshot.docChanges().forEach(change => {\r\n        if (change.type === \"added\" || change.type === \"modified\") {\r\n            setFunction(prevState => (\r\n                {...prevState, [change.doc.id]: change.doc.data()}\r\n            ))\r\n        }\r\n        if (change.type === \"removed\") {\r\n            setFunction(prevState => {\r\n                const newState = Object.assign({}, prevState)\r\n                delete newState[change.doc.id]\r\n                return newState\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nexport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate}","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\nimport { Redirect, useParams } from 'react-router';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport TaskCard from \"../Tasks/JSchemaCard\";\r\nimport { cloneDeep } from \"lodash\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport Case from '../Cases/Case'\r\n\r\nimport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate} from \"../../util/Utilities\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        paddingTop: 30,\r\n        flexGrow: 1\r\n    },\r\n});\r\n\r\nconst Page = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const { id } = useParams();\r\n\r\n    const classes = useStyles()\r\n\r\n    const [pageData, setPageData] = useState({})\r\n    const [userRanks, setUserRanks] = useState([])\r\n    const [userCases, setUserCases] = useState({})\r\n    const [allCases, setAllCases] = useState({})\r\n    const [userTasks, setUserTasks] = useState({})\r\n    const [filteredStages, setFilteredStages] = useState({})\r\n    const [caseData, setCaseData] = useState({})\r\n    const [caseSelector, setCaseSelector] = useState({})\r\n    const [caseSelectorResponse, setCaseSelectorResponse] = useState({})\r\n    //const [unlimStages, setUnlimStages] = useState({})\r\n    const [tabValue, setTabValue] = useState(0)\r\n    const [availableStages, setAvailableStages] = useState({})\r\n    const [bgStages, setBgStages] = useState({})\r\n    const [filterFormData, setFilterFormData] = useState({})\r\n    const [availableTasks, setAvailableTasks] = useState({})\r\n    const [userRanksDescriptions, setUserRanksDescriptions] = useState({})\r\n    const [filterSettings, setFilterSettings] = useState(() => { })\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(\"Page id: \", id)\r\n        console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('pages')\r\n                .doc(id)\r\n                .onSnapshot(doc => {\r\n                    setPageData(doc.data())\r\n                    console.log(\"Page data: \", doc.data())\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id])\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Page id: \", id)\r\n        // console.log(\"Current user: \", currentUser)\r\n        let unsubscribe = () => { }\r\n        if (currentUser && pageData && pageData.ranks) {\r\n            unsubscribe = firebase\r\n                .firestore()\r\n                .collection('users')\r\n                .doc(currentUser.uid)\r\n                .collection(\"user_private\")\r\n                .doc(\"private\")\r\n                .onSnapshot(doc => {\r\n                    setUserRanks(intersection(doc.data().ranks, pageData.ranks))\r\n                    // console.log(\"User ranks: \", doc.data().ranks)\r\n                })\r\n        }\r\n        return unsubscribe\r\n    }, [currentUser, id, pageData])\r\n\r\n\r\n    useEffect(() => {\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0) {\r\n            setUserCases({})\r\n            setUserTasks({})\r\n            setAllCases({})\r\n            setAvailableStages({})\r\n            setAvailableTasks({})\r\n            setBgStages({})\r\n            const casesPath = firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"cases\")\r\n\r\n            pageData.cases.map(pCase => {\r\n                console.log(\"PCASE\", pCase)\r\n                casesPath.doc(pCase).get().then(doc => {\r\n                    setCaseData(prevState => {\r\n                        const newState = Object.assign({}, prevState)\r\n                        newState[doc.id] = doc.data()\r\n                        return newState\r\n                    })\r\n                })\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_write\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setUserCases, pCase)\r\n                    })\r\n\r\n                casesPath.doc(pCase)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        complexStateFirebaseUpdate(snapshot, setAllCases, pCase)\r\n                    })\r\n            })\r\n            console.log(\"ALLCASES\", allCases)\r\n            firebase.firestore()\r\n                .collection(\"tasks\")\r\n                .where(\"assigned_users\", \"array-contains\", currentUser.uid)\r\n                .where(\"case_type\", \"in\", pageData.cases)\r\n                .onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setUserTasks)\r\n                })\r\n\r\n            if (pageData.caseWithSelectableTasks) {\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableStages)\r\n                    })\r\n\r\n                casesPath.doc(pageData.caseWithSelectableTasks)\r\n                    .collection(\"stages\")\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setBgStages)\r\n                    })\r\n\r\n                firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n    }, [currentUser, pageData, userRanks, id])\r\n\r\n\r\n    useEffect(() => {\r\n        let fs = () => { }\r\n        if (pageData && Object.entries(pageData).length > 0 && userRanks.length > 0 && pageData.caseWithSelectableTasks) {\r\n            console.log(\"filtersData\", filterFormData)\r\n            if (Object.keys(filterFormData).length !== 0) {\r\n                const stages = availableStages\r\n                const stageID = Object.keys(stages)[0]\r\n                const stage = stages[stageID]\r\n                const filters = stage.filters\r\n                filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n                filters.emergency_form_filling['violationTime'] = '=='\r\n                console.log(\"filters\", filters)\r\n                console.log(\"filtersData\", filterFormData)\r\n                setAvailableTasks({})\r\n                let collection = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                let query = collection.where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n\r\n                Object.keys(filters).forEach(stageFilter => {\r\n                    Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                        console.log(stageFilter, filterQuestion)\r\n                        if (filterFormData[filterQuestion] && filterFormData[filterQuestion][filterQuestion]) {\r\n                            console.log('filters3', filterFormData[filterQuestion][filterQuestion], filters[stageFilter][filterQuestion][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}.${filterQuestion}`, filters[stageFilter][filterQuestion][filterQuestion], filterFormData[filterQuestion][filterQuestion])\r\n                        }\r\n                        else if (filterFormData[filterQuestion] && Object.keys(filterFormData[filterQuestion]).length > 0 && !filterFormData[filterQuestion][filterQuestion]) {\r\n                            console.log('filters4', filterFormData[filterQuestion], filters[stageFilter][filterQuestion])\r\n                            query = query.where(`cardData.${stageFilter}.${filterQuestion}`, filters[stageFilter][filterQuestion], filterFormData[filterQuestion])\r\n                        }\r\n                    })\r\n                })\r\n                // query = query.where('cardData.emergency_form_filling.violationType.violationType', '==', 'Нарушения в ходе голосования / Добуш берүү убагындагы мыйзам бузуулар')\r\n                // query = query.where('cardData.emergency_form_filling.region.region', '==', 'г. Бишкек')\r\n                // query = query.where('cardData.emergency_form_filling.violationTime', '==', '12:00-13:00')\r\n\r\n                query = query.orderBy('created_date', 'desc').limit(25).onSnapshot(snapshot => {\r\n                    simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                })\r\n                fs = query\r\n            } else {\r\n                setAvailableTasks({})\r\n                fs = firebase.firestore()\r\n                    .collection(\"tasks\")\r\n                    .where(\"case_type\", \"==\", pageData.caseWithSelectableTasks)\r\n                    .where(\"assigned_users\", \"==\", [])\r\n                    .where(\"available\", \"==\", true)\r\n                    .where(\"is_complete\", \"==\", false)\r\n                    .where(\"ranks_read\", \"array-contains-any\", userRanks)\r\n                    .orderBy('created_date', 'desc')\r\n                    .limit(25)\r\n                    .onSnapshot(snapshot => {\r\n                        simpleStateFirebaseUpdate(snapshot, setAvailableTasks)\r\n                    })\r\n            }\r\n        }\r\n        return (fs)\r\n    }, [currentUser, pageData, userRanks, id, filterFormData])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            const newFilteredStages = cloneDeep(userCases)\r\n            //let newUnlimStages = {}\r\n            Object.keys(userCases).map(caseID => {\r\n                Object.keys(userCases[caseID]).map(stageId => {\r\n                    const stage = userCases[caseID][stageId]\r\n                    if (stage.ranks_write &&\r\n                        Object.keys(stage.ranks_write).length > 0 &&\r\n                        intersection(stage.ranks_write, userRanks).length > 0 &&\r\n                        \"creatable\" in stage &&\r\n                        stage.creatable) {\r\n                        if (stage.rank_limit_number && Object.keys(stage.rank_limit_number).length > 0) {\r\n                            const setIntersection = intersection(Object.keys(stage.rank_limit_number), userRanks)\r\n                            if (setIntersection.length > 0) {\r\n                                const maxTasksPerStage = calculatemaxTasksPerStage(setIntersection, stage.rank_limit_number)\r\n                                const tasksPerStage = countTasksPerStage(stageId, userTasks)\r\n                                // console.log(\"caseID: \", caseID)\r\n                                // console.log(\"stageId: \", stageId)\r\n                                // console.log(\"maxTasksPerStage: \", maxTasksPerStage)\r\n                                // console.log(\"tasksPerStage: \", tasksPerStage)\r\n                                // if (tasksPerStage >= maxTasksPerStage) {\r\n                                //     console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                //     delete newFilteredStages[caseID][stageId]\r\n                                //     console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                // }\r\n                                if (tasksPerStage >= maxTasksPerStage) {\r\n                                    // console.log(\"newFilteredStages: \", newFilteredStages)\r\n                                    delete newFilteredStages[caseID][stageId]\r\n                                    // console.log(\"newFilteredStages after delete: \", newFilteredStages)\r\n                                }\r\n                                // console.log(\"userCases: \", userCases)\r\n                            }\r\n                        }\r\n                    } else {\r\n                        delete newFilteredStages[caseID][stageId]\r\n                    }\r\n                })\r\n            })\r\n            setFilteredStages(newFilteredStages)\r\n            //setUnlimStages(newUnlimStages)\r\n        }\r\n    }, [currentUser, userCases, userTasks, id])\r\n\r\n\r\n    const countTasksPerStage = (stage, tasks) => {\r\n        let occurrences = 0\r\n        Object.values(tasks).map(task => {\r\n            if (task.case_stage_id === stage) {\r\n                occurrences++\r\n            }\r\n        })\r\n        return occurrences\r\n    }\r\n\r\n    const calculatemaxTasksPerStage = (rArray, limits) => {\r\n        let largestLimit = 0\r\n        rArray.map(v => {\r\n            if (limits[v] > largestLimit) {\r\n                largestLimit = limits[v]\r\n            }\r\n        })\r\n        return largestLimit\r\n    }\r\n\r\n    const intersection = (arrA, arrB) => {\r\n        const setA = new Set(arrA)\r\n        const setB = new Set(arrB)\r\n        let _intersection = new Set()\r\n        for (let elem of setB) {\r\n            if (setA.has(elem)) {\r\n                _intersection.add(elem)\r\n            }\r\n        }\r\n        return [..._intersection]\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userRanks.length > 0) {\r\n            firebase.firestore()\r\n                .collection(\"schema\")\r\n                .doc(\"structure\")\r\n                .collection(\"ranks\")\r\n                .where(firebase.firestore.FieldPath.documentId(), \"in\", userRanks)\r\n                .onSnapshot(snapshot => {\r\n                    snapshot.docChanges().forEach(change => {\r\n                        if (change.type === \"added\" || change.type === \"modified\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                return { ...prevState, [change.doc.id]: change.doc.data() }\r\n                            })\r\n                        }\r\n                        if (change.type === \"removed\") {\r\n                            setUserRanksDescriptions(prevState => {\r\n                                const newState = Object.assign({}, prevState)\r\n                                delete newState[change.doc.id]\r\n                                return newState\r\n                            })\r\n                        }\r\n                    })\r\n                })\r\n        }\r\n    }, [userRanks])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(userCases).length > 0) {\r\n            createCaseSelectorForm()\r\n        }\r\n        else {\r\n            setCaseSelector({})\r\n        }\r\n    }, [userCases])\r\n\r\n    const displayTasks = (tasks, stages, cases, cardType, complete) => {\r\n        const displayedTasks = Object.keys(tasks).map(taskId => {\r\n            const caseType = tasks[taskId].case_type\r\n            const stageId = tasks[taskId].case_stage_id\r\n\r\n            let stage = false\r\n\r\n            if (stages) {\r\n                if (stages[stageId]) {\r\n                    stage = stages[stageId]\r\n                }\r\n            } else if (cases && cases[caseType] && cases[caseType][stageId]) {\r\n                stage = cases[caseType][stageId]\r\n            }\r\n\r\n            if (stage && tasks[taskId].is_complete === complete) {\r\n                // console.log(\"TASKS: \", tasks[taskId])\r\n                // console.log(\"userStages: \", userCases)\r\n                return <Grid key={taskId} style={{ padding: 10 }}>\r\n                    <TaskCard\r\n                        stage={stage}\r\n                        stageID={stageId}\r\n                        cardType={cardType}\r\n                        task={tasks[taskId]}\r\n                        user={currentUser}\r\n                        pCase={caseType}\r\n                        id={taskId} />\r\n                </Grid>\r\n            }\r\n        })\r\n        return displayedTasks\r\n    }\r\n\r\n    const showFilters = (stages, bgStages, formData, handleFormChange) => {\r\n        if (Object.keys(stages).length === 1 &&\r\n            stages[Object.keys(stages)[0]] &&\r\n            stages[Object.keys(stages)[0]].filters &&\r\n            Object.keys(stages[Object.keys(stages)[0]].filters).length > 0 &&\r\n            Object.keys(bgStages).length > 0\r\n        ) {\r\n            const stageID = Object.keys(stages)[0]\r\n            const stage = stages[stageID]\r\n            const filters = stage.filters\r\n            filters.emergency_form_filling['violationType'] = { violationType: '==' }\r\n            filters.emergency_form_filling['violationTime'] = '=='\r\n            const formQuestions = { properties: {} }\r\n            let formUI = {}\r\n            Object.keys(filters).forEach(stageFilter => {\r\n                Object.keys(filters[stageFilter]).forEach(filterQuestion => {\r\n                    let endProps = bgStages[stageFilter].end.properties[filterQuestion]\r\n                    delete endProps.dependencies\r\n                    formQuestions.properties[filterQuestion] = endProps\r\n                    // console.log(\"bgStages: \", bgStages)\r\n                    formUI[filterQuestion] = { \"ui:widget\": \"select\" }\r\n\r\n                })\r\n            })\r\n            return (\r\n                <JSchemaForm\r\n                    schema={formQuestions}\r\n                    uiSchema={formUI}\r\n                    formData={formData}\r\n                    onChange={e => {\r\n                        handleFormChange(e)\r\n                    }}\r\n                > </JSchemaForm>\r\n            )\r\n        } else return null\r\n    }\r\n\r\n    const handleFilterFormChange = (e) => {\r\n        setFilterFormData(e.formData)\r\n        // console.log(\"FilterFormChange: \", e.formData)\r\n    }\r\n\r\n\r\n    const handleTabChange = (event, newValue) => {\r\n        setTabValue(newValue);\r\n    };\r\n\r\n\r\n    const createCaseSelectorForm = () => {\r\n        let schema = {\r\n            type: \"object\",\r\n            properties: {\r\n                request: {\r\n                    title: \"Получить задание\",\r\n                    $ref: \"#/definitions/cases\"\r\n                }\r\n            },\r\n            definitions: {\r\n                cases: {\r\n                    type: \"object\",\r\n                    properties: {\r\n                        case: {\r\n                            type: \"string\",\r\n                            enum: [\"none\", ...Object.keys(userCases)],\r\n                            default: \"none\"\r\n                        }\r\n                    },\r\n                    required: ['case'],\r\n                    dependencies: {\r\n                        case: {\r\n                            oneOf: [\r\n                                {\r\n                                    properties: {\r\n                                        case: {\r\n                                            enum: [\r\n                                                \"none\"\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        Object.keys(userCases).forEach((k, i) => {\r\n            let c = userCases[k]\r\n            console.log('cc', c)\r\n            if (pageData.cases.includes(k)) {\r\n                schema.definitions.cases.dependencies.case.oneOf.push(\r\n                    {\r\n                        properties: {\r\n                            case: {\r\n                                enum: [\r\n                                    k\r\n                                ]\r\n                            },\r\n                            task: {\r\n                                type: \"string\",\r\n                                enum: ['none', ...Object.keys(c)],\r\n                                default: 'none'\r\n                            }\r\n                        },\r\n                        required: [\r\n                            'task'\r\n                        ]\r\n                    }\r\n                )\r\n            }\r\n        })\r\n\r\n        // console.log('schema', schema)\r\n        // console.log('schema', JSON.stringify(schema))\r\n        setCaseSelector(schema)\r\n    }\r\n\r\n    const handleFormChange = e => {\r\n        setCaseSelectorResponse(e.formData)\r\n    };\r\n\r\n    const requestTask = () => {\r\n\r\n        if (caseSelectorResponse.request.case !== 'none' && caseSelectorResponse.request.task !== 'none') {\r\n            console.log('rrrr', caseSelectorResponse)\r\n            firebase.firestore().collection(\"task_requests\").doc(currentUser.uid).collection(\"requests\").add({\r\n                status: \"pending\",\r\n                user: currentUser.uid,\r\n                case_type: caseSelectorResponse.request.case,\r\n                case_stage_id: caseSelectorResponse.request.task\r\n            })\r\n        }\r\n        else {\r\n            alert('Выберите case и task!')\r\n        }\r\n    }\r\n\r\n\r\n    return (<Grid container justify=\"center\" alignItems=\"center\" direction=\"column\">\r\n        {console.log(\"pageData: \", pageData)}\r\n        {console.log(\"userRanks: \", userRanks)}\r\n        {console.log(\"userCases: \", userCases)}\r\n        {console.log(\"userTasks: \", userTasks)}\r\n        {console.log(\"filteredStages: \", filteredStages)}\r\n        {console.log(\"availableStages: \", availableStages)}\r\n        {console.log(\"availableTasks: \", availableTasks)}\r\n        {console.log(\"caseData\", caseData)}\r\n\r\n        <Grid style={{paddingBottom: 30}}>\r\n            <JSchemaForm\r\n                schema={caseSelector}\r\n                // uiSchema={formUI}\r\n                formData={caseSelectorResponse}\r\n                onChange={e => {\r\n                    handleFormChange(e)\r\n                }}\r\n            >\r\n                <button type=\"submit\" onClick={requestTask} className='btn btn-info'>Получить</button>\r\n            </JSchemaForm>\r\n        </Grid>\r\n\r\n        {/* <Grid>\r\n            {Object.keys(userCases).map((k, i) => {\r\n                let c = caseData[k]\r\n                console.log(c)\r\n                if (pageData.cases.includes(k) && c) {\r\n                    return (\r\n                        <Case key={i} title={c.title} description={c.description} caseId={k} userRanks={userRanks} />\r\n                    )\r\n                }\r\n            })}\r\n        </Grid> */}\r\n\r\n        {/* <Grid>\r\n\t\t\t\t<Button onClick={requestTask}>Получить задание</Button>\r\n\t\t\t</Grid> */}\r\n        {Object.keys(userRanksDescriptions).length > 0 ? userRanks.map(rank => {\r\n            if (userRanksDescriptions[rank] && userRanksDescriptions[rank].description) {\r\n                return (\r\n                    <Typography variant=\"h5\" key={rank}>{userRanksDescriptions[rank].description}</Typography>\r\n                )\r\n            }\r\n        })\r\n            : null}\r\n        <div className={classes.root}>\r\n            {/*{Object.keys(unlimStages).map(pCase => (*/}\r\n            {/*    Object.keys(unlimStages[pCase]).map(stage => (*/}\r\n            {/*        <Grid key={pCase + stage} style={{padding: 10}}>*/}\r\n            {/*            <TaskCard complete={false}*/}\r\n            {/*                      stage={unlimStages[pCase][stage]}*/}\r\n            {/*                      stageID={stage}*/}\r\n            {/*                      user={currentUser}*/}\r\n            {/*                      pCase={pCase}*/}\r\n            {/*                      cardType = \"creatableUnlim\"/>*/}\r\n            {/*        </Grid>*/}\r\n            {/*    ))*/}\r\n            {/*))}*/}\r\n            <Paper position=\"static\" color=\"default\">\r\n\r\n                <Tabs value={tabValue} onChange={handleTabChange} variant=\"fullWidth\" centered\r\n                    aria-label=\"simple tabs example\">\r\n                    <Tab label=\"Невыполненные\" {...a11yProps(0)} />\r\n                    <Tab label=\"Выполненные\" {...a11yProps(1)} />\r\n                    {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n                        <Tab label=\"Доступные\" {...a11yProps(2)} />\r\n                        :\r\n                        null}\r\n\r\n                    {/*<Tab label=\"Быстрые задания\" {...a11yProps(3)}/>*/}\r\n                </Tabs>\r\n            </Paper>\r\n        </div>\r\n\r\n        <TabPanel value={tabValue} index={0}>\r\n            {Object.keys(filteredStages).map(pCase => (\r\n                Object.keys(filteredStages[pCase]).map(stage => (\r\n                    <Grid key={pCase + stage} style={{ padding: 10 }}>\r\n                        <TaskCard complete={false}\r\n                            stage={filteredStages[pCase][stage]}\r\n                            stageID={stage}\r\n                            user={currentUser}\r\n                            pCase={pCase}\r\n                            cardType=\"creatable\" />\r\n                    </Grid>\r\n                ))\r\n            ))}\r\n            {displayTasks(userTasks, false, allCases, \"selected\", false)}\r\n        </TabPanel>\r\n\r\n        <TabPanel value={tabValue} index={1}>\r\n            {displayTasks(userTasks, false, allCases, \"selected\", true)}\r\n        </TabPanel>\r\n\r\n        {(Object.keys(availableTasks).length > 0 && Object.keys(availableStages).length > 0) ?\r\n            <TabPanel value={tabValue} index={2}>\r\n                {/* {console.log(\"availableTasks: \", availableTasks)} */}\r\n                {showFilters(availableStages, bgStages, filterFormData, handleFilterFormChange)}\r\n                {displayTasks(availableTasks, availableStages, false, \"selectable\", false)}\r\n            </TabPanel>\r\n            :\r\n            null}\r\n        {/* <TabPanel value={value} index={2}>\r\n                быстрые задания\r\n            </TabPanel>*/}\r\n    </Grid>)\r\n}\r\n\r\nexport default Page","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport firebase, { signInWithGoogle } from '../../util/Firebase'\r\nimport { AuthContext } from \"../../util/Auth\";\r\n\r\n//import Form from \"../form/form\"\r\nimport Dialog from \"../Dialog/Dialog\"\r\nimport DialogFeedback from \"../Dialog/FeedbackDialog\"\r\nimport Feedback from \"../form/feedback\"\r\nimport {complexStateFirebaseUpdate, simpleStateFirebaseUpdate} from \"../../util/Utilities\"\r\n\r\nimport Loader from \"../form/Loader\"\r\nimport CustomFileUpload from \"../form/CustomFileUpload\";\r\nimport { Button, Divider, Grid, Typography } from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport JSchemaForm from \"@rjsf/bootstrap-4\";\r\nimport { cloneDeep, isEqual } from 'lodash'\r\n\r\n\r\nimport { Redirect, useParams, useHistory } from 'react-router';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst JSchemaTask = () => {\r\n\tconst [formResponses, setFormResponses] = useState({})\r\n\tconst [taskForm, setTaskForm] = useState({})\r\n\tconst [mergedForm, setMergedForm] = useState({})\r\n\tconst [taskMetadata, setTaskMetadata] = useState({})\r\n\tconst [caseStages, setCaseStages] = useState({})\r\n\tconst [backgroundTasks, setBackgroundTasks] = useState({})\r\n\tconst [backgroundTaskForms, setBackgroundTaskForms] = useState({})\r\n\tconst [mergedBackgroundForms, setMergedBackgroundForms] = useState({})\r\n\tconst [backgroundResponses, setBackgroundResponses] = useState({})\r\n\tconst [currentFocus, setCurrentFocus] = useState(\"\")\r\n\tconst [gRef, setGRef] = useState(null)\r\n\tconst [formStatus, setFormStatus] = useState(\"loading\")\r\n\r\n\tconst [questions, setQuestions] = useState([])\r\n\tconst [responses, setResponses] = useState([])\r\n\tconst [answers, setAnswers] = useState({})\r\n\tconst [forms, setForms] = useState([])\r\n\tconst [uploaded, setUploaded] = useState(false)\r\n\tconst [redirect, setRedirect] = useState(false)\r\n\tconst [userData, setUserData] = useState({})\r\n\tconst [lockButton, setLock] = useState(false)\r\n\tconst [caseTasks, setCaseTasks] = useState([])\r\n\tconst [dialogState, setDialog] = useState(false)\r\n\tconst [dialogType, setDialogType] = useState(null)\r\n\tconst [feedbackValue, setFeedback] = useState({})\r\n\tconst [releaseFeedbackData, setReleaseFeedbackData] = useState({})\r\n\tconst [openSnackbar, setOpenSnackbar] = useState(false);\r\n\tconst [files, setFiles] = useState({})\r\n\tconst [uploading, setUploading] = useState(false)\r\n\r\n\tconst { currentUser } = useContext(AuthContext);\r\n\tconst { id } = useParams();\r\n\tconst history = useHistory();\r\n\r\n\tconst handleCloseSnackbar = (event, reason) => {\r\n\t\tif (reason === 'clickaway') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetOpenSnackbar(false);\r\n\t};\r\n\r\n\t// const uploadsRef = useRef();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (currentUser && id) {\r\n\r\n\t\t\tconst ref = firebase\r\n\t\t\t\t.firestore()\r\n\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t.doc(id)\r\n\r\n\t\t\tsetGRef(ref)\r\n\r\n\t\t\tref.onSnapshot(doc => {\r\n\t\t\t\tsetTaskMetadata(doc.data())\r\n\t\t\t\tif (doc.data().is_complete) {\r\n\t\t\t\t\tsetFormStatus(\"sent\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (! doc.data().assigned_users.includes(currentUser.uid)) {\r\n\t\t\t\t\tsetFormStatus(\"released\")\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Task Metadata: \", doc.data());\r\n\t\t\t});\r\n\r\n\t\t\tref.collection(\"responses\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tconst changes = {}\r\n\t\t\t\t\tconst deletes = []\r\n\t\t\t\t\tlet modifyResponses = false\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconst contents = change.doc.data().contents\r\n\t\t\t\t\t\t\tchanges[change.doc.id] = contents\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t//if (formResponses.hasOwnProperty(change.doc.id)) {\r\n\t\t\t\t\t\t\tconsole.log(\"Response Removed: \", change.doc.data());\r\n\t\t\t\t\t\t\tdeletes.push(change.doc.id)\r\n\t\t\t\t\t\t\tmodifyResponses = true\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (modifyResponses) {\r\n\t\t\t\t\t\tsetFormResponses(prevState => {\r\n\t\t\t\t\t\t\tconst newState = cloneDeep(prevState)\r\n\t\t\t\t\t\t\tdeletes.forEach(d => delete newState[d])\r\n\t\t\t\t\t\t\tObject.keys(changes).forEach(key => newState[key] = changes[key])\r\n\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\tref.collection(\"questions\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tsetTaskForm(prevState => {\r\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t}, [id, currentUser])\r\n\r\n\tuseEffect( () => {\r\n\t\tif (Object.entries(taskMetadata).length > 0) {\r\n\t\t\tconsole.log(\"Task metadata: \", taskMetadata)\r\n\t\t\tfirebase.firestore()\r\n\t\t\t\t.collection(\"schema\")\r\n\t\t\t\t.doc(\"structure\")\r\n\t\t\t\t.collection(\"cases\")\r\n\t\t\t\t.doc(taskMetadata.case_type)\r\n\t\t\t\t.collection(\"stages\")\r\n\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\tconsole.log(\"Case stage: \", change.doc.data())\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\tsetCaseStages(prevState => {\r\n\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t\t}\r\n\t}, [taskMetadata.case_type])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst mergedBgForms = {}\r\n\t\tconsole.log(\"Bg tasks: \", backgroundTasks)\r\n\t\tObject.keys(backgroundTasks).map(taskId => {\r\n\t\t\tconst stage = backgroundTasks[taskId].case_stage_id\r\n\t\t\tif (! mergedBgForms[stage]) {\r\n\t\t\t\tmergedBgForms[stage] = {}\r\n\t\t\t}\r\n\t\t\tmergedBgForms[stage][taskId] = mergeForm(backgroundTaskForms[taskId],\r\n\t\t\t\tcaseStages[stage])\r\n\t\t})\r\n\t\tconsole.log(\"Merged bg forms: \", mergedBgForms)\r\n\t\tsetMergedBackgroundForms(mergedBgForms)\r\n\t}, [backgroundTasks, backgroundTaskForms, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.keys(mergedForm).length > 0 && formStatus === \"loading\") {\r\n\t\t\tsetFormStatus(\"ready\")\r\n\t\t}\r\n\t}, [formResponses, mergedForm])\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMergedForm(mergeForm(taskForm, caseStages[taskMetadata.case_stage_id]))\r\n\t}, [taskForm, taskMetadata, caseStages])\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (Object.keys(caseStages).length > 0 && Object.keys(taskMetadata).length > 0 && caseStages[taskMetadata.case_stage_id]) {\r\n\t\t\tconsole.log(\"caseStages: \", caseStages)\r\n\t\t\tconsole.log(\"taskMetadata: \", taskMetadata)\r\n\t\t\tconst backgroundTasksList = caseStages[taskMetadata.case_stage_id].backgroundStages\r\n\t\t\tif (backgroundTasksList && backgroundTasksList.length > 0) {\r\n\t\t\t\tconsole.log(\"backgroundTasksList: \", backgroundTasksList.length)\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.where(\"case_id\", \"==\", taskMetadata.case_id)\r\n\t\t\t\t\t.where(\"case_stage_id\", \"in\", backgroundTasksList)\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Background task: \", change.doc.data())\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\treturn {...prevState, [change.doc.id]: change.doc.data()}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundTasks(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [caseStages, taskMetadata])\r\n\r\n\tuseEffect(() => {\r\n\t\tif (Object.entries(backgroundTasks).length > 0) {\r\n\t\t\tObject.keys(backgroundTasks).map(key => {\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"questions\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tcomplexStateFirebaseUpdate(snapshot, setBackgroundTaskForms, key)\r\n\t\t\t\t\t})\r\n\t\t\t\tfirebase.firestore()\r\n\t\t\t\t\t.collection(\"tasks\")\r\n\t\t\t\t\t.doc(key)\r\n\t\t\t\t\t.collection(\"responses\")\r\n\t\t\t\t\t.onSnapshot(snapshot => {\r\n\t\t\t\t\t\tsnapshot.docChanges().forEach(change => {\r\n\t\t\t\t\t\t\tif (change.type === \"added\" || change.type === \"modified\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tif (! newState[key]) {\r\n\t\t\t\t\t\t\t\t\t\tnewState[key] = {}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnewState[key][change.doc.id] = change.doc.data().contents\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (change.type === \"removed\") {\r\n\t\t\t\t\t\t\t\tsetBackgroundResponses(prevState => {\r\n\t\t\t\t\t\t\t\t\tconst newState = Object.assign({}, prevState)\r\n\t\t\t\t\t\t\t\t\tdelete newState[key][change.doc.id]\r\n\t\t\t\t\t\t\t\t\treturn newState\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}, [backgroundTasks])\r\n\r\n\t// useEffect( () => {\r\n\t// \tsetMergedQuestions(mergeQuestions([caseStages[taskMetadata.case_stage_id]]))\r\n\t// }, [caseStages, taskQuestions])\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst timer = setTimeout(() => {\r\n\t// \t\tif (formResponsesChanged) {\r\n\t// \t\t\tfirebase\r\n\t// \t\t\t\t.firestore()\r\n\t// \t\t\t\t.collection(\"tasks\")\r\n\t// \t\t\t\t.doc(id)\r\n\t// \t\t\t\t.collection(\"responses\")\r\n\t// \t\t\t\t.doc(\"form_responses\")\r\n\t// \t\t\t\t.set(formResponses)\r\n\t// \t\t\t\t.then(docRef => {\r\n\t// \t\t\t\t\tsetFormResponsesChanged(false);\r\n\t// \t\t\t\t\tconsole.log(\"Document written with ID: \", docRef.id);\r\n\t// \t\t\t\t})\r\n\t// \t\t\t\t.catch(error => console.error(\"Error setting document: \", error));\r\n\t// \t\t}\r\n\t// \t}, AUTOSAVE_INTERVAL);\r\n\t// \treturn () => clearTimeout(timer);\r\n\t// }, [formResponsesChanged, formResponses]);\r\n\r\n\r\n\tconst handleFormChange = e => {\r\n\t\tsetFormResponses(e.formData)\r\n\t};\r\n\r\n\t// const handleBlur = e => {\r\n\t// \tif (gRef) {\r\n\t// \t\tconsole.log(\"Responses: \", formResponses)\r\n\t// \t\tconsole.log(\"That is what was blured\", e)\r\n\t// \t\tif (e === \"root\") {\r\n\t// \t\t\tconsole.log(\"e from first option when trigger is root\", e)\r\n\t// \t\t\tObject.keys(formResponses).map(k => {\r\n\t// \t\t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t\t.doc(k)\r\n\t// \t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t\t{merge: true})\r\n\t// \t\t\t})\r\n\t// \t\t} else {\r\n\t// \t\t\tconsole.log(\"e from second option when trigger is not root\", e)\r\n\t// \t\t\tconst docID = e.split(\"_\")[1]\r\n\t// \t\t\tgRef.collection(\"responses\")\r\n\t// \t\t\t\t.doc(docID)\r\n\t// \t\t\t\t.set({contents: formResponses[docID] ? formResponses[docID] : firebase.firestore.FieldValue.delete()},\r\n\t// \t\t\t\t\t{merge: true})\r\n\t// \t\t}\r\n\t// \t}\r\n\t// }\r\n\r\n\tconst handleBlur = e => {\r\n\t\tif (gRef) {\r\n\t\t\tconsole.log(\"Responses: \", formResponses)\r\n\t\t\tconsole.log(\"That is what was blured\", e)\r\n\r\n\t\t\tObject.keys(formResponses).map(k => {\r\n\t\t\t\tgRef.collection(\"responses\")\r\n\t\t\t\t\t.doc(k)\r\n\t\t\t\t\t.set({contents: formResponses[k] ? formResponses[k] : firebase.firestore.FieldValue.delete()},\r\n\t\t\t\t\t\t{merge: true})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst mergeForm = (taskForm, caseForms) => {\r\n\t\tconst tForm = Object.assign({}, taskForm)\r\n\t\tconst cForms = Object.assign({}, caseForms)\r\n\r\n\t\tcForms.start = cForms.start ? cForms.start : {}\r\n\t\tcForms.end = cForms.end ? cForms.end : {}\r\n\t\tcForms.start_ui_schema = cForms.start_ui_schema ? cForms.start_ui_schema : {}\r\n\t\tcForms.end_ui_schema = cForms.end_ui_schema ? cForms.end_ui_schema : {}\r\n\r\n\t\ttForm.form_questions = tForm.form_questions ? tForm.form_questions : {}\r\n\t\ttForm.ui_schema = tForm.ui_schema ? tForm.ui_schema : {}\r\n\r\n\r\n\t\tconst properties = {\r\n\t\t\t...(cForms.start.properties ? cForms.start.properties : {}),\r\n\t\t\t...(cForms.end.properties ? cForms.end.properties : {}),\r\n\t\t\t...(tForm.form_questions.properties ? tForm.form_questions.properties : {})\r\n\t\t}\r\n\r\n\t\tconst definitions = {\r\n\t\t\t...(cForms.start.definitions ? cForms.start.definitions : {}),\r\n\t\t\t...(cForms.end.definitions ? cForms.end.definitions : {}),\r\n\t\t\t...(tForm.form_questions.definitions ? tForm.form_questions.definitions : {})\r\n\t\t}\r\n\r\n\t\tlet title = \"\"\r\n\t\tif (tForm.form_questions.title) {\r\n\t\t\ttitle = tForm.form_questions.title\r\n\t\t} else if (cForms.end.title) {\r\n\t\t\ttitle = cForms.end.title\r\n\t\t} else if (cForms.start.title) {\r\n\t\t\ttitle = cForms.start.title}\r\n\r\n\t\tlet description = \"\"\r\n\t\tif (tForm.form_questions.description) {\r\n\t\t\tdescription = tForm.form_questions.description\r\n\t\t} else if (cForms.end.description) {\r\n\t\t\tdescription = cForms.end.description\r\n\t\t} else if (cForms.start.description) {\r\n\t\t\tdescription = cForms.start.description}\r\n\r\n\t\tconst required = [...new Set([\r\n\t\t\t...(cForms.start.required ? cForms.start.required : []),\r\n\t\t\t...(tForm.form_questions.required ? tForm.form_questions.required : []),\r\n\t\t\t...(cForms.start.required ? cForms.start.required : [])\r\n\t\t])]\r\n\r\n\t\tconst uiOrder = [...new Set([\r\n\t\t\t...(cForms.start_ui_schema[\"ui:order\"] ? cForms.start_ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(tForm.ui_schema[\"ui:order\"]\t ? tForm.ui_schema[\"ui:order\"] : []),\r\n\t\t\t...(cForms.end_ui_schema[\"ui:order\"] ? cForms.end_ui_schema[\"ui:order\"] : [])\r\n\t\t])]\r\n\r\n\t\tlet uiSchema = {\r\n\t\t\t...(cForms.start_ui_schema ? cForms.start_ui_schema : {}),\r\n\t\t\t...(cForms.end_ui_schema ? cForms.end_ui_schema : {}),\r\n\t\t\t...(tForm.ui_schema ? tForm.ui_schema : {})\r\n\t\t}\r\n\r\n\t\tuiSchema = {...uiSchema, ...{\"ui:order\": uiOrder}}\r\n\r\n\t\tconst form = {\r\n\t\t\tproperties: properties,\r\n\t\t\tdefinitions: definitions,\r\n\t\t\ttitle: title,\r\n\t\t\tdescription: description,\r\n\t\t\trequired: required\r\n\t\t}\r\n\t\treturn {form_questions: form, ui_schema: uiSchema}\r\n\r\n\t}\r\n\r\n\r\n\t// useEffect(() => {\r\n\t// \tconst getQuestions = async (taskID) => {\r\n\t// \t\tlet q = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"questions\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tq.push({ questionId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn q\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getResponses = async (taskID) => {\r\n\t// \t\tlet r = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(taskID).collection(\"responses\").get()\r\n\t// \t\t\t.then((querySnapshot) => {\r\n\t// \t\t\t\tquerySnapshot.forEach((doc) => {\r\n\t// \t\t\t\t\tr.push({ responseId: doc.id, data: doc.data() })\r\n\t// \t\t\t\t});\r\n\t// \t\t\t})\r\n\t// \t\t\t.catch((error) => {\r\n\t// \t\t\t\tconsole.log(\"Error getting documents: \", error);\r\n\t// \t\t\t});\r\n\t//\r\n\t// \t\treturn r\r\n\t// \t}\r\n\t//\r\n\t//\r\n\t// \tconst getSameCaseTasks = async () => {\r\n\t// \t\tlet sameCaseTasks = []\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).get().then(doc => {\r\n\t// \t\t\treturn doc.data()\r\n\t// \t\t}).then(async data => {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").where(\"case_id\", \"==\", data.case_id).get().then(snap => {\r\n\t// \t\t\t\tsnap.forEach(doc => {\r\n\t// \t\t\t\t\tif (doc.id !== id) {\r\n\t// \t\t\t\t\t\tsameCaseTasks.push({ id: doc.id, ...doc.data() })\r\n\t// \t\t\t\t\t}\r\n\t// \t\t\t\t})\r\n\t// \t\t\t})\r\n\t// \t\t})\r\n\t// \t\treturn sameCaseTasks\r\n\t// \t}\r\n\t//\r\n\t// \tconst getForms = async () => {\r\n\t// \t\tlet f = []\r\n\t// \t\tlet locked = true\r\n\t//\r\n\t// \t\tsetForms(null)\r\n\t//\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").get().then(doc => {\r\n\t// \t\t\tif (doc.data().status === 'complete') {\r\n\t// \t\t\t\tlocked = true\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}\r\n\t// \t\t\telse {\r\n\t// \t\t\t\tlocked = false\r\n\t// \t\t\t}\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet sq = []\r\n\t// \t\tlet sr = []\r\n\t//\r\n\t// \t\tlet sameCaseTasks = await getSameCaseTasks()\r\n\t// \t\tsetCaseTasks(sameCaseTasks)\r\n\t// \t\tif (sameCaseTasks.length > 0) {\r\n\t// \t\t\tlet ques = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getQuestions(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tlet resp = sameCaseTasks.map(t => {\r\n\t// \t\t\t\treturn getResponses(t.id)\r\n\t// \t\t\t})\r\n\t// \t\t\tconsole.log(ques)\r\n\t// \t\t\tawait Promise.all(ques).then(data => data.forEach(d => sq.push(...d)))\r\n\t// \t\t\tawait Promise.all(resp).then(data => data.forEach(d => sr.push(...d)))\r\n\t//\r\n\t// \t\t\tconsole.log(sq)\r\n\t// \t\t\tconsole.log(sr)\r\n\t// \t\t}\r\n\t//\r\n\t// \t\tlet sf = sq.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tsr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn <Form key={el.questionId + '_' + i} question={el.data} index={i} response={response} returnAnswer={returnAnswer} locked={true} askFeedback={true} saveQuestionFeedback={saveQuestionFeedback} id={el.questionId} prevTaskId={sameCaseTasks[0].id} />\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tsf.push(<div key={\"div_divider_stripped\"} style={{ height: 25, margin: '20px 0', background: 'repeating-linear-gradient( 45deg, white, white 10px, grey 10px, grey 25px)' }}><br /></div>)\r\n\t//\r\n\t//\r\n\t// \t\tlet q = await getQuestions(id)\r\n\t// \t\tlet r = await getResponses(id)\r\n\t//\r\n\t//\r\n\t// \t\tsetQuestions(q)\r\n\t// \t\tsetResponses(r)\r\n\t//\r\n\t//\r\n\t// \t\t// let newQ = sq.concat(q)\r\n\t// \t\t// let newR = sr.concat(r)\r\n\t//\r\n\t// \t\tf = q.map((el, i) => {\r\n\t// \t\t\tlet response = null\r\n\t// \t\t\tr.forEach((res) => {\r\n\t// \t\t\t\tif (el.questionId === res.responseId) {\r\n\t// \t\t\t\t\tresponse = res.data.answer\r\n\t// \t\t\t\t\treturnAnswer(res.data.answer, i)\r\n\t// \t\t\t\t}\r\n\t// \t\t\t})\r\n\t// \t\t\treturn (\r\n\t// \t\t\t\t<Form\r\n\t// \t\t\t\t\tkey={el.questionId + '_' + i}\r\n\t// \t\t\t\t\tquestion={el.data}\r\n\t// \t\t\t\t\tindex={i}\r\n\t// \t\t\t\t\tresponse={response}\r\n\t// \t\t\t\t\treturnFile={returnFile}\r\n\t// \t\t\t\t\treturnAnswer={returnAnswer}\r\n\t// \t\t\t\t\tid={el.questionId}\r\n\t// \t\t\t\t\tlocked={locked}\r\n\t// \t\t\t\t\t// ref={uploadsRef}\r\n\t// \t\t\t\t\tuploadFilesData={uploadFilesData} />\r\n\t// \t\t\t)\r\n\t// \t\t})\r\n\t//\r\n\t// \t\tlet newF = sf.concat(f)\r\n\t// \t\tsetForms(newF)\r\n\t// \t}\r\n\t// \tif (currentUser) {\r\n\t// \t\tgetForms()\r\n\t// \t}\r\n\t// }, [currentUser, id, lockButton])\r\n\t//\r\n\t//\r\n\t// const returnAnswer = (answer, index) => {\r\n\t// \tconst tmp = answers\r\n\t// \ttmp[index] = answer\r\n\t// \tsetAnswers(tmp)\r\n\t// }\r\n\t//\r\n\t// const returnFile = (file, questionId) => {\r\n\t// \tlet arr = [...file]\r\n\t// \tlet tmp = files\r\n\t// \ttmp[questionId] = arr\r\n\t// \tsetFiles(tmp)\r\n\t// \tconsole.log([...file], questionId)\r\n\t// }\r\n\t//\r\n\t// const upload = async () => {\r\n\t// \t// uploadsRef.current.startUpload()\r\n\t// \tif (Object.keys(files).length > 0) {\r\n\t// \t\tconsole.log('files')\r\n\t// \t\tsetUploading(true)\r\n\t// \t\tfor (const [key, value] of Object.entries(files)) {\r\n\t// \t\t\tlet ref = firebase.storage().ref(id).child(key).child(currentUser.uid)\r\n\t// \t\t\tawait Promise.all(value.map(async v => {\r\n\t// \t\t\t\tlet snap = await ref.child(v.name).put(v)\r\n\t// \t\t\t\tlet url = await snap.ref.getDownloadURL()\r\n\t// \t\t\t\tlet url_wo_token = url.split(\"?\")[0]\r\n\t// \t\t\t\tawait uploadFilesData(v.name, url_wo_token, key)\r\n\t// \t\t\t}));\r\n\t// \t\t}\r\n\t// \t\tsetUploaded(true)\r\n\t// \t\tsetUploading(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveQuestionFeedback = (data, questionId, previousTaskId) => {\r\n\t// \tif (previousTaskId) {\r\n\t// \t\tfirebase.firestore().collection('tasks').doc(previousTaskId).collection('feedbacks').doc(questionId).collection('messages')\r\n\t// \t\t\t.add({\r\n\t// \t\t\t\tanswer: data.reason,\r\n\t// \t\t\t\ttext: data.text,\r\n\t// \t\t\t\tuser_id: currentUser.uid,\r\n\t// \t\t\t\ttimestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\t// \t\t\t})\r\n\t// \t\t\t.then(() => setOpenSnackbar(true))\r\n\t// \t}\r\n\t// \telse {\r\n\t// \t\talert('Ошибка: Что-то пошло не так при сохранении фидбека. Сообщите программисту!')\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const saveToFirebase = async (lock) => {\r\n\t// \tawait upload()\r\n\t// \tquestions.forEach(async (q, i) => {\r\n\t// \t\tif (answers[i] || answers[i] === \"\") {\r\n\t// \t\t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(q.questionId).set({ answer: answers[i] }, { merge: true })\r\n\t// \t\t}\r\n\t// \t})\r\n\t//\r\n\t// \tif (lock) {\r\n\t// \t\tawait firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'complete' })\r\n\t// \t\tsetLock(true)\r\n\t// \t\tconsole.log(\"Task Locked\")\r\n\t// \t\tsetDialog(false)\r\n\t// \t}\r\n\t// }\r\n\t//\r\n\t// const uploadFilesData = async (filename, url, questionId) => {\r\n\t// \tlet rootRef = firebase.firestore().collection(\"tasks\").doc(id).collection(\"responses\").doc(questionId)\r\n\t// \tconsole.log(\"Файл отправлен\")\r\n\t// \tif (filename && url) {\r\n\t// \t\trootRef.set(\r\n\t// \t\t\t{\r\n\t// \t\t\t\tfiles: firebase.firestore.FieldValue.arrayUnion({ public_url: url, filename: filename })\r\n\t// \t\t\t}, { merge: true }\r\n\t// \t\t).then(() => console.log('super'))\r\n\t// \t}\r\n\t// };\r\n\t//\r\n\tconst handleDialogClose = () => {\r\n\t\tsetDialog(false);\r\n\t\t//setFeedback({})\r\n\t};\r\n\r\n\tconst handleOk = () => {\r\n\t\tsetDialog(false)\r\n\t\thistory.goBack()\r\n\t};\r\n\r\n\tconst handleDialogOpen = (type) => {\r\n\t\tconsole.log(\"Dialog open\")\r\n\t\tif (type === 'send') {\r\n\t\t\tsetDialogType('send')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t\tif (type === 'release') {\r\n\t\t\tsetDialogType('release')\r\n\t\t\tsetDialog(true)\r\n\t\t}\r\n\t}\r\n\r\n\t// useEffect(() => {\r\n\t// \tfirebase.firestore().collection(\"schema\").doc(\"structure\").collection(\"feedbacks\").doc(\"release\").get().then(doc => {\r\n\t// \t\tsetReleaseFeedbackData(doc.data())\r\n\t// \t})\r\n\t// }, [])\r\n\t//\r\n\t// const releaseTask = () => {\r\n\t// \tfirebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'open' })\r\n\t// \t\t.then(() => firebase.firestore().collection(\"tasks\").doc(id).collection(\"user_editable\").doc(\"user_editable\").update({ status: 'released', release_status: feedbackValue.reason, release_description: feedbackValue.text })\r\n\t// \t\t\t.then(() => {\r\n\t// \t\t\t\tsetDialog(false)\r\n\t// \t\t\t\tsetLock(true)\r\n\t// \t\t\t}))\r\n\t// \t// alert(feedbackValue)\r\n\t// }\r\n\t//\r\n\t// const handleFeedbackSave = (value) => {\r\n\t// \tsetFeedback(value)\r\n\t// }\r\n\r\n\tconst changeTaskStatus = (status) => {\r\n\t\tfirebase.firestore()\r\n\t\t\t.collection(\"tasks\")\r\n\t\t\t.doc(id)\r\n\t\t\t.collection(\"user_editable\")\r\n\t\t\t.doc(\"user_editable\")\r\n\t\t\t.update({ status: status })\r\n\t}\r\n\r\n\treturn (\r\n\t\tcurrentUser ?\r\n\t\t\t<Grid style={{ padding: 30 }}>\r\n\t\t\t\t{dialogType === 'send' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"sent\"}\r\n\t\t\t\t\ttitle={formStatus === \"sent\" ? \"Форма успешно отправлена.\" : \"Отправить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"sent\" ? \"Спасибо\" : \"Вы собираетесь отправить форму. Это значит, что вы больше не сможете изменять ответы.\"}\r\n\t\t\t\t\tdialogFunction={()=>{changeTaskStatus('complete')}} />}\r\n\r\n\t\t\t\t\t{dialogType === 'release' && <Dialog\r\n\t\t\t\t\tstate={dialogState}\r\n\t\t\t\t\thandleClose={handleDialogClose}\r\n\t\t\t\t\thandleOk={handleOk}\r\n\t\t\t\t\tshowOk={formStatus === \"released\"}\r\n\t\t\t\t\ttitle={formStatus === \"released\" ? \"Форма успешно освобождена. Теперь ею сможет заняться кто-то еще.\" : \"Освободить форму?\"}\r\n\t\t\t\t\tcontent={formStatus === \"released\" ? \"Спасибо\" : \"Вы собираетесь ОСВОБОДИТЬ форму. Ваши изменения не сохранятся и форма будет передана другому пользователю.\"}\r\n\t\t\t\t\tdialogFunction={()=>{changeTaskStatus('released')}} />}\r\n\r\n\t\t\t\t{/*{dialogType === 'release' && <DialogFeedback*/}\r\n\t\t\t\t{/*\tstate={dialogState}*/}\r\n\t\t\t\t{/*\tfeedbackValue={feedbackValue}*/}\r\n\t\t\t\t{/*\thandleClose={handleDialogClose}*/}\r\n\t\t\t\t{/*\ttitle={releaseFeedbackData.title}*/}\r\n\t\t\t\t{/*\tdialogFunction={releaseTask}*/}\r\n\t\t\t\t{/*\tanswers={releaseFeedbackData.answers}*/}\r\n\t\t\t\t{/*\tdescription={releaseFeedbackData.description}*/}\r\n\t\t\t\t{/*\treturnFeedback={handleFeedbackSave} />}*/}\r\n\t\t\t\t{/*{redirect && <Redirect to=\"/tasks\" />}*/}\r\n\t\t\t\t{/*<Snackbar*/}\r\n\t\t\t\t{/*\tanchorOrigin={{*/}\r\n\t\t\t\t{/*\t\tvertical: 'bottom',*/}\r\n\t\t\t\t{/*\t\thorizontal: 'left',*/}\r\n\t\t\t\t{/*\t}}*/}\r\n\t\t\t\t{/*\topen={openSnackbar}*/}\r\n\t\t\t\t{/*\tautoHideDuration={6000}*/}\r\n\t\t\t\t{/*\tonClose={handleCloseSnackbar}*/}\r\n\t\t\t\t{/*\tmessage=\"Фидбек отправлен\"*/}\r\n\t\t\t\t{/*\taction={*/}\r\n\t\t\t\t{/*\t\t<React.Fragment>*/}\r\n\t\t\t\t{/*\t\t\t<IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleCloseSnackbar}>*/}\r\n\t\t\t\t{/*\t\t\t\t<CloseIcon fontSize=\"small\" />*/}\r\n\t\t\t\t{/*\t\t\t</IconButton>*/}\r\n\t\t\t\t{/*\t\t</React.Fragment>*/}\r\n\t\t\t\t{/*\t}*/}\r\n\t\t\t\t{/*/>*/}\r\n\t\t\t\t{/*/!* Предыдущие задания{caseTasks.map((t, i) => <Button key={\"case_button_\"+i} component={ Link } to={\"/tasks/\" + t.id}>{t.title}</Button>)} *!/*/}\r\n\t\t\t\t{/*{forms}*/}\r\n\t\t\t\t{/*<Grid container style={{ padding: 20 }} justify=\"center\">*/}\r\n\t\t\t\t{/*\t<Button variant=\"outlined\" style={{ borderWidth: 2, borderColor: \"grey\", color: 'grey', margin: 5 }} onClick={() => setRedirect(true)}>Назад</Button>*/}\r\n\t\t\t\t{/*\t{!lockButton &&*/}\r\n\t\t\t\t{/*\t\t<div>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"#003366\", color: '#003366', margin: 5 }} onClick={() => saveToFirebase(false)}>Сохранить</Button>*/}\r\n\t\t\t\t{/*\t\t\t<Button variant=\"outlined\" disabled={lockButton} style={{ borderWidth: 2, borderColor: \"red\", color: 'red', margin: 5 }} onClick={() => handleDialogOpen('send')}>Отправить</Button>*/}\r\n\t\t\t\t{/*\r\n\t\t\t\t{/*\t\t</div>}*/}\r\n\t\t\t\t{/*</Grid>*/}\r\n\r\n\t\t\t\t{/*{console.log(\"Case stages::: \", caseStages)}*/}\r\n\t\t\t\t{/*{console.log(\"Task metadata::: \", taskMetadata)}*/}\r\n\t\t\t\t{/*{console.log(\"Merged background forms::: \", mergedBackgroundForms)}*/}\r\n\r\n\t\t\t\t{(Object.keys(caseStages).length > 0 &&\r\n\t\t\t\t\tObject.keys(taskMetadata).length > 0 &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id] &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages &&\r\n\t\t\t\t\tcaseStages[taskMetadata.case_stage_id].backgroundStages.length > 0 &&\r\n\t\t\t\t\tObject.keys(mergedBackgroundForms).length > 0) ?\r\n\t\t\t\t\t<Grid style={{padding: 30}}>\r\n\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].backgroundStages.map(stage => {\r\n\t\t\t\t\t\t\treturn <div key={stage}>\r\n\t\t\t\t\t\t\t\t{console.log(\"STAGE: \", stage)}\r\n\t\t\t\t\t\t\t\t{console.log(\"mergedBackgroundForms: \", mergedBackgroundForms)}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tmergedBackgroundForms[stage] ?\r\n\t\t\t\t\t\t\t\t\t\t(Object.keys(mergedBackgroundForms[stage]).map(taskId => (\r\n\t\t\t\t\t\t\t\t\t\t\t<Grid style={{padding: 30}} key={taskId}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tschema={mergedBackgroundForms[stage][taskId].form_questions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tuiSchema={mergedBackgroundForms[stage][taskId].ui_schema}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tformData={backgroundResponses[taskId]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfields={{customFileUpload: a => CustomFileUpload({...a, ...{taskID: taskId}, ...{\"currentUserUid\": currentUser.uid}})}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t> </JSchemaForm>\r\n\t\t\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\r\n\t\t\t\t{mergedForm && gRef && caseStages && taskMetadata && taskMetadata.case_stage_id && caseStages[taskMetadata.case_stage_id] ?\r\n\t\t\t\t\t<JSchemaForm\r\n\t\t\t\t\t\tschema={mergedForm.form_questions}\r\n\t\t\t\t\t\tuiSchema={mergedForm.ui_schema}\r\n\t\t\t\t\t\tformData={formResponses}\r\n\t\t\t\t\t\tfields={{customFileUpload: a => CustomFileUpload({...a, ...{taskID: id}, ...{\"currentUserUid\": currentUser.uid}})}}\r\n\t\t\t\t\t\tdisabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\" }\r\n\t\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\t\thandleFormChange(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonFocus={e => {\r\n\t\t\t\t\t\t\tconsole.log(\"That is what was focused\", e)\r\n\t\t\t\t\t\t\tsetCurrentFocus(e.split(\"_\")[1])\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonBlur={e => {\r\n\t\t\t\t\t\t\thandleBlur(e)\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{formStatus === \"sent\" ?\r\n\t\t\t\t\t\t\t<div>Форма отправлена успешно</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\r\n\t\t\t\t\t\t{formStatus === \"ready\" ? <div>\r\n\t\t\t\t\t\t\t\t{caseStages[taskMetadata.case_stage_id].additionalButtons && caseStages[taskMetadata.case_stage_id].additionalButtons.includes(\"release\") ?\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"} style={{\r\n\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\t\tborderColor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\t\tcolor: \"#003366\",\r\n\t\t\t\t\t\t\t\t\t\tmargin: 5\r\n\t\t\t\t\t\t\t\t\t}} onClick={() => handleDialogOpen('release')}>Освободить</Button>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t\t\t\t<Button variant=\"outlined\" disabled={formStatus === \"loading\" || formStatus === \"sent\" || formStatus === \"released\"}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tborderWidth: 2,\r\n\t\t\t\t\t\t\t\t\t\t\tborderColor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\tcolor: \"red\",\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: 5}}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleDialogOpen('send')}>Отправить</Button>\r\n\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{formStatus === \"released\" ?\r\n\t\t\t\t\t\t\t<div>Вы освободили эту форму и больше не можете ее заполнять.</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull}\r\n\t\t\t\t\t</JSchemaForm>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\tnull}\r\n\r\n\t\t\t</Grid>\r\n\t\t\t:\r\n\t\t\t<Grid container direction=\"column\" style={{ padding: 20 }} justify=\"center\">\r\n\t\t\t\t<Typography align=\"center\" variant=\"h3\">авторизируйтесь</Typography>\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button variant=\"contained\" onClick={signInWithGoogle}>Войти с помощью аккаунта Google</Button>\r\n\t\t\t</Grid>\r\n\t)\r\n\r\n}\r\n\r\nexport default JSchemaTask","import React, { useState, useContext } from 'react'\r\nimport { AuthProvider } from \"./util/Auth\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { AuthContext } from \"./util/Auth\";\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\n// import Appbar from './Components/Appbar/Appbar'\r\n// import Appbar from './Components/Appbar/oldAppBar'\r\nimport Appbar from './Components/Appbar/newAppBar'\r\nimport Profile from './Components/Profile/Profile'\r\nimport Tasks from './Components/Tasks/Tasks'\r\nimport Task from './Components/Tasks/Task'\r\nimport Cases from './Components/Cases/Cases';\r\nimport Notifications from './Components/Notifications/Notifications'\r\nimport Home from './Components/Home/Home'\r\nimport TasksObserver from './Components/Moderator/TasksObserver'\r\nimport Signin from './Components/Auth/Signin';\r\nimport PrivateRoute from './util/PrivateRoute';\r\nimport FAQ from './Components/FAQ/FAQ';\r\nimport Page from \"./Components/Page/Page\";\r\nimport JSchemaTask from \"./Components/Tasks/JSchemaTask\";\r\n\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Grid container justify=\"center\">\r\n        <Appbar>\r\n          <Switch>\r\n            <Route exact path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route exact path=\"/request\">\r\n              <Cases />\r\n            </Route>\r\n            <Route exact path=\"/tasks\">\r\n              <Tasks />\r\n            </Route>\r\n            <Route path=\"/tasks/:id\">\r\n              <Task />\r\n            </Route>\r\n            <Route path=\"/t/:id\">\r\n              <JSchemaTask />\r\n            </Route>\r\n            <Route exact path=\"/tasksObserver\">\r\n              <TasksObserver />\r\n            </Route>\r\n            <Route exact path=\"/notifications\">\r\n              <Notifications />\r\n            </Route>\r\n            <Route exact path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n            <Route exact path=\"/faq\">\r\n              <FAQ />\r\n            </Route>\r\n            <Route path=\"/p/:id\">\r\n              <Page />\r\n            </Route>\r\n            <PrivateRoute path=\"/\" component={Home} />\r\n          </Switch>\r\n        </Appbar>\r\n      </Grid>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {AuthProvider} from './util/Auth'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthProvider>\r\n      <App />\r\n    </AuthProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}